[{"/home/asgeir/Desktop/master/client/src/index.js":"1","/home/asgeir/Desktop/master/client/src/App.js":"2","/home/asgeir/Desktop/master/client/src/reportWebVitals.js":"3","/home/asgeir/Desktop/master/client/src/store/reducers/rootReducer.js":"4","/home/asgeir/Desktop/master/client/src/routes.js":"5","/home/asgeir/Desktop/master/client/src/static/theme.js":"6","/home/asgeir/Desktop/master/client/src/components/notifications/alerter.js":"7","/home/asgeir/Desktop/master/client/src/components/layout/navbar.js":"8","/home/asgeir/Desktop/master/client/src/store/reducers/authReducer.js":"9","/home/asgeir/Desktop/master/client/src/store/reducers/cardReducer.js":"10","/home/asgeir/Desktop/master/client/src/store/reducers/cardgroupReducer.js":"11","/home/asgeir/Desktop/master/client/src/store/reducers/alertReducer.js":"12","/home/asgeir/Desktop/master/client/src/components/loginfunc.js":"13","/home/asgeir/Desktop/master/client/src/store/actions/authActions.js":"14","/home/asgeir/Desktop/master/client/src/static/wrappers.js":"15","/home/asgeir/Desktop/master/client/src/store/actionTypes.js":"16","/home/asgeir/Desktop/master/client/src/store/actions/cardgroupActions.js":"17","/home/asgeir/Desktop/master/client/src/store/actions/cardActions.js":"18","/home/asgeir/Desktop/master/client/src/components/submodules/cardview.js":"19","/home/asgeir/Desktop/master/client/src/components/submodules/groupview.js":"20","/home/asgeir/Desktop/master/client/src/components/dialogs/createCardGroup.js":"21","/home/asgeir/Desktop/master/client/src/components/dialogs/createCardDialog.js":"22","/home/asgeir/Desktop/master/client/src/components/dialogs/confirmDialog.js":"23","/home/asgeir/Desktop/master/client/src/components/dialogs/flashcardForm.js":"24","/home/asgeir/Desktop/master/client/src/components/submodules/cardgroupselect.js":"25","/home/asgeir/Desktop/master/client/src/store/reducers/loadingReducer.js":"26","/home/asgeir/Desktop/master/client/src/components/pages/userProfile.js.js":"27","/home/asgeir/Desktop/master/client/src/components/adminpages/allCards.js":"28","/home/asgeir/Desktop/master/client/src/components/adminpages/adminPage.js":"29","/home/asgeir/Desktop/master/client/src/components/adminpages/adminCardgroupPage.js":"30","/home/asgeir/Desktop/master/client/src/components/pages/home.js":"31","/home/asgeir/Desktop/master/client/src/components/pages/login.js":"32","/home/asgeir/Desktop/master/client/src/components/pages/cardGroupPage.js":"33","/home/asgeir/Desktop/master/client/src/components/notifications/loading.js":"34","/home/asgeir/Desktop/master/client/src/components/submodules/adminGroupCardView.js":"35","/home/asgeir/Desktop/master/client/src/components/layout/adminNavbar.js":"36","/home/asgeir/Desktop/master/client/src/components/adminpages/users.js":"37","/home/asgeir/Desktop/master/client/src/store/reducers/userReducer.js":"38","/home/asgeir/Desktop/master/client/src/store/actions/userActions.js":"39","/home/asgeir/Desktop/master/client/src/components/adminpages/deliveryStatus.js":"40","/home/asgeir/Desktop/master/client/src/components/dialogs/userDialog.js":"41","/home/asgeir/Desktop/master/client/src/components/dialogs/cardDialog.js":"42","/home/asgeir/Desktop/master/client/src/components/pages/peerreview.js":"43","/home/asgeir/Desktop/master/client/src/components/pages/peerReviewGroup.js":"44","/home/asgeir/Desktop/master/client/src/components/submodules/rateCard.js":"45","/home/asgeir/Desktop/master/client/src/components/pages/study.js":"46","/home/asgeir/Desktop/master/client/src/components/layout/footer.js":"47"},{"size":838,"mtime":1614774223704,"results":"48","hashOfConfig":"49"},{"size":1499,"mtime":1614956362428,"results":"50","hashOfConfig":"49"},{"size":362,"mtime":1614783077563,"results":"51","hashOfConfig":"49"},{"size":481,"mtime":1614774223704,"results":"52","hashOfConfig":"49"},{"size":3808,"mtime":1614950989475,"results":"53","hashOfConfig":"49"},{"size":1501,"mtime":1614953555040,"results":"54","hashOfConfig":"49"},{"size":1173,"mtime":1614854143647,"results":"55","hashOfConfig":"49"},{"size":4726,"mtime":1614956079795,"results":"56","hashOfConfig":"49"},{"size":1228,"mtime":1614774223704,"results":"57","hashOfConfig":"49"},{"size":1757,"mtime":1614774223704,"results":"58","hashOfConfig":"49"},{"size":1794,"mtime":1614852645739,"results":"59","hashOfConfig":"49"},{"size":705,"mtime":1614853702258,"results":"60","hashOfConfig":"49"},{"size":811,"mtime":1614785981769,"results":"61","hashOfConfig":"49"},{"size":4483,"mtime":1614785721018,"results":"62","hashOfConfig":"49"},{"size":672,"mtime":1614955755614,"results":"63","hashOfConfig":"49"},{"size":1227,"mtime":1614853486381,"results":"64","hashOfConfig":"49"},{"size":4014,"mtime":1614774223704,"results":"65","hashOfConfig":"49"},{"size":6189,"mtime":1614774223704,"results":"66","hashOfConfig":"49"},{"size":3135,"mtime":1614774223700,"results":"67","hashOfConfig":"49"},{"size":2425,"mtime":1614955447117,"results":"68","hashOfConfig":"49"},{"size":6358,"mtime":1614854652773,"results":"69","hashOfConfig":"49"},{"size":3339,"mtime":1614854753895,"results":"70","hashOfConfig":"49"},{"size":1211,"mtime":1614774223700,"results":"71","hashOfConfig":"49"},{"size":3714,"mtime":1614774223700,"results":"72","hashOfConfig":"49"},{"size":1759,"mtime":1614774223700,"results":"73","hashOfConfig":"49"},{"size":466,"mtime":1614775761233,"results":"74","hashOfConfig":"49"},{"size":902,"mtime":1614774223700,"results":"75","hashOfConfig":"49"},{"size":3086,"mtime":1614774223700,"results":"76","hashOfConfig":"49"},{"size":235,"mtime":1614786142923,"results":"77","hashOfConfig":"49"},{"size":863,"mtime":1614774223700,"results":"78","hashOfConfig":"49"},{"size":2707,"mtime":1614954152524,"results":"79","hashOfConfig":"49"},{"size":4111,"mtime":1614858402434,"results":"80","hashOfConfig":"49"},{"size":5810,"mtime":1614942986963,"results":"81","hashOfConfig":"49"},{"size":709,"mtime":1614785877592,"results":"82","hashOfConfig":"49"},{"size":1187,"mtime":1614774223700,"results":"83","hashOfConfig":"49"},{"size":2642,"mtime":1614943081608,"results":"84","hashOfConfig":"49"},{"size":4877,"mtime":1614787125826,"results":"85","hashOfConfig":"49"},{"size":1089,"mtime":1614774223704,"results":"86","hashOfConfig":"49"},{"size":4139,"mtime":1614853897260,"results":"87","hashOfConfig":"49"},{"size":2508,"mtime":1614774223700,"results":"88","hashOfConfig":"49"},{"size":1574,"mtime":1614774223700,"results":"89","hashOfConfig":"49"},{"size":1030,"mtime":1614774223700,"results":"90","hashOfConfig":"49"},{"size":1883,"mtime":1614951385508,"results":"91","hashOfConfig":"49"},{"size":2575,"mtime":1614953113127,"results":"92","hashOfConfig":"49"},{"size":4555,"mtime":1614953174895,"results":"93","hashOfConfig":"49"},{"size":552,"mtime":1614951163825,"results":"94","hashOfConfig":"49"},{"size":766,"mtime":1614956338992,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"p7npxu",{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"98"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"98"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"98"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"98"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"98"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"98"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"98"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"98"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"98"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"98"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"98"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"98"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"98"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"98"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"98"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"98"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"98"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"98"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"98"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"98"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"98"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"98"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"98"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"98"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/asgeir/Desktop/master/client/src/index.js",[],["215","216"],"/home/asgeir/Desktop/master/client/src/App.js",["217"],"/home/asgeir/Desktop/master/client/src/reportWebVitals.js",[],"/home/asgeir/Desktop/master/client/src/store/reducers/rootReducer.js",[],"/home/asgeir/Desktop/master/client/src/routes.js",["218","219","220"],"\nimport React, {useEffect} from \"react\"\nimport { BrowserRouter as Redirect, Route, Switch } from \"react-router-dom\";\n\nimport Home from \"./components/pages/home\"\nimport Login from \"./components/pages/login\"\nimport AllCards from './components/adminpages/allCards';\n// import CreateCardgroup from \"./components/createCardgroup\"\nimport logInFunc from './components/loginfunc';\nimport { checkLogInStatus } from \"./store/actions/authActions\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport CardGroupPage from './components/pages/cardGroupPage';\nimport { makeStyles } from \"@material-ui/core\";\nimport UserProfile from \"./components/pages/userProfile.js.js\";\nimport AdminCardGroupPage from './components/adminpages/adminCardgroupPage';\nimport Users from \"./components/adminpages/users\";\nimport AdminNavbar from './components/layout/adminNavbar';\nimport AdminPage from \"./components/adminpages/adminPage\";\nimport DeliveryStatus from './components/adminpages/deliveryStatus';\nimport PeerReview from \"./components/pages/peerreview\";\nimport PeerReviewGroup from \"./components/pages/peerReviewGroup\";\nimport Study from \"./components/pages/study\";\n\nconst useStyles = makeStyles(theme => ({\n    // pages: {\n    //     paddingLeft: \"auto\",\n    //     paddingRight: \"auto\",\n    //     alignItems: \"center\",\n    //     display: \"flex\",\n    //     paddingTop: theme.values.siteTopMargin        \n    // }\n\n})); \n\nconst FML = () => {\n\n    return (\n        <div>FML</div>\n    )\n}\n\nconst Routes = () => {\n\n    const classes = useStyles()\n    const loggedIn = useSelector(state => state.authReducer.loggedIn)\n    const isAdmin = useSelector(state => state.authReducer.isAdmin)\n    const dispatch = useDispatch();     \n    \n    useEffect(() => {\n        dispatch(checkLogInStatus())\n        console.log(\"is logged\", loggedIn)\n        console.log(\"is admin\", isAdmin)            \n        \n    }, [loggedIn, dispatch])   \n\n    // get log in status\n\n   \n\n    return(\n        <div className={classes.pages}>\n            <Switch>\n                <Route path=\"/\" exact component={loggedIn ? Home : Login}/>\n                <Route path=\"/loginfunc\" exact component={logInFunc}/>\n\n                {loggedIn ? \n                <React.Fragment>\n\n                    <Route path=\"/cardgroup/:id\" exact component={CardGroupPage} />\n                    <Route path=\"/peerreview\" exact component={PeerReview}/>\n                    <Route path=\"/peerreview/group/:id\" exact component={PeerReviewGroup}/>\n                    <Route path=\"/study\" exact component={Study}/>\n                    <Route path=\"/about\" exact component={ FML} />\n                    <Route path=\"/userprofile/:username\" exact component={UserProfile} />\n                    {isAdmin ? \n                    <React.Fragment>\n                        {/* <Route path=\"/adminpage\" exact component={AdminPage} /> */}\n                    \n                        <Route\n                            path=\"/adminpage\"\n                            render={({ match: { url } }) => (\n                            <>\n                                <AdminNavbar />    \n                                <Route path={`${url}/`} component={AdminPage} exact />\n                                <Route path={`${url}/users`} component={Users} />\n                                <Route path={`${url}/deliverystatus`} component={DeliveryStatus} />\n                                <Route path={`${url}/allcards`} component={AllCards} />\n                            </>\n                            )}\n                        />\n                    </React.Fragment>\n                     :    \n                    <React.Fragment>\n                    </React.Fragment>}\n                </React.Fragment> : <div></div>}\n            </Switch>\n        </div>\n    )\n}\n\nexport default Routes","/home/asgeir/Desktop/master/client/src/static/theme.js",[],"/home/asgeir/Desktop/master/client/src/components/notifications/alerter.js",["221"],"\nimport React, {useEffect} from \"react\"\nimport {Alert} from '@material-ui/lab/';\nimport { useSelector } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { useDispatch } from 'react-redux';\nimport { CLEAR_ALERT } from \"../../store/actionTypes\";\n\n\n\nconst Alerter = () => {\n\n    const severity = useSelector(state => state.alertReducer.severity)\n    const text = useSelector(state => state.alertReducer.text)\n    const newAlert = useSelector(state => state.alertReducer.newAlert)\n    \n    const [open, setOpen] = React.useState(false);\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n      if (newAlert){\n        setOpen(true)\n        dispatch({type: CLEAR_ALERT})\n      }\n    }, [newAlert])\n  \n    const handleClose = (event, reason) => {\n      if (reason === 'clickaway') {\n        return;\n      }  \n      setOpen(false);\n    };\n  \n    \n    return(\n        \n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n            <Alert \n                onClose={handleClose}\n                severity={severity}\n            >{text}\n            </Alert>                \n      </Snackbar>\n    )\n}\n\nexport default Alerter","/home/asgeir/Desktop/master/client/src/components/layout/navbar.js",["222","223"],"/home/asgeir/Desktop/master/client/src/store/reducers/authReducer.js",[],"/home/asgeir/Desktop/master/client/src/store/reducers/cardReducer.js",[],"/home/asgeir/Desktop/master/client/src/store/reducers/cardgroupReducer.js",[],"/home/asgeir/Desktop/master/client/src/store/reducers/alertReducer.js",[],"/home/asgeir/Desktop/master/client/src/components/loginfunc.js",["224","225"],"import { Redirect, useHistory } from \"react-router-dom\";\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { signInCallack } from '../store/actions/authActions';\nimport authReducer from \"../store/reducers/authReducer\";\nimport { useSelector } from 'react-redux';\nimport Loading from \"./notifications/loading\";\nimport {PageWrapper} from \"../static/wrappers\"\n\n\nconst LogInFunc = () => {\n    const dispatch = useDispatch();    \n    const loggedIn = useSelector(state => state.authReducer.loggedIn)\n\n    useEffect(() => {\n        dispatch(signInCallack())\n    }, [dispatch])   \n\n    const history = useHistory()\n    if (loggedIn){\n      history.push(\"/\")\n    }\n\n\n    return( \n        <PageWrapper>\n          <Loading /> \n        </PageWrapper>\n      )\n\n\n}\n\nexport default LogInFunc","/home/asgeir/Desktop/master/client/src/store/actions/authActions.js",["226"],"\nimport axios from 'axios';\nimport { LOG_IN_CALLBACK, LOG_IN_STATUS, LOG_OUT, SET_ALERT, SET_LOADING } from '../actionTypes';\n\n\n\n\nexport const signInCallack = () => async (dispatch) => {\n    dispatch({type: SET_LOADING, payload: true})\n    await axios.get(\"/api/login/callback\", { withCredentials: true })\n        .then(res => {\n            if(res.data.error){\n                throw new Error(res.data.error)\n            }\n            let user_token = res.data.user_token\n            let refresh_token = res.data.refresh_token\n            console.log(\"action, usertoken\", user_token)\n            console.log(\"action, refresh\", refresh_token)\n            localStorage.setItem(\"user_token\", user_token)\n            localStorage.setItem(\"refresh_token\", refresh_token)\n            const payload = {loggedIn: true}\n            dispatch({type: LOG_IN_CALLBACK, payload})\n        })\n        .catch(err => {\n            console.log(\"Error in signInCallback\", err)\n            const alert = {severity: \"error\", text: err.toString()}\n            dispatch({type: SET_ALERT, payload: alert})\n        })\n    dispatch({type: SET_LOADING, payload: false})\n}\n\nexport const adminOnly = () => async (dispatch) => {\n    axios.get(\"/api/adminonly\", {\n        headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"user_token\")}`\n        }\n    })\n    .then(res => {\n        console.log(\"from admin test\")\n        if(res.data.error){\n            throw new Error(res.data.error)\n        }\n        console.log(res.data)       \n        const alert = {severity: \"success\", text: res.data.status}\n        dispatch({type: SET_ALERT, payload: alert})\n \n\n        // dispatch({type: LOG_IN_CALLBACK, payload})\n    })\n    .catch(err => {\n        console.log(\"Error in signInCallback\", err)\n        const alert = {severity: \"error\", text: err.toString()}\n        dispatch({type: SET_ALERT, payload: alert})\n    })\n}\n\nexport const checkLogInStatus = () => async (dispatch, getState) => {\n    \n    const user_token = localStorage.getItem(\"user_token\")\n    const refresh_token = localStorage.getItem(\"refresh_token\")\n\n    console.log(\"user_token?\", Boolean(user_token))\n    console.log(\"refresh_token?\", Boolean(refresh_token))\n\n    if (user_token && refresh_token){\n        console.log(\"found both tokens\")\n        axios.get(\"/api/getcurrentuser\", {\n            headers: {\n                Authorization: `Bearer ${localStorage.getItem(\"user_token\")}`\n            }\n        }).then(res => {\n            if(res.data.error){\n                throw new Error(res.data.error)\n            }\n            console.log(\"found user?\", res.data)\n            console.log(\"true? \", res.data.role === \"Admin\")\n            let payload = {loggedIn: true, loggedInUser: res.data, isAdmin: res.data.role == \"Admin\"}\n            dispatch({type: LOG_IN_STATUS, payload})\n        }).catch(err => {\n            console.log(\"error..\", err)\n            let payload = {loading: false, loggedInUser: {}}\n            dispatch({type: LOG_IN_STATUS, payload})\n\n            // const alert = {severity: \"error\", text: err.toString()}\n            // dispatch({type: SET_ALERT, payload: alert})\n        })\n    }\n    else {\n        console.log(\"no user logged in\")\n        let payload = {loggedIn: false, loggedInUser: {}, loading: false}\n        dispatch({type: LOG_IN_STATUS, payload})\n    }\n\n}\n\nexport const signOut = () => async (dispatch, getState) => {\n\n    if (localStorage.getItem(\"user_token\")) {\n        const token = localStorage.getItem(\"user_token\")\n        axios.post(\"/api/logout/access\", {}, {\n            headers: {\n                Authorization: `Bearer ${token}`\n            }\n        }).then(res => {\n            if (res.data.error) {\n                console.error(res.data.error)\n            } else {\n                localStorage.removeItem(\"user_token\")\n            }\n        })\n    }\n    if (localStorage.getItem(\"refresh_token\")) {\n        const refreshToken = localStorage.getItem(\"refresh_token\")\n        axios.post(\"/api/logout/refresh\", {}, {\n            headers: {\n                Authorization: `Bearer ${refreshToken}`\n            }\n        }).then(res => {\n            if(res.data.error){\n                throw new Error(res.data.error)\n            } else {\n                localStorage.removeItem(\"refresh_token\")\n            }\n        })\n    }\n    localStorage.clear();\n\n    console.log(\"logging out...\")\n    const payload = {loggedIn: false, loggedInUser: {}}\n    dispatch({type: LOG_OUT, payload})\n\n}\n\n","/home/asgeir/Desktop/master/client/src/static/wrappers.js",[],"/home/asgeir/Desktop/master/client/src/store/actionTypes.js",[],"/home/asgeir/Desktop/master/client/src/store/actions/cardgroupActions.js",["227","228"],"\nimport axios from 'axios';\nimport { SET_ALERT, CREATE_CARDGROUP, SET_LOADING, LOAD_CARDGROUPS, DELETE_CARDGROUP, DELETE_CARDGROUP_ERROR, LOAD_CARDGROUP } from '../actionTypes';\n\nconst Sleep = (milliseconds) => {\n    return new Promise(resolve => setTimeout(resolve, milliseconds))\n  }\n\nexport const addCardgroup = (cardgroup) => async( dispatch, getState) => {\n        \n    \n    console.log(\"c cardgroup\")\n    console.log(cardgroup)\n\n    axios.post(\"/api/addcardgroup\", {\n            title: cardgroup.title,\n            numberOfCardsDue: cardgroup.numberOfCardsDue,\n            dueDate: cardgroup.dueDate\n        }, {\n            headers: {\n                Authorization: \"Bearer \" + localStorage.getItem(\"user_token\")\n            }\n        })\n        .then(res => {\n            if(res.data.error){\n                throw new Error(res.data.error)\n            }\n            console.log(\"returned\")\n            console.log(res.data)\n            \n            if(res.data.error){\n                console.log(\"error\")\n                throw new Error(res.data.error)\n            }\n\n\n            const createdCardgroup = res.data\n            console.log(createdCardgroup.dueDate)\n\n            console.log(\"was created, \", createdCardgroup)\n            let alert = {severity: \"success\", text: \"successfully created cardgroup: \"+createdCardgroup.title}\n            dispatch({type: SET_ALERT, payload: alert})\n            dispatch({type: CREATE_CARDGROUP, payload: createdCardgroup})\n        })\n        .catch(err => {\n            console.log(\"This is an error yes plz\")\n            let alert = {severity: \"error\", text: err.toString()}\n            dispatch({type: SET_ALERT, payload: alert})\n            // dispatch({type: CREATE_CARDGROUP_ERROR, err})\n        })\n\n    console.log(\"async call up in hier\", cardgroup)\n    \n};\n\n\nexport const loadCardgroups = () => async (dispatch, getState) => {\n    dispatch({type: SET_LOADING, payload: true})\n\n\n    await axios.get(\"/api/cardgroups\")\n    .then(res => {\n        if(res.data.error){\n            console.log(\"error\")\n            throw new Error(res.data.error)\n        }\n        const cardgroups = res.data\n        console.log(\"mah cardgroups\")\n        \n        console.log(cardgroups)\n        dispatch({type: LOAD_CARDGROUPS, payload: cardgroups})\n    })\n    .catch(err => console.log(err))\n\n    dispatch({type: SET_LOADING, payload: false})\n}\n\n\n\nexport const loadCardgroup = (groupId) => async (dispatch) => {\n    dispatch({type: SET_LOADING, payload: true})\n\n    await axios.get(\"/api/cardgroup/\"+groupId)\n    .then(res => {\n        console.log(\"res,\", res)\n        if(res.data.error){\n            console.log(\"error\")\n            throw new Error(res.data.error)\n        }\n        const cardgroup = [res.data]\n        console.log(\"cardgroup found\")\n        \n        console.log(cardgroup)\n        dispatch({type: LOAD_CARDGROUP, payload: cardgroup})\n    })\n    .catch(err => {\n        let alert = {severity: \"error\", text: err.toString()}\n        dispatch({type: SET_ALERT, payload: alert})\n    })\n\n    dispatch({type: SET_LOADING, payload: false})\n\n}\n\nexport const deleteCardgroup = (cardgroup) => async (dispatch, getState) => {\n    console.log(\"and action\")\n    console.log(cardgroup.id)\n\n    await axios.delete(\"/api/deletegroup/\" + cardgroup.id, \n    {headers: { \n        Authorization: \"Bearer \" +localStorage.getItem(\"user_token\") \n    }}\n    ).then(res => {\n        console.log(\"to be deleted\")\n        if(res.data.error){\n            console.log(\"error\")\n            throw new Error(res.data.error)\n        }\n\n        let alert = {severity: \"success\", text: \"successfully deleted cardgroup: \"+cardgroup.title}\n        dispatch({type: SET_ALERT, payload: alert})\n        dispatch({type: DELETE_CARDGROUP, payload: cardgroup})        \n    })\n    .catch(err => {\n\n        let alert = {severity: \"error\", text: err.toString()}\n        dispatch({type: SET_ALERT, payload: alert})\n        // dispatch({type: DELETE_CARDGROUP_ERROR, payload: cardgroup}) \n    })\n\n}\n\n\n\n\n","/home/asgeir/Desktop/master/client/src/store/actions/cardActions.js",[],"/home/asgeir/Desktop/master/client/src/components/submodules/cardview.js",["229"],"\nimport { useState } from 'react';\nimport { Card, IconButton, Typography } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\n\nimport { useDispatch, useSelector} from \"react-redux\"\nimport { Grid } from '@material-ui/core/';\nimport { deleteCard } from '../../store/actions/cardActions';\nimport FlashcardForm from '../dialogs/flashcardForm';\nimport loadingReducer from '../../store/reducers/loadingReducer';\nimport Loading from '../notifications/loading';\n\n\n\nconst CardView = props => {\n\n    const dispatch = useDispatch();\n    const [editCard, setEditCard] = useState({})\n    const [open, setOpen] = useState(false);\n    const loading = useSelector(state => state.loadingReducer.loading)\n\n    const handleClickOpen = () => {\n        setOpen(true);\n      };\n\n    const handleClose = (value) => {\n        setOpen(false);\n      };\n\n\n    const deleteThisCard = card => {     \n        dispatch(deleteCard(card))   \n    }\n\n    \n    const editThisCard = card => {\n        console.log(\"edit\", card)\n        setEditCard(card)    \n        handleClickOpen()\n    }\n    console.log(\"car1ds\", props.cards)\n    \n    let cardItems = []\n    if (props.cards.length){\n    props.cards.map((card, index) => (        \n        cardItems[index] = \n        <Grid item xs={12}>\n        <Card key={card.id} style={{padding: \"10px\", margin: \"5px\"}}>\n        <Grid container spacing={0}> \n            <Grid item xs={11}>\n                <Typography variant=\"subtitle2\" >\n                    Front:\n                </Typography>\n                <Typography variant=\"caption\" >\n                    {card.front}\n                </Typography>\n                <Typography variant=\"subtitle2\" >\n                    Back:\n                </Typography>\n                <Typography variant=\"caption\" >\n                    {card.back}\n                </Typography>\n            </Grid>\n            <Grid item xs={1} style={{padding: \"auto\"}} >\n                <IconButton onClick = {() => editThisCard(card)}> \n                    <EditIcon style={{fontSize: \"20px\"}} /> \n                </IconButton>\n                <IconButton onClick = {() => deleteThisCard(card)}> \n                    <DeleteIcon style={{fontSize: \"20px\"}} /> \n                </IconButton>\n            </Grid>        \n        </Grid>\n    </Card>\n    \n    </Grid>))\n    }\n\n    \n    if (loading){\n        return <Loading />\n    }\n\n    return (\n        \n        <div>\n            {editCard ? \n            <FlashcardForm open={open} onClose={handleClose} cardgroupId={1} card={editCard}  />\n            : <div> </div> }\n            \n            \n            {cardItems.length ? \n            \n            <Grid container spacing={0}> \n             {cardItems} \n            </Grid>\n            \n            : \n            <div style={{color: \"grey\", marginTop: \"150px\"}}>\n                <Typography variant=\"h5\">No cards</Typography>\n                <Typography variant=\"body1\">Add cards using the <i>Add Flashcard</i> button</Typography>\n            </div>}\n            \n            \n        </div>\n    )\n}\n\nexport default CardView","/home/asgeir/Desktop/master/client/src/components/submodules/groupview.js",["230","231","232"],"/home/asgeir/Desktop/master/client/src/components/dialogs/createCardGroup.js",["233"],"\nimport { Button, \n    Grid, \n    TextField,\n    Dialog,\n    Typography,\n    makeStyles\n} from '@material-ui/core';\nimport DateFnsUtils from '@date-io/date-fns';\n\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n  } from '@material-ui/pickers';\n  \n\nimport React, { useState } from 'react';\n\n\nimport { addCardgroup } from '../../store/actions/cardgroupActions';\nimport {  useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport ConfirmDialog from \"./confirmDialog\"\nimport { useSelector } from 'react-redux';\n\nconst useStyles = makeStyles(theme => ({\n    dialog: {\n        \"& .MuiDialog-paperScrollPaper\": {\n            maxHeight: \"100vh\",\n        },\n    }\n}))\n\nconst CreateCardGroup = (props) => {\n    const { onClose, selectedValue, open } = props;\n    const dispatch = useDispatch();    \n    \n    const [selectedDate, setSelectedDate] = React.useState(null);\n    const [title, setTitle] = useState(\"\");\n    const [numberOfCards, setNumberOfCards] = useState(0)\n    const [time, setTime] = useState(\"23:59\")\n    const formSubmitCallback = useSelector(state => state.alertReducer.severity)\n    const newStatus = useSelector(state => state.alertReducer.newAlert)\n\n    const classes = useStyles()\n\n\n\n    const handleDateChange = (date) => {\n      setSelectedDate(date);\n    };\n\n    useEffect(() => {\n        console.log(\"stformSubmitCallback\")\n        if (formSubmitCallback===\"success\"){\n            handleClose()\n        }\n\n    },[newStatus])\n\n    const submit = e => {\n        e.preventDefault()        \n\n      \n\n\n        if (title && selectedDate && numberOfCards && time){\n            console.log(selectedDate)\n\n            let year = selectedDate.getFullYear()\n            let month = selectedDate.getMonth()+1\n            let date = selectedDate.getDate()\n            let hour = time.split(\":\")[0]\n            let minute = time.split(\":\")[1]\n            let second = 59\n\n            dispatch(addCardgroup({\n                title: title,        \n                dueDate: {\n                    year,\n                    month,\n                    date,\n                    hour,\n                    minute,\n                    second\n                },\n                numberOfCardsDue: numberOfCards        \n            }))              \n        }\n        else{\n        }\n    }\n\n\n    const handleClose = () => {\n        setSelectedDate(null)\n        setTitle(\"\")\n        setNumberOfCards(0)\n        setTime(\"23:59\")\n\n        \n\n        onClose(selectedValue);\n    };\n    \n    return (\n      <Dialog onClose={handleClose} \n        className={classes.dialog}\n\n       open={open} style={{ margin: \"100px\"}}>\n          <ConfirmDialog></ConfirmDialog>\n            \n            <div style={{margin: \"40px 40px\"}}> \n\n            <Grid container spacing={2}>\n                <Grid item xs={12} >\n                    <Typography variant=\"h6\" align=\"left\" >New Cardgroup</Typography>\n                </Grid>\n            </Grid>\n\n\n            <form onSubmit={submit} >\n            <Grid container spacing={2}>\n                <Grid item xs={12}>\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField \n                        color=\"secondary\"\n                        onChange={e => setTitle(e.target.value)} \n                        fullWidth \n                        required \n                        variant=\"outlined\" \n                        label=\"Cardgroup title\"/>\n                </Grid>\n\n                <Grid item xs={12}>\n                <TextField\n                    fullWidth\n                    color=\"secondary\"\n                    id=\"outlined-number\"\n                    label=\"Number of flashcards for delivery pr student\"\n                    type=\"number\"\n                    required\n                    onChange={e => setNumberOfCards(e.target.value)} \n                    variant=\"outlined\"\n                />\n                </Grid>\n\n                <Grid item xs={6}>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <KeyboardDatePicker\n                        fullWidth\n                        disableToolbar         \n                        required    \n                        inputVariant=\"outlined\"           \n                        variant=\"outlined\"\n                        format=\"MM/dd/yyyy\"\n                        // margin=\"normal\"\n                        id=\"date-picker-inline\"\n                        label=\"Due date for delivery\"\n                        value={selectedDate}\n                        \n                        onChange={handleDateChange}\n                        onClick={console.log(\"close\")}\n                        color=\"secondary\"\n                        autoOk\n                        animateYearScrolling\n                        KeyboardButtonProps={{\n                            'aria-label': 'change date',\n                        }}\n                        />                 \n                </MuiPickersUtilsProvider>                   \n\n                    </Grid>\n                    <Grid item xs={6} >\n                    <TextField\n                            fullWidth\n                            id=\"time\"\n                            label=\"\"\n                            type=\"time\"\n                            variant=\"outlined\"\n                            onChange = {e => setTime(e.target.value)}\n                            defaultValue=\"23:59\"\n                            color=\"secondary\"\n                            InputLabelProps={{\n                                shrink: true,\n                                }}\n                            // inputProps={{\n                            //     step: 1440, // 5 min\n                            // }}\n                          />\n                    </Grid>\n\n\n               \n\n                \n                <Grid item xs={6}>\n                    <Button variant=\"contained\" onClick={handleClose} fullWidth color=\"primary\"  > Back</Button>\n                </Grid>\n                <Grid item xs={6}>\n                    <Button type=\"submit\" fullWidth style={{backgroundColor: selectedDate && title && numberOfCards ? \"green\" : \"grey\", color: \"white\"}}>Submit</Button>\n                </Grid>\n\n                </Grid>\n                </form>\n\n\n                </div>\n      </Dialog>\n    );\n}\n  \nexport default CreateCardGroup\n\n","/home/asgeir/Desktop/master/client/src/components/dialogs/createCardDialog.js",[],"/home/asgeir/Desktop/master/client/src/components/dialogs/confirmDialog.js",[],"/home/asgeir/Desktop/master/client/src/components/dialogs/flashcardForm.js",[],"/home/asgeir/Desktop/master/client/src/components/submodules/cardgroupselect.js",["234","235","236"],"import React, {useEffect} from \"react\"\nimport { FormControl, InputLabel, Select, makeStyles, MenuItem } from \"@material-ui/core\"\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { loadCards } from \"../../store/actions/cardActions\";\nimport { loadCardgroups } from \"../../store/actions/cardgroupActions\";\n\n\n\n\n\n\nconst CardgroupSelect = props => {\n\n    \n\n    const cardgroups = useSelector(state => state.cardgroupReducer.cardgroups)\n    \n    const dispatch = useDispatch();\n\n    // console.log(\"is token?\", localStorage.getItem(\"user_token\"))\n\n    useEffect(() => {\n        dispatch(loadCardgroups())\n    }, [])   \n\n\n\n    let cardgroupMenuitems = []\n\n    cardgroups.map((cardgroup, index) => (\n\n        cardgroupMenuitems[index] = <MenuItem key={index} value={cardgroup.id}>{cardgroup.title} </MenuItem>\n            \n    ))\n  \n    const [group, setGroup] = React.useState('');\n    \n\n    const handleChange = (event) => {\n      setGroup(event.target.value);\n      if (props.onChange){\n        props.onChange(event.target.value)\n      }\n    };\n  \n\n    return(\n        <FormControl fullWidth variant=\"outlined\" >\n            <InputLabel id=\"demo-simple-select-outlined-label\">Cardgroup</InputLabel>\n            <Select\n            required\n            color=\"secondary\"\n            labelId=\"demo-simple-select-outlined-label\"\n            id=\"demo-simple-select-outlined\"\n            value={group}\n            onChange={handleChange}\n            label=\"group\"\n            >\n            \n            {cardgroupMenuitems.length ? cardgroupMenuitems : <MenuItem value=\"\">\n                <em>No groups exists</em>\n            </MenuItem> }\n\n            </Select>\n      </FormControl>\n    )\n\n}\n\nexport default CardgroupSelect","/home/asgeir/Desktop/master/client/src/store/reducers/loadingReducer.js",["237"],"\nimport { SET_LOADING, STOP_LOADING } from '../actionTypes';\n\nconst initState = {\n    loading: false\n}\n\nconst loadingReducer = (state = initState, action) => {\n\n    switch(action.type){\n        case SET_LOADING:\n            console.log(\"laading\", action)\n            return {\n                loading: action.payload\n            }               \n        default:\n            console.log(\"default alert\")\n            return state\n    }\n}\n\nexport default loadingReducer","/home/asgeir/Desktop/master/client/src/components/pages/userProfile.js.js",[],"/home/asgeir/Desktop/master/client/src/components/adminpages/allCards.js",["238","239"],"import { PageWrapper } from \"../../static/wrappers\"\nimport { useDispatch, useSelector } from 'react-redux';\nimport userReducer from '../../store/reducers/userReducer';\nimport { useEffect } from 'react';\nimport {  getUsersStatus } from '../../store/actions/userActions';\nimport { DataGrid } from '@material-ui/data-grid';\nimport CardgroupSelect from '../submodules/cardgroupselect';\nimport { useState } from 'react';\nimport { Typography } from \"@material-ui/core\";\nimport { loadCardgroupFlashcards } from \"../../store/actions/cardActions\";\nimport CardDialog from \"../dialogs/cardDialog\";\n\n\n const AllCards = () => {\n\n    const dispatch = useDispatch()\n    const cards = useSelector(state => state.cardReducer.cards)\n    const [openCard, setOpenCard] = useState(false);\n    const [selectedCard, setSelectedCard] = useState({})\n\n\n    const [cardGroupId, setCardGroupId] = useState(0)\n\n\n    useEffect(() => {\n        dispatch(loadCardgroupFlashcards(cardGroupId)) \n        console.log(\"status\")\n    }, [dispatch, cardGroupId])\n    \n    console.log(\"cards\")\n    console.log(cards)\n\n    const columns = [\n        { field: 'username', headerName: 'Username', width: 130 },\n        { field: 'front', headerName: 'Card Front', width: 130 },\n        { field: 'back', headerName: 'Card Back', width: 130 },\n    ]      \n\n    let rows = cards.map(c => (\n        {\n            id: c.id,\n            name: c.user.name,\n            username: c.user.username,\n            front: c.front,\n            back: c.back\n        }\n    ))\n    \n    const handleClick = e => {\n        console.log(\"print\", e.row)\n        setSelectedCard(e.row)\n        setOpenCard(true)\n    }\n    \n    console.log(\"cgid\", cardGroupId)\n    return (\n        <PageWrapper>       \n            <CardDialog open={openCard} onClose={() => setOpenCard(false)} card={selectedCard} />\n            <div style={{marginBottom: \"15px\"}} >\n                <CardgroupSelect onChange={setCardGroupId} />\n                <Typography variant=\"subtitle2\" style={{marginTop: \"20px\"}}>\n                {/* {status[0] ? \"Due: \" + dateToString(status[0].cardgroup.dueDate) : \"Due:\"} */}\n                </Typography>\n            </div>\n\n                <div style={{ height: 400, width: '100%' }}>\n \n                <DataGrid  onCellClick={e => handleClick(e)} rows={rows} columns={columns} pageSize={5}  />\n            </div>\n        </PageWrapper>\n    )\n}\n\nexport default AllCards\n\n\n\n\n// import {useDispatch, useSelector} from \"react-redux\"\n// import { useEffect } from 'react';\n// import { loadCards, loadCardgroupFlashcards } from '../../store/actions/cardActions';\n// import CardView from '../submodules/cardview';\n// import {PageWrapper} from \"../../static/wrappers\"\n\n// const AllCards = props => {\n\n//     const cards = useSelector(state => state.cardReducer.cards)\n    \n//     const dispatch = useDispatch();\n\n//     useEffect(() => {\n//         dispatch(loadCards())   \n//     }, [dispatch])   \n\n\n//     return(\n//         <PageWrapper> \n//             <CardView cards={cards}/>\n//         </PageWrapper>\n//     )\n// }\n\n// export default AllCards","/home/asgeir/Desktop/master/client/src/components/adminpages/adminPage.js",["240"],"import { Redirect, useHistory } from \"react-router-dom\"\n\n\n\n\n\n\nconst AdminPage = () => {\n\n    const history = useHistory()\n    history.push(\"/adminpage/users\")\n\n    return(\n        <div>\n\n        </div>\n    )\n}\n\nexport default AdminPage","/home/asgeir/Desktop/master/client/src/components/adminpages/adminCardgroupPage.js",["241","242"],"import { PageWrapper } from \"../../static/wrappers\"\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { loadCardgroupFlashcards } from '../../store/actions/cardActions';\nimport CardView from \"../submodules/cardview\";\nimport AdmingroupCardView from \"../submodules/adminGroupCardView\";\n\n\n\nconst AdminCardGroupPage = props => {\n\n    const cards = useSelector(state => state.cardReducer.cards)\n    const dispatch = useDispatch()\n\n    const cardgroupId = props.match.params.id\n\n\n    useEffect(() => { \n        dispatch((loadCardgroupFlashcards(cardgroupId)))\n    }, [dispatch])\n\n    console.log(\"cards\", cards)\n    return (\n        <PageWrapper> \n        <div>\n            <AdmingroupCardView cards={cards} />\n        </div>\n        </PageWrapper>\n    )\n}\n\nexport default AdminCardGroupPage","/home/asgeir/Desktop/master/client/src/components/pages/home.js",["243","244"],"/home/asgeir/Desktop/master/client/src/components/pages/login.js",["245"],"import React, { useState} from \"react\"\nimport  { Redirect } from 'react-router-dom'\nimport TextField from '@material-ui/core/TextField';\nimport axios from \"axios\";\nimport { Button, Icon, Link } from \"@material-ui/core\";\nimport { styled } from '@material-ui/core/styles';\nimport { useDispatch  } from 'react-redux';\nimport { PageWrapper } from \"../../static/wrappers\";\nimport { SET_ALERT, SET_LOADING } from \"../../store/actionTypes\";\nimport Loading from \"../notifications/loading\";\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\n\n\nconst StyledLink = styled(Link)({\n  color: \"black\",\n  padding: \"20px\"    \n})\n\nconst ManualLogin = () => {\n  \n  const [username, setUsername] = useState(\"\")\n  const [email, setEmail] = useState(\"\")\n  const [name, setName] = useState(\"\")\n  const dispatch = useDispatch()\n  const [manualredirect, setManualredirect] = useState(false)\n\n\n  const manualLogin = e =>{\n    e.preventDefault()\n    if (username && email && name){\n      let data = {\n        username: username,\n        email: email,\n        name: name\n      }      \n\n      var url = '/api/userdata';\n      fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(data),\n        credentials: 'include',   // this line has been added for sessions \n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n      .then(response => response.json())\n      .then((data) => {\n        console.log(data);\n        if (data.status === \"success\"){\n          console.log(\"redirecting\")\n          setManualredirect(true)\n        } else {\n          throw(data.error) \n        }\n      })\n      .catch(err => {\n        let alert = {severity: \"error\", text: err}\n        dispatch({type: SET_ALERT, payload: alert}) \n  \n      })\n    } else {\n      let alert = {severity: \"error\", text: \"Missing credentials for login\"}\n      dispatch({type: SET_ALERT, payload: alert}) \n    }\n\n  }\n\n  if (manualredirect) {\n    return( \n      <Redirect to={{\n        pathname: \"/loginfunc\"\n      }}/>  \n    )\n  }\n  else {\n    return(\n      <div> \n          <div style={{marginBottom: 0, marginTop: \"50px\",}}> \n            <h3 style={{fontSize: \"14px\", color: \"#666\", display: \"inline\", padding: \"12px\"}}>ALTERNATIVE LOGIN - JUST FOR TESTING</h3> \n          </div>\n          <form onSubmit={manualLogin}>\n            <TextField  label=\"username\" onChange={e => setUsername(e.target.value)} required />  <br />\n            <TextField  label=\"name\" onChange={e => setName(e.target.value)} required/> <br />\n            <TextField  label=\"email\" onChange={e => setEmail(e.target.value)} required/> <br />\n            <Button  variant=\"contained\"  style={{margin: \"30px\"}} type=\"submit\">Manual Login (for testing)</Button>\n          </form> \n        </div>\n    )\n  }\n}\n\nfunction Login() {\n\n  const [AlternativeLogin, setAlternativeLogin] = useState(false)\n  const dispatch = useDispatch()\n  let loading = false;\n  const feideLogin = () => {    \n    loading = !loading\n    dispatch({type: SET_LOADING, payload: loading}) \n    axios.get(\"/api/logintoken\", { withCredentials: true })\n    .then(res => {\n      window.open(res.data.url, \"_self\")\n    })  \n    .catch(err => {\n      console.log(\"err\", err)\n      let alert = {severity: \"error\", text: \"External login failed\"}\n      dispatch({type: SET_ALERT, payload: alert}) \n    })\n    dispatch({type: SET_LOADING, payload: true})\n  } \n\n\n\n  \n    return (\n    <PageWrapper style={{textAlign: \"center\", marginTop: \"15%\"}}>\n\n      <Button color=\"primary\" variant=\"contained\" onClick={feideLogin} style={{width: \"300px\", height: \"80px\"}}>\n        Log in with Feide<Loading style={{marginLeft: \"10px\", height: \"26px\", }} size={24} alternative={<VpnKeyIcon />} /> \n      </Button> <br/>\n      <div style={{padding: \"10px\"}}> \n        <StyledLink href=\"#\" onClick={e => setAlternativeLogin(!AlternativeLogin)}>Alternative login</StyledLink>\n        <StyledLink  target=\"_blank\" href=\"https://s.ntnu.no/glemt\" >Forgot Password</StyledLink>        \n      </div>\n\n      {AlternativeLogin ? \n        <ManualLogin />\n      : <div> </div>}\n    </PageWrapper>     \n  );\n\n}\n\nexport default Login;\n","/home/asgeir/Desktop/master/client/src/components/pages/cardGroupPage.js",["246","247","248","249"],"\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { loadCardGroupUserFlashcards } from '../../store/actions/cardActions';\nimport CardView from '../submodules/cardview';\nimport { deleteCardgroup, loadCardgroup } from '../../store/actions/cardgroupActions';\nimport { Button, Grid, LinearProgress, makeStyles, Typography } from '@material-ui/core';\nimport CreateCardDialog from '../dialogs/createCardDialog';\nimport {PageWrapper} from \"../../static/wrappers\"\nimport authReducer from '../../store/reducers/authReducer';\nimport loadingReducer from '../../store/reducers/loadingReducer';\nimport Loading from '../notifications/loading';\nimport userReducer from '../../store/reducers/userReducer';\nimport { Redirect } from 'react-router-dom';\n\nconst useStyles = makeStyles(theme => ({\n    addButton: {\n        backgroundColor: theme.palette.button.success.main,\n        color: \"white\",\n        border: \"none\",\n        align: \"center\",\n        '&:hover': {\n            background: theme.palette.button.success.dark,\n          }\n    },\n    delButton: {\n        backgroundColor: theme.palette.button.error.main,\n        color: \"white\",\n        border: \"none\",\n        align: \"center\",\n        '&:hover': {\n            background: theme.palette.button.error.dark,\n          }\n    },\n    progressBar: {\n        \"& .MuiLinearProgress-barColorPrimary\" : {\n            backgroundColor: theme.palette.button.success.main\n        }\n    }\n}))\n\n\nconst CardGroupPage = props => {\n    console.log(\"prop\")\n    console.log(props.match.params)\n\n    const [redirectHome, setRedirectHome] = useState(false)\n    const classes = useStyles()\n\n    const isAdmin = useSelector(state => state.authReducer.isAdmin)\n\n    const cards = useSelector(state => state.cardReducer.cards)\n    const cardgroup = useSelector(state => state.cardgroupReducer.cardgroups[0])\n    const user = useSelector(state => state.authReducer.loggedInUser)\n    const [open, setOpen] = useState(false);\n    const dispatch = useDispatch();\n\n    const percentage = Math.round(cards.length && cardgroup ?  100*(cards.length / cardgroup.numberOfCardsDue) : 0)\n    const loading = useSelector(state => state.loadingReducer.loading)\n\n    const handleClickOpen = () => {\n        setOpen(true);\n      };\n\n    const handleClose = (value) => {\n        setOpen(false);\n      };\n\n    const handleDelete = () => {\n        if (window.confirm(\"Are you sure you want to delete cardgroup with all cards?\")){ \n            dispatch(deleteCardgroup(cardgroup))\n            setRedirectHome(true)\n        }\n\n    }\n\n    console.log(\"cardgr.:\")\n    console.log(cardgroup)\n    \n    useEffect(() => {\n        console.log(\"stuff and things\") \n        console.log(cardgroup)\n        console.log(user)\n        dispatch(loadCardGroupUserFlashcards(props.match.params.id, user.id))       \n        dispatch(loadCardgroup(props.match.params.id))\n    }, [dispatch, props.match.params.id])   \n\n    // const date = cardgroup.dueDate\n    // let a = new Date(date.year, date.month-1, date.date, date.hour, date.minute)\n    // console.log(\"aa\", a)\n\n    const dateToString = date => {\n        let a = new Date(date.year, date.month-1, date.date, date.hour, date.minute)\n            console.log(\"aa\", a)\n            // return a.getUTCMonth()\n            return a.toString()\n      }\n\n    if (redirectHome){\n        return (\n            <Redirect to={{\n                pathname: \"/\"\n              }}/>  \n        )\n    }   \n    if (loading){\n        return (\n            <PageWrapper>\n                <Loading />\n            </PageWrapper>    \n        )\n    }\n    else return(\n        <PageWrapper>\n            <CreateCardDialog open={open} onClose={handleClose} cardgroupId={props.match.params.id} />           \n\n            {cardgroup ? \n            <Grid container spacing={6}>\n                <Grid item xs={8}>\n                    <Typography variant=\"h4\">{cardgroup.title}</Typography>\n                    <Typography variant=\"body2\">{cardgroup.numberOfCardsDue} cards are due \n                     {dateToString(cardgroup.dueDate)}\n                     </Typography>\n\n                    <div style={{marginTop: \"40px\"}}>\n                     <CardView cards={cards}/>\n                     </div>\n                </Grid>\n                \n                \n                <Grid item xs={4}>\n                    <Button fullWidth style={{height: \"80px\"}} className={classes.addButton} variant=\"outlined\" onClick={handleClickOpen}>\n                    + Add Flashcard\n                    </Button> \n                    <Grid container style={{margin: \"30px 0\", border: \"0px solid black\"}}>\n                        <Grid item xs={8}>\n                            <Typography variant=\"body1\">You've created</Typography>\n                            <Typography variant=\"body1\">{cards.length} of {cardgroup.numberOfCardsDue}</Typography>\n                        </Grid>\n                        <Grid item xs={4}>\n                           <Typography variant=\"h4\">{percentage}%</Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <LinearProgress className={classes.progressBar} variant=\"determinate\" value={percentage} />\n                        </Grid>\n                    </Grid>\n                    {isAdmin ? \n                    <Button fullWidth style={{height: \"80px\"}} className={classes.delButton} variant=\"outlined\" onClick={handleDelete}>\n                        Delete cardgroup and all cards\n                    </Button> : <div></div>}\n                </Grid>\n                <Grid item xs={7}>\n                    \n                </Grid>\n\n            </Grid> : <div>suo</div> }\n\n\n\n\n            \n\n\n            \n\n        </PageWrapper>\n    )\n\n  \n}\n\nexport default CardGroupPage","/home/asgeir/Desktop/master/client/src/components/notifications/loading.js",["250"],"\nimport { CircularProgress, makeStyles } from '@material-ui/core/';\nimport { useSelector } from 'react-redux';\nimport loadingReducer from '../../store/reducers/loadingReducer';\n\nconst useStyles = makeStyles(theme => ({\n    loader: {\n        textAlign: \"center\"\n    }\n}))\n\n\nconst Loading = (props) => {\n    const classes = useStyles()\n    const loading = useSelector(state => state.loadingReducer.loading)\n\n    return (\n        <div style={props.style} className={classes.loader}>\n            {loading ?\n                <CircularProgress size={props.size ? props.size : 40} color=\"secondary\" /> \n            : props.alternative ? props.alternative : <div></div>} \n        </div>\n    )\n}\n\nexport default Loading","/home/asgeir/Desktop/master/client/src/components/submodules/adminGroupCardView.js",[],"/home/asgeir/Desktop/master/client/src/components/layout/adminNavbar.js",["251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270"],"\nimport React, {useState, useEffect} from \"react\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport  { Redirect, NavLink, Link, useHistory } from 'react-router-dom'\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport {AppBar, ButtonGroup, Menu, MenuItem} from '@material-ui/core'\nimport PersonIcon from '@material-ui/icons/Person';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { signOut } from '../../store/actions/authActions';\nimport { NavBarWrapper, PageWrapper } from \"../../static/wrappers\";\nimport { ToggleButton, ToggleButtonGroup } from \"@material-ui/lab\";\n\n\nconst useStyles = makeStyles(theme => ({ \n    navlink: {\n        color: theme.palette.textColor,\n        textDecoration: \"none\"\n    },\n    button: {\n        width: \"250px\",\n        height: \"50px\",\n    }\n})); \n\n\nconst AdminNavbar = props => {\n\n    const classes = useStyles()    \n    const [alignment, setAlignment] = React.useState(0);\n    const history = useHistory() \n    const urls=[\n        {\n            url: \"/adminpage/users\",\n            label: \"Admin Page\"\n        },\n        {\n            url: \"/adminpage/deliverystatus\",\n            label: \"Delivery Status\"\n        },\n        {\n            url: \"/adminpage/allcards\",\n            label: \"All Cards\"\n        },\n    ]\n\n    useEffect(() => {\n        setAlignment(urls.findIndex(x => x.url === history.location.pathname))\n    }, [history.location.pathname])\n\n\n    \n    return( \n        <PageWrapper>\n\n            <Typography variant=\"h4\" style={{flexGrow: 0}}>\n                Amin Page\n            </Typography>\n\n            <Toolbar style={{padding: 0}}>                        \n                <ToggleButtonGroup\n                    fullWidth\n                    value={alignment}\n                    exclusive  \n                    aria-label=\"text alignment\"\n                >\n                    {urls.map((url, index) => \n                        <ToggleButton component={Link} value={index} to={url.url} className={classes.button} variant=\"outlined\">{url.label}</ToggleButton> \n                    )}        \n                </ToggleButtonGroup>  \n            </Toolbar>\n        </PageWrapper>\n    )\n}\n\nexport default AdminNavbar","/home/asgeir/Desktop/master/client/src/components/adminpages/users.js",["271","272","273"],"import { PageWrapper } from \"../../static/wrappers\"\nimport { useDispatch, useSelector } from 'react-redux';\nimport userReducer from '../../store/reducers/userReducer';\nimport { useEffect } from 'react';\nimport { getAllUsers, getUsersWithRole, searchUsers } from '../../store/actions/userActions';\nimport { DataGrid, SearchIcon } from '@material-ui/data-grid';\nimport { FormControl, MenuItem, TextField, Grid, Button, IconButton } from '@material-ui/core';\nimport { InputLabel } from '@material-ui/core';\nimport { Select } from '@material-ui/core';\nimport { useState } from 'react';\nimport UserDialog from \"../dialogs/userDialog\";\n\n\n const Users = (props) => {\n\n    const [show, setShow] = useState('all');\n\n\n    const dispatch = useDispatch()\n    const users = useSelector(state => state.userReducer.users)\n    const [openUserDialog, setOpenUserDialog] = useState(false);\n    const [selectedUser,setSelectedUser] = useState({})\n\n\n    const [searchPhrase, setSearchPhrase] = useState(\"\")\n    \n\n    const userRoleFiler = role => {\n        if (role===\"all\"){\n            console.log(\"all da\")\n            dispatch(getAllUsers())\n        } else if (role===\"User\"){\n            dispatch(getUsersWithRole(\"User\"))\n        } else if (role===\"Admin\"){\n            console.log(\"aadd\")\n            dispatch(getUsersWithRole(\"Admin\"))\n        }\n    }\n\n    useEffect(() => {\n        // dispatch(getAllUsers())          \n        userRoleFiler(show)\n    }, [dispatch, show])\n\n    let rows = users    \n\n    const columns = [\n        {field: \"id\", headerName: \"id\", width: 70},\n        {field: \"username\", headerName: \"username\", width: 130},\n        {field: \"name\", headerName: \"name\", width: 130},\n        {field: \"email\", headerName: \"email\", width: 130},\n        {field: \"role\", headerName: \"role\", width: 130}\n    ]      \n\n    const handleSearch = (e) => {      \n        if (!searchPhrase){\n            userRoleFiler(show)\n        }   else {     \n        dispatch(searchUsers(show, searchPhrase))   \n        }     \n    }\n\n    const handleFilter = e => {\n        setSearchPhrase(\"\")\n        setShow(e.target.value)\n    } \n\n    const handleClick = e => {\n        console.log(\"print\", e.row)\n        setSelectedUser(e.row)\n        setOpenUserDialog(true)\n    }\n    \n    return (\n        <PageWrapper>       \n            <UserDialog open={openUserDialog} onClose={() => setOpenUserDialog(false)} user={selectedUser} />\n            <Grid container spacing={1}>\n                <Grid item xs={6}>\n            \n                    <FormControl fullWidth variant=\"outlined\">\n                    <InputLabel id=\"demo-simple-select-label\">Filter</InputLabel>\n                        <Select\n                        // labelId=\"demo-simple-select-label\"\n                        // id=\"demo-simple-select\"\n                        // value={show}\n                        // onChange={e => setShow(e.target.value)}'\n                        required\n                        color=\"secondary\"\n                        value={show}\n                        onChange={e => handleFilter(e)}\n                        label=\"show\"\n            \n                        >\n                        <MenuItem value={\"all\"}>All users</MenuItem>\n                        <MenuItem value={\"Admin\"}>Admins</MenuItem>\n                        <MenuItem value={\"User\"}>Users</MenuItem>\n                        </Select>\n                    </FormControl> \n                </Grid>\n                <Grid item xs={6}>\n\n\n                        <TextField \n                                id=\"search\"\n                                label=\"Search username\"\n                                color=\"secondary\"\n                                defaultValue=\"\"\n                                fullWidth\n                                onKeyPress={(ev) => {\n                                    if (ev.key === 'Enter') {\n                                        handleSearch()\n                                    }\n                                  }}\n                                onChange={e => setSearchPhrase(e.target.value)}\n                                value={searchPhrase}\n                                variant=\"outlined\"\n                                InputProps={{endAdornment: \n                                    <IconButton onClick={handleSearch}>\n                                        <SearchIcon />\n                                    </IconButton>\n                                }}\n                            ></TextField>\n                        </Grid>\n\n                        <Grid item xs={12}>\n\n\n\n                        <div style={{ height: 400, width: '100%' }}> \n                    <DataGrid onCellClick={e => handleClick(e)} rows={rows} columns={columns} pageSize={5}  />\n                    </div>\n            </Grid>  \n            </Grid>     \n\n        </PageWrapper>\n    )\n}\n\nexport default Users","/home/asgeir/Desktop/master/client/src/store/reducers/userReducer.js",["274"],"import { GET_USERS, GET_DELIVERY_STATUS, UPDATE_USER } from \"../actionTypes\"\n\n\n\nconst initState = {\n    users: [],\n    status: []\n}\n\nconst userReducer = (state = initState, action) => {\n\n    switch(action.type){\n        case GET_USERS:\n            console.log(\"successfull get users\")\n            return {\n                ...state, \n                users: action.payload\n            }   \n        case GET_DELIVERY_STATUS:\n            console.log(\"successfull get status\")\n            return{\n                ...state,\n                status: action.payload\n            }\n\n        case UPDATE_USER:\n            console.log(\"updated user\")\n            return{\n                ...state,\n                users: state.users.map(user => {\n                    if (user.id == action.payload.id ) {\n                        return action.payload;\n                    } else {\n                        return user;\n                    }\n                })\n            }\n            \n        default:\n            console.log(\"default auth\")\n            return state\n    }\n}\n\nexport default userReducer","/home/asgeir/Desktop/master/client/src/store/actions/userActions.js",[],"/home/asgeir/Desktop/master/client/src/components/adminpages/deliveryStatus.js",["275","276","277"],"import { PageWrapper } from \"../../static/wrappers\"\nimport { useDispatch, useSelector } from 'react-redux';\nimport userReducer from '../../store/reducers/userReducer';\nimport { useEffect } from 'react';\nimport {  getUsersStatus } from '../../store/actions/userActions';\nimport { DataGrid } from '@material-ui/data-grid';\nimport CardgroupSelect from '../submodules/cardgroupselect';\nimport { useState } from 'react';\nimport { Typography } from \"@material-ui/core\";\n\n\n const DeliveryStatus = () => {\n\n    const dispatch = useDispatch()\n    // const users = useSelector(state => state.userReducer.users)\n    const status = useSelector(state => state.userReducer.status)\n\n    const [cardGroupId, setCardGroupId] = useState(0)\n\n\n    useEffect(() => {\n        dispatch(getUsersStatus(cardGroupId))\n        console.log(\"status\")\n        console.log(status)\n    }, [dispatch, cardGroupId])\n    \n    console.log(\"usars\")\n\n    \n\n    const columns = [\n        { field: 'username', headerName: 'Username', width: 130 },\n        { field: 'delivered', headerName: 'Delivered', type: \"number\", width: 130 },\n        {\n          field: 'toDeliver',\n          headerName: 'To Deliver',\n          type: 'number',\n          width: 130,\n        },\n        { field: 'complete', headerName: 'Complete', type: \"number\", width: 130 },      \n    ]      \n\n    let rows = status.map(s => (\n        {\n            id: s.user.id, \n            username: s.user.username, \n            delivered: s.delivered, \n            toDeliver: s.cardgroup.numberOfCardsDue,\n            complete: s.delivered == s.cardgroup.numberOfCardsDue ? true : false\n        }\n    ))\n\n    \n      \n    \n    const dateToString = date => {\n        let a = new Date(date.year, date.month-1, date.date, date.hour, date.minute)\n            console.log(\"aa\", a)\n            // return a.getUTCMonth()\n            return a.toString()\n      }\n    \n    console.log(\"cgid\", cardGroupId)\n    return (\n        <PageWrapper>       \n            <div style={{marginBottom: \"15px\"}} >\n                <CardgroupSelect onChange={setCardGroupId} />\n                <Typography variant=\"subtitle2\" style={{marginTop: \"20px\"}}>\n                {status[0] ? \"Due: \" + dateToString(status[0].cardgroup.dueDate) : \"Due:\"}\n                </Typography>\n            </div>\n\n                <div style={{ height: 400, width: '100%' }}>\n \n                <DataGrid rows={rows} columns={columns} pageSize={5}  />\n            </div>\n        </PageWrapper>\n    )\n}\n\nexport default DeliveryStatus","/home/asgeir/Desktop/master/client/src/components/dialogs/userDialog.js",["278","279","280","281"],"import { Button, Dialog } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addAdmin, removeAdmin } from '../../store/actions/userActions';\nimport { useEffect } from 'react';\nimport userReducer from '../../store/reducers/userReducer';\n\n\n\nconst UserDialog = (props) =>  {\n    const { onClose, selectedValue, open, user } = props;\n   \n    const dispatch = useDispatch()\n\n    const handleClose = () => {\n      onClose(selectedValue);\n    };\n    \n    const makeAdmin = () => {\n        dispatch(addAdmin(user))\n        handleClose()\n    }\n\n    const unmakeAdmin = () => {\n        dispatch(removeAdmin(user))\n        handleClose()\n    }\n   \n    return (\n      <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open} >\n        <div style={{padding: \"30px\", width:\"500px\"}}>\n\n            <h2>User: {user.name}</h2>\n            <span style={{ color: \"grey\" }}>username: </span><span>{user.username}</span> <br />\n            <span style={{ color: \"grey\" }}>email: </span><span>{user.email}</span> <br />\n            <span style={{ color: \"grey\" }}>role: </span><span>{user.role}</span> <br />\n\n            <div style={{textAlign: \"center\", paddingTop: \"50px\"}}>\n            {user.role == \"Admin\" ? \n                <Button onClick={() => unmakeAdmin()} variant=\"outlined\">Remove admin</Button>\n            :\n                <Button onClick={() => makeAdmin()} variant=\"outlined\">Make admin</Button>\n            }     \n            </div>\n        \n        </div>\n      </Dialog>\n    );\n  }\n  \n  export default UserDialog","/home/asgeir/Desktop/master/client/src/components/dialogs/cardDialog.js",["282","283","284","285","286","287","288"],"import { Button, Dialog, Box } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addAdmin, removeAdmin } from '../../store/actions/userActions';\nimport { useEffect } from 'react';\nimport userReducer from '../../store/reducers/userReducer';\nimport CardView from '../submodules/cardview';\n\nconst CardDialog = (props) =>  {\n    const { onClose, selectedValue, open, card } = props;\n   \n    // const dispatch = useDispatch()\n\n    const handleClose = () => {\n      onClose(selectedValue);\n    };\n    \n    // const makeAdmin = () => {\n    //     dispatch(addAdmin(user))\n    //     handleClose()\n    // }\n\n    // const unmakeAdmin = () => {\n    //     dispatch(removeAdmin(user))\n    //     handleClose()\n    // }\n   \n    return (\n      <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n      <Box style={{width:\"400px\", height: \"auto\", margin: 0}} >\n          <CardView cards={[card]} />\n          </Box>\n      </Dialog> \n    );\n  }\n  \n  export default CardDialog","/home/asgeir/Desktop/master/client/src/components/pages/peerreview.js",["289","290","291","292"],"\nimport { PageWrapper } from \"../../static/wrappers\";\nimport { Divider, Grid, makeStyles } from '@material-ui/core';\nimport { Typography } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport GroupView from \"../submodules/groupview\";\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { loadCardgroups } from \"../../store/actions/cardgroupActions\";\nimport { useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\n\n\nconst useStyles = makeStyles(theme => ({\n\n}))\n\nconst PeerReview = () => {\n    const classes = useStyles() \n    const dispatch = useDispatch();  \n   \n    const cardgroups = useSelector(state => state.cardgroupReducer.cardgroups)\n    const isAdmin = useSelector(state => state.authReducer.isAdmin)\n\n    useEffect(() => {\n        dispatch(loadCardgroups())\n    }, [dispatch])   \n\n    const history = useHistory()\n\n    const handleRedirect = groupId => {\n        history.push(\"/peerreview/group/\"+groupId)\n    }\n\n    return(\n        <PageWrapper>\n\n            <Grid container spacing={5}>  \n                <Grid item xs={12}>\n                    <Grid container spacing={2}>  \n                        <Grid item xs={12}  >\n                            <Typography variant=\"h4\" gutterBottom >\n                                Peer Review of Cards\n                            </Typography>\n                            <Typography variant=\"body2\" color=\"textSecondary\">\n                                Choose group \n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <GroupView cardgroups={cardgroups} onClick={handleRedirect} />\n                        </Grid> \n\n                    </Grid>\n                </Grid>\n\n            </Grid>\n\n        </PageWrapper>\n    )\n\n}\n\n\nexport default PeerReview","/home/asgeir/Desktop/master/client/src/components/pages/peerReviewGroup.js",["293","294"],"\nimport { useSelector } from 'react-redux';\nimport React from \"react\"\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { loadCards, loadCardgroupFlashcards } from '../../store/actions/cardActions';\nimport RateCard from '../submodules/rateCard';\nimport { Box, Divider, Typography } from '@material-ui/core';\nimport { PageWrapper } from \"../../static/wrappers\";\nimport { loadCardgroup } from '../../store/actions/cardgroupActions';\n\nconst PeerReviewGroup = (props) =>{\n    const groupId = props.match.params.id\n\n    const cards = useSelector(state => state.cardReducer.cards)\n    const cardgroup = useSelector(state => state.cardgroupReducer.cardgroups[0])\n\n    const dispatch = useDispatch() \n    useEffect(() => {\n        dispatch(loadCardgroupFlashcards(groupId))  \n        dispatch(loadCardgroup(groupId))\n    }, [])\n\n    console.log(cards)\n\n    return (\n        <PageWrapper>\n            <Typography  variant=\"h4\" >Peer Review of Cards from </Typography>\n            <Typography  variant=\"h4\" >{cardgroup.title}</Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\">\n                (find amount) number of cards are due to be rated. Read the question, attemt to answer it to yourself, then you may reveal the answer. \n                After testing the card, you are to rate it based on three criterias, try to be objective:\n                <br/> <br/>\n                <b>Level of difficulty</b> An objective rating on whether the difficulty of the card is appropiate. Too easy or too hard? Rate the card low.\n                 Good level of difficulty? Rate the card high. <br/>\n                 <b>Relevance and Quality</b> A rating of how relevant the card is to the cource curriculum and the quaility of the flashcard. Will studying this card be useful for learning \n                 the cource material? Is the question well phrased? Is it too long and complex? Is it original?<br/>\n\n                 {/* <b>Overall quality</b> The overall quality of the flashcard. Is the question well phrased? Is it too long and complex? Is it original? This rating can be more subjective. <br/> */}\n\n            </Typography>\n            <Box mb={5} />\n\n\n\n            <Divider />\n            \n            {cards.length ? \n            \n            cards.map((card, i) => \n                <React.Fragment>\n                    <RateCard card={card} index={i+1} />\n                    <Divider />\n                </React.Fragment>\n             ) : <div>empty</div>}\n        </PageWrapper>\n    )\n}\n\nexport default PeerReviewGroup","/home/asgeir/Desktop/master/client/src/components/submodules/rateCard.js",["295","296","297"],"\nimport { Button, Card, Grid, IconButton, Tooltip, Typography } from '@material-ui/core';\nimport Rating from '@material-ui/lab/Rating';\nimport SaveIcon from '@material-ui/icons/Save';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport { makeStyles } from '@material-ui/core';\nimport { useState } from 'react';\nimport MoodBadIcon from '@material-ui/icons/MoodBad';\nconst useStyles = makeStyles(theme => ({\n    container: {\n        padding: \"10px\",\n        minHeight: \"150px\",\n        margin: \"10px 0\",\n    },\n    duplicateButton: {\n        fontSize: \"10px\",\n        marginTop: \"10px\"\n    },\n    body:{\n        minHeight: \"100px\",\n    }\n}))\n\nconst RateCard = ({card, index}) => {\n\n    const classes = useStyles()\n    const [flipped, setFlipped] = useState(false);\n\n    const [difficulty, setDifficulty] = useState(0)\n    const [relevance, setRelevance] = useState(0)\n    const [quality, setQuality] = useState(0)\n\n    return(\n        <Grid className={classes.container} container spacing={4}>\n                <Grid item xs={1}>       \n                        <Typography variant=\"subtitle2\">#</Typography>\n                        <Typography variant=\"body2\">{index}</Typography>\n                </Grid>\n                <Grid item xs={3}>       \n                        <Typography variant=\"subtitle2\">Question</Typography>\n                        <Typography variant=\"body2\">{card.front}</Typography>\n                </Grid>\n                \n                <Grid item xs={3}>       \n                        <Typography variant=\"subtitle2\">{flipped ? \"Answer\" : \"Reveal Answer\"}</Typography>\n                        {flipped ? \n                            <Typography className={classes.body} variant=\"body2\"> {flipped ? card.back : \"\" }</Typography>\n                        :\n                            <div></div>\n                        }\n\n\n                        <Tooltip title={flipped ? \"Hide Answer\" : \"Reveal Answer\"} placement=\"right\">\n                            <IconButton onClick={() => setFlipped(!flipped)} variant={\"outlined\"}  className={classes.revealButton} size=\"small\">                           \n                                {flipped ? <VisibilityOffIcon size=\"small\" color=\"primary\" /> : <VisibilityIcon size=\"small\"  color=\"primary\"/>}\n                            </IconButton>\n                        </Tooltip>\n                        \n                        \n                </Grid>\n                <Grid item xs={3}>       \n                        <Typography variant=\"subtitle2\">Rate</Typography> \n                        <Typography variant=\"body2\"> Difficulty</Typography> \n                        <Rating \n                            value={difficulty}\n                            precision={0.5}\n                            size=\"small\"\n                            onChange={(event, newValue) => {\n                                setDifficulty(newValue);\n                            }}\n                        />\n                        \n                        <Typography variant=\"body2\">Relevance and Quality</Typography> \n                        <Rating \n                            value={relevance}\n                            precision={0.5}\n                            size=\"small\"\n                            onChange={(event, newValue) => {\n                                setRelevance(newValue);\n                            }}\n                        />\n\n                        {/* <Typography variant=\"body2\">Overall quality</Typography> \n                        <Rating \n                            value={quality}\n                            precision={0.5}\n                            size=\"small\"\n                            onChange={(event, newValue) => {\n                                setQuality(newValue);\n                            }}\n                        /> */}\n                         <Button className={classes.duplicateButton} variant=\"contained\" color=\"primary\" size=\"small\" endIcon={<MoodBadIcon />} >                           \n                            Mark as duplicate\n                        </Button>\n                </Grid>\n                <Grid item xs={2} style={{textAlign: \"center\"}}>     \n                    <Typography variant=\"subtitle2\">Save Rating</Typography>  \n                    <IconButton size=\"small\" color=\"primary\">\n                        <SaveIcon size=\"small\"/>\n                    </IconButton> \n                </Grid>\n        </Grid>\n    )\n}\n\nexport default RateCard","/home/asgeir/Desktop/master/client/src/components/pages/study.js",[],"/home/asgeir/Desktop/master/client/src/components/layout/footer.js",[],{"ruleId":"298","replacedBy":"299"},{"ruleId":"300","replacedBy":"301"},{"ruleId":"302","severity":1,"message":"303","line":10,"column":8,"nodeType":"304","messageId":"305","endLine":10,"endColumn":14},{"ruleId":"302","severity":1,"message":"306","line":3,"column":27,"nodeType":"304","messageId":"305","endLine":3,"endColumn":35},{"ruleId":"302","severity":1,"message":"307","line":15,"column":8,"nodeType":"304","messageId":"305","endLine":15,"endColumn":26},{"ruleId":"308","severity":1,"message":"309","line":54,"column":8,"nodeType":"310","endLine":54,"endColumn":28,"suggestions":"311"},{"ruleId":"308","severity":1,"message":"312","line":25,"column":8,"nodeType":"310","endLine":25,"endColumn":18,"suggestions":"313"},{"ruleId":"302","severity":1,"message":"314","line":2,"column":16,"nodeType":"304","messageId":"305","endLine":2,"endColumn":24},{"ruleId":"302","severity":1,"message":"306","line":4,"column":11,"nodeType":"304","messageId":"305","endLine":4,"endColumn":19},{"ruleId":"302","severity":1,"message":"306","line":1,"column":10,"nodeType":"304","messageId":"305","endLine":1,"endColumn":18},{"ruleId":"302","severity":1,"message":"315","line":5,"column":8,"nodeType":"304","messageId":"305","endLine":5,"endColumn":19},{"ruleId":"316","severity":1,"message":"317","line":77,"column":91,"nodeType":"318","messageId":"319","endLine":77,"endColumn":93},{"ruleId":"302","severity":1,"message":"320","line":3,"column":87,"nodeType":"304","messageId":"305","endLine":3,"endColumn":109},{"ruleId":"302","severity":1,"message":"321","line":5,"column":7,"nodeType":"304","messageId":"305","endLine":5,"endColumn":12},{"ruleId":"302","severity":1,"message":"322","line":11,"column":8,"nodeType":"304","messageId":"305","endLine":11,"endColumn":22},{"ruleId":"302","severity":1,"message":"314","line":2,"column":10,"nodeType":"304","messageId":"305","endLine":2,"endColumn":18},{"ruleId":"302","severity":1,"message":"306","line":3,"column":10,"nodeType":"304","messageId":"305","endLine":3,"endColumn":18},{"ruleId":"302","severity":1,"message":"322","line":5,"column":8,"nodeType":"304","messageId":"305","endLine":5,"endColumn":22},{"ruleId":"308","severity":1,"message":"323","line":59,"column":7,"nodeType":"310","endLine":59,"endColumn":18,"suggestions":"324"},{"ruleId":"302","severity":1,"message":"325","line":2,"column":43,"nodeType":"304","messageId":"305","endLine":2,"endColumn":53},{"ruleId":"302","severity":1,"message":"326","line":5,"column":10,"nodeType":"304","messageId":"305","endLine":5,"endColumn":19},{"ruleId":"308","severity":1,"message":"312","line":25,"column":8,"nodeType":"310","endLine":25,"endColumn":10,"suggestions":"327"},{"ruleId":"302","severity":1,"message":"328","line":2,"column":23,"nodeType":"304","messageId":"305","endLine":2,"endColumn":35},{"ruleId":"302","severity":1,"message":"329","line":3,"column":8,"nodeType":"304","messageId":"305","endLine":3,"endColumn":19},{"ruleId":"302","severity":1,"message":"330","line":5,"column":11,"nodeType":"304","messageId":"305","endLine":5,"endColumn":25},{"ruleId":"302","severity":1,"message":"306","line":1,"column":10,"nodeType":"304","messageId":"305","endLine":1,"endColumn":18},{"ruleId":"302","severity":1,"message":"331","line":6,"column":8,"nodeType":"304","messageId":"305","endLine":6,"endColumn":16},{"ruleId":"308","severity":1,"message":"332","line":21,"column":8,"nodeType":"310","endLine":21,"endColumn":18,"suggestions":"333"},{"ruleId":"302","severity":1,"message":"334","line":8,"column":10,"nodeType":"304","messageId":"305","endLine":8,"endColumn":19},{"ruleId":"302","severity":1,"message":"315","line":9,"column":8,"nodeType":"304","messageId":"305","endLine":9,"endColumn":19},{"ruleId":"302","severity":1,"message":"335","line":5,"column":18,"nodeType":"304","messageId":"305","endLine":5,"endColumn":22},{"ruleId":"302","severity":1,"message":"315","line":10,"column":8,"nodeType":"304","messageId":"305","endLine":10,"endColumn":19},{"ruleId":"302","severity":1,"message":"322","line":11,"column":8,"nodeType":"304","messageId":"305","endLine":11,"endColumn":22},{"ruleId":"302","severity":1,"message":"329","line":13,"column":8,"nodeType":"304","messageId":"305","endLine":13,"endColumn":19},{"ruleId":"308","severity":1,"message":"336","line":86,"column":8,"nodeType":"310","endLine":86,"endColumn":41,"suggestions":"337"},{"ruleId":"302","severity":1,"message":"322","line":4,"column":8,"nodeType":"304","messageId":"305","endLine":4,"endColumn":22},{"ruleId":"302","severity":1,"message":"314","line":2,"column":16,"nodeType":"304","messageId":"305","endLine":2,"endColumn":24},{"ruleId":"302","severity":1,"message":"306","line":4,"column":11,"nodeType":"304","messageId":"305","endLine":4,"endColumn":19},{"ruleId":"302","severity":1,"message":"338","line":4,"column":21,"nodeType":"304","messageId":"305","endLine":4,"endColumn":28},{"ruleId":"302","severity":1,"message":"339","line":5,"column":8,"nodeType":"304","messageId":"305","endLine":5,"endColumn":25},{"ruleId":"302","severity":1,"message":"340","line":6,"column":8,"nodeType":"304","messageId":"305","endLine":6,"endColumn":22},{"ruleId":"302","severity":1,"message":"341","line":7,"column":8,"nodeType":"304","messageId":"305","endLine":7,"endColumn":23},{"ruleId":"302","severity":1,"message":"342","line":8,"column":8,"nodeType":"304","messageId":"305","endLine":8,"endColumn":21},{"ruleId":"302","severity":1,"message":"343","line":9,"column":9,"nodeType":"304","messageId":"305","endLine":9,"endColumn":15},{"ruleId":"302","severity":1,"message":"344","line":9,"column":17,"nodeType":"304","messageId":"305","endLine":9,"endColumn":28},{"ruleId":"302","severity":1,"message":"345","line":9,"column":30,"nodeType":"304","messageId":"305","endLine":9,"endColumn":34},{"ruleId":"302","severity":1,"message":"346","line":9,"column":36,"nodeType":"304","messageId":"305","endLine":9,"endColumn":44},{"ruleId":"302","severity":1,"message":"347","line":10,"column":8,"nodeType":"304","messageId":"305","endLine":10,"endColumn":18},{"ruleId":"302","severity":1,"message":"348","line":13,"column":8,"nodeType":"304","messageId":"305","endLine":13,"endColumn":14},{"ruleId":"302","severity":1,"message":"349","line":16,"column":8,"nodeType":"304","messageId":"305","endLine":16,"endColumn":12},{"ruleId":"302","severity":1,"message":"350","line":17,"column":8,"nodeType":"304","messageId":"305","endLine":17,"endColumn":16},{"ruleId":"302","severity":1,"message":"351","line":18,"column":10,"nodeType":"304","messageId":"305","endLine":18,"endColumn":21},{"ruleId":"302","severity":1,"message":"352","line":18,"column":23,"nodeType":"304","messageId":"305","endLine":18,"endColumn":34},{"ruleId":"302","severity":1,"message":"353","line":19,"column":10,"nodeType":"304","messageId":"305","endLine":19,"endColumn":17},{"ruleId":"302","severity":1,"message":"354","line":20,"column":10,"nodeType":"304","messageId":"305","endLine":20,"endColumn":23},{"ruleId":"308","severity":1,"message":"355","line":58,"column":8,"nodeType":"310","endLine":58,"endColumn":35,"suggestions":"356"},{"ruleId":"302","severity":1,"message":"329","line":3,"column":8,"nodeType":"304","messageId":"305","endLine":3,"endColumn":19},{"ruleId":"302","severity":1,"message":"348","line":7,"column":50,"nodeType":"304","messageId":"305","endLine":7,"endColumn":56},{"ruleId":"308","severity":1,"message":"357","line":43,"column":8,"nodeType":"310","endLine":43,"endColumn":24,"suggestions":"358"},{"ruleId":"316","severity":1,"message":"317","line":31,"column":33,"nodeType":"318","messageId":"319","endLine":31,"endColumn":35},{"ruleId":"302","severity":1,"message":"329","line":3,"column":8,"nodeType":"304","messageId":"305","endLine":3,"endColumn":19},{"ruleId":"308","severity":1,"message":"359","line":25,"column":8,"nodeType":"310","endLine":25,"endColumn":31,"suggestions":"360"},{"ruleId":"316","severity":1,"message":"317","line":49,"column":35,"nodeType":"318","messageId":"319","endLine":49,"endColumn":37},{"ruleId":"302","severity":1,"message":"352","line":2,"column":23,"nodeType":"304","messageId":"305","endLine":2,"endColumn":34},{"ruleId":"302","severity":1,"message":"361","line":4,"column":10,"nodeType":"304","messageId":"305","endLine":4,"endColumn":19},{"ruleId":"302","severity":1,"message":"329","line":5,"column":8,"nodeType":"304","messageId":"305","endLine":5,"endColumn":19},{"ruleId":"316","severity":1,"message":"317","line":38,"column":24,"nodeType":"318","messageId":"319","endLine":38,"endColumn":26},{"ruleId":"302","severity":1,"message":"348","line":1,"column":10,"nodeType":"304","messageId":"305","endLine":1,"endColumn":16},{"ruleId":"302","severity":1,"message":"351","line":2,"column":10,"nodeType":"304","messageId":"305","endLine":2,"endColumn":21},{"ruleId":"302","severity":1,"message":"352","line":2,"column":23,"nodeType":"304","messageId":"305","endLine":2,"endColumn":34},{"ruleId":"302","severity":1,"message":"362","line":3,"column":10,"nodeType":"304","messageId":"305","endLine":3,"endColumn":18},{"ruleId":"302","severity":1,"message":"363","line":3,"column":20,"nodeType":"304","messageId":"305","endLine":3,"endColumn":31},{"ruleId":"302","severity":1,"message":"361","line":4,"column":10,"nodeType":"304","messageId":"305","endLine":4,"endColumn":19},{"ruleId":"302","severity":1,"message":"329","line":5,"column":8,"nodeType":"304","messageId":"305","endLine":5,"endColumn":19},{"ruleId":"302","severity":1,"message":"364","line":3,"column":10,"nodeType":"304","messageId":"305","endLine":3,"endColumn":17},{"ruleId":"302","severity":1,"message":"348","line":5,"column":10,"nodeType":"304","messageId":"305","endLine":5,"endColumn":16},{"ruleId":"302","severity":1,"message":"365","line":19,"column":11,"nodeType":"304","messageId":"305","endLine":19,"endColumn":18},{"ruleId":"302","severity":1,"message":"366","line":23,"column":11,"nodeType":"304","messageId":"305","endLine":23,"endColumn":18},{"ruleId":"302","severity":1,"message":"326","line":6,"column":10,"nodeType":"304","messageId":"305","endLine":6,"endColumn":19},{"ruleId":"308","severity":1,"message":"367","line":22,"column":8,"nodeType":"310","endLine":22,"endColumn":10,"suggestions":"368"},{"ruleId":"302","severity":1,"message":"369","line":2,"column":18,"nodeType":"304","messageId":"305","endLine":2,"endColumn":22},{"ruleId":"302","severity":1,"message":"370","line":32,"column":12,"nodeType":"304","messageId":"305","endLine":32,"endColumn":19},{"ruleId":"302","severity":1,"message":"371","line":32,"column":21,"nodeType":"304","messageId":"305","endLine":32,"endColumn":31},"no-native-reassign",["372"],"no-negated-in-lhs",["373"],"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'AdminCardGroupPage' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isAdmin'. Either include it or remove the dependency array.","ArrayExpression",["374"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["375"],"'useState' is defined but never used.","'authReducer' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'DELETE_CARDGROUP_ERROR' is defined but never used.","'Sleep' is assigned a value but never used.","'loadingReducer' is defined but never used.","React Hook useEffect has missing dependencies: 'formSubmitCallback' and 'handleClose'. Either include them or remove the dependency array.",["376"],"'makeStyles' is defined but never used.","'loadCards' is defined but never used.",["377"],"'STOP_LOADING' is defined but never used.","'userReducer' is defined but never used.","'getUsersStatus' is defined but never used.","'CardView' is defined but never used.","React Hook useEffect has a missing dependency: 'cardgroupId'. Either include it or remove the dependency array.",["378"],"'adminOnly' is defined but never used.","'Icon' is defined but never used.","React Hook useEffect has missing dependencies: 'cardgroup' and 'user'. Either include them or remove the dependency array.",["379"],"'NavLink' is defined but never used.","'AccountCircleIcon' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'Brightness4Icon' is defined but never used.","'ExitToAppIcon' is defined but never used.","'AppBar' is defined but never used.","'ButtonGroup' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'PersonIcon' is defined but never used.","'Button' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'signOut' is defined but never used.","'NavBarWrapper' is defined but never used.","React Hook useEffect has a missing dependency: 'urls'. Either include it or remove the dependency array.",["380"],"React Hook useEffect has a missing dependency: 'userRoleFiler'. Either include it or remove the dependency array.",["381"],"React Hook useEffect has a missing dependency: 'status'. Either include it or remove the dependency array.",["382"],"'useEffect' is defined but never used.","'addAdmin' is defined but never used.","'removeAdmin' is defined but never used.","'Divider' is defined but never used.","'classes' is assigned a value but never used.","'isAdmin' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'groupId'. Either include them or remove the dependency array.",["383"],"'Card' is defined but never used.","'quality' is assigned a value but never used.","'setQuality' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"384","fix":"385"},{"desc":"386","fix":"387"},{"desc":"388","fix":"389"},{"desc":"390","fix":"391"},{"desc":"392","fix":"393"},{"desc":"394","fix":"395"},{"desc":"396","fix":"397"},{"desc":"398","fix":"399"},{"desc":"400","fix":"401"},{"desc":"402","fix":"403"},"Update the dependencies array to be: [loggedIn, dispatch, isAdmin]",{"range":"404","text":"405"},"Update the dependencies array to be: [dispatch, newAlert]",{"range":"406","text":"407"},"Update the dependencies array to be: [formSubmitCallback, handleClose, newStatus]",{"range":"408","text":"409"},"Update the dependencies array to be: [dispatch]",{"range":"410","text":"411"},"Update the dependencies array to be: [cardgroupId, dispatch]",{"range":"412","text":"413"},"Update the dependencies array to be: [cardgroup, dispatch, props.match.params.id, user]",{"range":"414","text":"415"},"Update the dependencies array to be: [history.location.pathname, urls]",{"range":"416","text":"417"},"Update the dependencies array to be: [dispatch, show, userRoleFiler]",{"range":"418","text":"419"},"Update the dependencies array to be: [dispatch, cardGroupId, status]",{"range":"420","text":"421"},"Update the dependencies array to be: [dispatch, groupId]",{"range":"422","text":"423"},[1886,1906],"[loggedIn, dispatch, isAdmin]",[716,726],"[dispatch, newAlert]",[1462,1473],"[formSubmitCallback, handleClose, newStatus]",[649,651],"[dispatch]",[639,649],"[cardgroupId, dispatch]",[2918,2951],"[cardgroup, dispatch, props.match.params.id, user]",[1833,1860],"[history.location.pathname, urls]",[1443,1459],"[dispatch, show, userRoleFiler]",[857,880],"[dispatch, cardGroupId, status]",[851,853],"[dispatch, groupId]"]