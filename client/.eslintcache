[{"/home/asgeir/Desktop/master/client/src/index.js":"1","/home/asgeir/Desktop/master/client/src/App.js":"2","/home/asgeir/Desktop/master/client/src/reportWebVitals.js":"3","/home/asgeir/Desktop/master/client/src/store/reducers/rootReducer.js":"4","/home/asgeir/Desktop/master/client/src/routes.js":"5","/home/asgeir/Desktop/master/client/src/static/theme.js":"6","/home/asgeir/Desktop/master/client/src/components/notifications/alerter.js":"7","/home/asgeir/Desktop/master/client/src/components/layout/navbar.js":"8","/home/asgeir/Desktop/master/client/src/store/reducers/authReducer.js":"9","/home/asgeir/Desktop/master/client/src/store/reducers/cardReducer.js":"10","/home/asgeir/Desktop/master/client/src/store/reducers/cardgroupReducer.js":"11","/home/asgeir/Desktop/master/client/src/store/reducers/alertReducer.js":"12","/home/asgeir/Desktop/master/client/src/components/loginfunc.js":"13","/home/asgeir/Desktop/master/client/src/store/actions/authActions.js":"14","/home/asgeir/Desktop/master/client/src/static/wrappers.js":"15","/home/asgeir/Desktop/master/client/src/store/actionTypes.js":"16","/home/asgeir/Desktop/master/client/src/store/actions/cardgroupActions.js":"17","/home/asgeir/Desktop/master/client/src/store/actions/cardActions.js":"18","/home/asgeir/Desktop/master/client/src/components/submodules/cardview.js":"19","/home/asgeir/Desktop/master/client/src/components/submodules/groupview.js":"20","/home/asgeir/Desktop/master/client/src/components/dialogs/createCardGroup.js":"21","/home/asgeir/Desktop/master/client/src/components/dialogs/createCardDialog.js":"22","/home/asgeir/Desktop/master/client/src/components/dialogs/confirmDialog.js":"23","/home/asgeir/Desktop/master/client/src/components/dialogs/flashcardForm.js":"24","/home/asgeir/Desktop/master/client/src/components/submodules/cardgroupselect.js":"25","/home/asgeir/Desktop/master/client/src/store/reducers/loadingReducer.js":"26","/home/asgeir/Desktop/master/client/src/components/pages/userProfile.js.js":"27","/home/asgeir/Desktop/master/client/src/components/adminpages/allCards.js":"28","/home/asgeir/Desktop/master/client/src/components/adminpages/adminPage.js":"29","/home/asgeir/Desktop/master/client/src/components/adminpages/adminCardgroupPage.js":"30","/home/asgeir/Desktop/master/client/src/components/pages/login.js":"31","/home/asgeir/Desktop/master/client/src/components/pages/cardGroupPage.js":"32","/home/asgeir/Desktop/master/client/src/components/notifications/loading.js":"33","/home/asgeir/Desktop/master/client/src/components/submodules/adminGroupCardView.js":"34","/home/asgeir/Desktop/master/client/src/components/layout/adminNavbar.js":"35","/home/asgeir/Desktop/master/client/src/components/adminpages/users.js":"36","/home/asgeir/Desktop/master/client/src/store/reducers/userReducer.js":"37","/home/asgeir/Desktop/master/client/src/store/actions/userActions.js":"38","/home/asgeir/Desktop/master/client/src/components/adminpages/deliveryStatus.js":"39","/home/asgeir/Desktop/master/client/src/components/dialogs/userDialog.js":"40","/home/asgeir/Desktop/master/client/src/components/dialogs/cardDialog.js":"41","/home/asgeir/Desktop/master/client/src/components/pages/peerreview.js":"42","/home/asgeir/Desktop/master/client/src/components/pages/peerReviewGroup.js":"43","/home/asgeir/Desktop/master/client/src/components/submodules/rateCard.js":"44","/home/asgeir/Desktop/master/client/src/components/pages/study.js":"45","/home/asgeir/Desktop/master/client/src/components/layout/footer.js":"46","/home/asgeir/Desktop/master/client/src/store/reducers/ratingReducer.js":"47","/home/asgeir/Desktop/master/client/src/store/actions/ratingActions.js":"48","/home/asgeir/Desktop/master/client/src/utils/datehandling.js":"49","/home/asgeir/Desktop/master/client/src/store/reducers/peerreviewReducer.js":"50","/home/asgeir/Desktop/master/client/src/components/dialogs/createPeerreview.js":"51","/home/asgeir/Desktop/master/client/src/store/actions/peerreviewActions.js":"52","/home/asgeir/Desktop/master/client/src/components/submodules/peerReviewView.js":"53","/home/asgeir/Desktop/master/client/src/components/submodules/progress.js":"54","/home/asgeir/Desktop/master/client/src/components/pages/addCards.js":"55","/home/asgeir/Desktop/master/client/src/components/pages/home.js":"56"},{"size":838,"mtime":1614774223704,"results":"57","hashOfConfig":"58"},{"size":1499,"mtime":1615290669139,"results":"59","hashOfConfig":"58"},{"size":362,"mtime":1614783077563,"results":"60","hashOfConfig":"58"},{"size":622,"mtime":1615548804252,"results":"61","hashOfConfig":"58"},{"size":3949,"mtime":1615722518277,"results":"62","hashOfConfig":"58"},{"size":1501,"mtime":1614953555040,"results":"63","hashOfConfig":"58"},{"size":1173,"mtime":1614854143647,"results":"64","hashOfConfig":"58"},{"size":4858,"mtime":1615723238310,"results":"65","hashOfConfig":"58"},{"size":1228,"mtime":1614774223704,"results":"66","hashOfConfig":"58"},{"size":1757,"mtime":1614774223704,"results":"67","hashOfConfig":"58"},{"size":1794,"mtime":1615141033597,"results":"68","hashOfConfig":"58"},{"size":705,"mtime":1614853702258,"results":"69","hashOfConfig":"58"},{"size":811,"mtime":1615722535397,"results":"70","hashOfConfig":"58"},{"size":4483,"mtime":1615126534309,"results":"71","hashOfConfig":"58"},{"size":645,"mtime":1615118886941,"results":"72","hashOfConfig":"58"},{"size":1473,"mtime":1615560832766,"results":"73","hashOfConfig":"58"},{"size":4014,"mtime":1615378084809,"results":"74","hashOfConfig":"58"},{"size":6896,"mtime":1615554840071,"results":"75","hashOfConfig":"58"},{"size":3134,"mtime":1615382693558,"results":"76","hashOfConfig":"58"},{"size":2119,"mtime":1615553945729,"results":"77","hashOfConfig":"58"},{"size":6060,"mtime":1615378676655,"results":"78","hashOfConfig":"58"},{"size":3339,"mtime":1614854753895,"results":"79","hashOfConfig":"58"},{"size":1211,"mtime":1614774223700,"results":"80","hashOfConfig":"58"},{"size":3884,"mtime":1615556471993,"results":"81","hashOfConfig":"58"},{"size":1759,"mtime":1614774223700,"results":"82","hashOfConfig":"58"},{"size":466,"mtime":1615126522933,"results":"83","hashOfConfig":"58"},{"size":902,"mtime":1614774223700,"results":"84","hashOfConfig":"58"},{"size":3112,"mtime":1615557101826,"results":"85","hashOfConfig":"58"},{"size":235,"mtime":1614786142923,"results":"86","hashOfConfig":"58"},{"size":863,"mtime":1614774223700,"results":"87","hashOfConfig":"58"},{"size":4137,"mtime":1615372411189,"results":"88","hashOfConfig":"58"},{"size":4553,"mtime":1615728917278,"results":"89","hashOfConfig":"58"},{"size":739,"mtime":1615124780879,"results":"90","hashOfConfig":"58"},{"size":1187,"mtime":1614774223700,"results":"91","hashOfConfig":"58"},{"size":2641,"mtime":1615118799643,"results":"92","hashOfConfig":"58"},{"size":4877,"mtime":1615118911641,"results":"93","hashOfConfig":"58"},{"size":1089,"mtime":1614774223704,"results":"94","hashOfConfig":"58"},{"size":4137,"mtime":1615126601662,"results":"95","hashOfConfig":"58"},{"size":2508,"mtime":1614774223700,"results":"96","hashOfConfig":"58"},{"size":1574,"mtime":1614774223700,"results":"97","hashOfConfig":"58"},{"size":1030,"mtime":1614774223700,"results":"98","hashOfConfig":"58"},{"size":3276,"mtime":1615725772889,"results":"99","hashOfConfig":"58"},{"size":5107,"mtime":1615562328070,"results":"100","hashOfConfig":"58"},{"size":6511,"mtime":1615563072242,"results":"101","hashOfConfig":"58"},{"size":1144,"mtime":1615140745192,"results":"102","hashOfConfig":"58"},{"size":766,"mtime":1614956338992,"results":"103","hashOfConfig":"58"},{"size":2232,"mtime":1615564148533,"results":"104","hashOfConfig":"58"},{"size":3913,"mtime":1615564255251,"results":"105","hashOfConfig":"58"},{"size":607,"mtime":1615383170368,"results":"106","hashOfConfig":"58"},{"size":804,"mtime":1615564109204,"results":"107","hashOfConfig":"58"},{"size":6231,"mtime":1615728200019,"results":"108","hashOfConfig":"58"},{"size":4375,"mtime":1615725639068,"results":"109","hashOfConfig":"58"},{"size":2124,"mtime":1615725808826,"results":"110","hashOfConfig":"58"},{"size":992,"mtime":1615558466201,"results":"111","hashOfConfig":"58"},{"size":2903,"mtime":1615722258259,"results":"112","hashOfConfig":"58"},{"size":3022,"mtime":1615726073292,"results":"113","hashOfConfig":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"p7npxu",{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"116"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"116"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"116"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"116"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"116"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"116"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"116"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"116"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"116"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"116"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"116"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"116"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"116"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"116"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"116"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"116"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"116"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"116"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"116"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"116"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"116"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"116"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"116"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"116"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"116"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"116"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"116"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"244","messages":"245","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"116"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"116"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"116"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"116"},"/home/asgeir/Desktop/master/client/src/index.js",[],["258","259"],"/home/asgeir/Desktop/master/client/src/App.js",["260"],"\nimport React, { useEffect } from \"react\"\nimport Navbar from \"./components/layout/navbar\"\nimport Routes from \"./routes\"\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\nimport {theme, darkTheme} from \"./static/theme\"\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Alerter from './components/notifications/alerter';\nimport Footer from \"./components/layout/footer\";\n\n\nconst App = () => {\n\n  const [darkMode, setDarkMode] = React.useState(false)\n\n  useEffect(() => {    \n    const darkMode = sessionStorage.getItem(\"dark-mode\")\n    console.log(\"init darkmode\", darkMode)\n    if (!darkMode){\n      sessionStorage.setItem(\"dark-mode\", \"false\")\n    } \n    else if (darkMode === \"true\"){\n      setDarkMode(true)\n    }\n  }, [])\n\n  const toggleDarkMode = () => {\n    const darkMode = sessionStorage.getItem(\"dark-mode\")\n    console.log(darkMode)\n    if (darkMode === \"true\"){\n      setDarkMode(false)\n      sessionStorage.setItem(\"dark-mode\", \"false\")\n    }\n    else if (darkMode === \"false\"){\n      setDarkMode(true)\n      sessionStorage.setItem(\"dark-mode\", \"true\")\n    }\n  }\n\n    return(\n      <MuiThemeProvider theme={darkMode ? darkTheme : theme}>\n        <CssBaseline />\n        <Router>\n          <Navbar  setDarkMode={toggleDarkMode}/>\n          <Alerter /> \n          <Routes />   \n          {/* <Footer /> */}\n        </Router>\n        {/* <Feedback /> */}\n    </MuiThemeProvider>\n\n    )\n}\n\nexport default App","/home/asgeir/Desktop/master/client/src/reportWebVitals.js",[],"/home/asgeir/Desktop/master/client/src/store/reducers/rootReducer.js",[],"/home/asgeir/Desktop/master/client/src/routes.js",["261","262","263"],"\nimport React, {useEffect} from \"react\"\nimport { BrowserRouter as Redirect, Route, Switch } from \"react-router-dom\";\n\nimport AddCards from \"./components/pages/addCards\"\nimport Login from \"./components/pages/login\"\nimport AllCards from './components/adminpages/allCards';\n// import CreateCardgroup from \"./components/createCardgroup\"\nimport logInFunc from './components/loginfunc';\nimport { checkLogInStatus } from \"./store/actions/authActions\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport CardGroupPage from './components/pages/cardGroupPage';\nimport { makeStyles } from \"@material-ui/core\";\nimport UserProfile from \"./components/pages/userProfile.js.js\";\nimport AdminCardGroupPage from './components/adminpages/adminCardgroupPage';\nimport Users from \"./components/adminpages/users\";\nimport AdminNavbar from './components/layout/adminNavbar';\nimport AdminPage from \"./components/adminpages/adminPage\";\nimport DeliveryStatus from './components/adminpages/deliveryStatus';\nimport PeerReview from \"./components/pages/peerreview\";\nimport PeerReviewGroup from \"./components/pages/peerReviewGroup\";\nimport Study from \"./components/pages/study\";\nimport Home from './components/pages/home';\n\n\n\nconst useStyles = makeStyles(theme => ({\n    // pages: {\n    //     paddingLeft: \"auto\",H\n    //     paddingRight: \"auto\",\n    //     alignItems: \"center\",\n    //     display: \"flex\",\n    //     paddingTop: theme.values.siteTopMargin        \n    // }\n\n})); \n\nconst FML = () => {\n\n    return (\n        <div>FML</div>\n    )\n}\n\nconst Routes = () => {\n\n    const classes = useStyles()\n    const loggedIn = useSelector(state => state.authReducer.loggedIn)\n    const isAdmin = useSelector(state => state.authReducer.isAdmin)\n    const dispatch = useDispatch();     \n    \n    useEffect(() => {\n        dispatch(checkLogInStatus())\n        console.log(\"is logged\", loggedIn)\n        console.log(\"is admin\", isAdmin)            \n        \n    }, [loggedIn, dispatch])   \n\n    // get log in status\n\n   \n\n    return(\n        <div className={classes.pages}>\n            <Switch>\n                <Route path=\"/\" exact component={loggedIn ? Home : Login}/>\n                <Route path=\"/loginfunc\" exact component={logInFunc}/>\n\n                {loggedIn ? \n                <React.Fragment>\n\n                    <Route path=\"/addcards\" exact component={AddCards}/>\n                    <Route path=\"/cardgroup/:id\" exact component={CardGroupPage} />\n                    <Route path=\"/peerreview\" exact component={PeerReview}/>\n                    <Route path=\"/peerreview/:id\" exact component={PeerReviewGroup}/>\n                    <Route path=\"/study\" exact component={Study}/>\n                    <Route path=\"/about\" exact component={ FML} />\n                    <Route path=\"/userprofile/:username\" exact component={UserProfile} />\n                    {isAdmin ? \n                    <React.Fragment>\n                        {/* <Route path=\"/adminpage\" exact component={AdminPage} /> */}\n                    \n                        <Route\n                            path=\"/adminpage\"\n                            render={({ match: { url } }) => (\n                            <>\n                                <AdminNavbar />    \n                                <Route path={`${url}/`} exact component={AdminPage}  />\n                                <Route path={`${url}/users`} exact component={Users} />\n                                <Route path={`${url}/deliverystatus`} exact component={DeliveryStatus} />\n                                <Route path={`${url}/allcards`} exact component={AllCards} />\n                            </>\n                            )}\n                        />\n                    </React.Fragment>\n                     :    \n                    <React.Fragment>\n                    </React.Fragment>}\n                </React.Fragment> : <div></div>}\n            </Switch>\n        </div>\n    )\n}\n\nexport default Routes","/home/asgeir/Desktop/master/client/src/static/theme.js",[],"/home/asgeir/Desktop/master/client/src/components/notifications/alerter.js",["264"],"\nimport React, {useEffect} from \"react\"\nimport {Alert} from '@material-ui/lab/';\nimport { useSelector } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { useDispatch } from 'react-redux';\nimport { CLEAR_ALERT } from \"../../store/actionTypes\";\n\n\n\nconst Alerter = () => {\n\n    const severity = useSelector(state => state.alertReducer.severity)\n    const text = useSelector(state => state.alertReducer.text)\n    const newAlert = useSelector(state => state.alertReducer.newAlert)\n    \n    const [open, setOpen] = React.useState(false);\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n      if (newAlert){\n        setOpen(true)\n        dispatch({type: CLEAR_ALERT})\n      }\n    }, [newAlert])\n  \n    const handleClose = (event, reason) => {\n      if (reason === 'clickaway') {\n        return;\n      }  \n      setOpen(false);\n    };\n  \n    \n    return(\n        \n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n            <Alert \n                onClose={handleClose}\n                severity={severity}\n            >{text}\n            </Alert>                \n      </Snackbar>\n    )\n}\n\nexport default Alerter","/home/asgeir/Desktop/master/client/src/components/layout/navbar.js",["265","266"],"\nimport React, {useState} from \"react\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport  { Redirect, NavLink, Link, useHistory } from 'react-router-dom'\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport {AppBar, Menu, MenuItem} from '@material-ui/core'\nimport PersonIcon from '@material-ui/icons/Person';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { signOut } from '../../store/actions/authActions';\nimport { NavBarWrapper } from \"../../static/wrappers\";\n\n\nconst useStyles = makeStyles(theme => ({ \n    link: {\n        color: \"inherit\",\n        textDecoration: \"none\"\n    },\n\n    navlink: {\n        color: \"white\",\n        whiteSpace: \"nowrap\"\n    },\n    navbar: {\n        backgroundColor: theme.palette.primary.main,\n        color: \"white\",\n        textColor: \"white\",\n    }\n}));\n\n\n\nconst UserMenu  = (props) => {\n    const classes = useStyles()\n    const user = useSelector(state => state.authReducer.loggedInUser)\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const history = useHistory()\n    const dispatch = useDispatch();    \n\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n    \n    const logOut = () => {\n        console.log(\"out\")\n        dispatch(signOut())\n        handleClose();\n        history.push(\"/\")\n        window.location.reload();        \n    }\n\n    const handleMode = () => {\n        props.setDarkMode()\n    }\n    \n    if (user.username) {return(\n        <div>\n        <Button color=\"inherit\" aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n            <AccountCircleIcon />\n            \n            <div style={{marginLeft: \"5px\"}}> \n                {user.username}\n            </div>\n            <ExpandMoreIcon />\n        </Button>\n            <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n            <Link to={\"/userprofile/\"+user.username} className={classes.link}  >\n                <MenuItem onClick={handleClose}>\n                    <PersonIcon /> My Profile\n                </MenuItem>\n            </Link>\n            <MenuItem onClick={handleMode}>            \n                  <Brightness4Icon />\n                  Toggle Dark Mode\n            </MenuItem>\n\n            <MenuItem onClick={logOut}>\n                <ExitToAppIcon /> Logout\n                </MenuItem>\n      </Menu>\n\n\n        </div>\n    )}\n    else return (\n        <NavLink className={classes.navlink} to=\"/\"> Log in</NavLink>\n    )\n    \n}\n\nconst Navbar = props => {\n\n    const classes = useStyles();\n    const loggedIn = useSelector(state => state.authReducer.loggedIn)\n    const isAdmin = useSelector(state => state.authReducer.isAdmin)\n    \n\n    const history = useHistory()\n\n    return(\n\n        <AppBar position=\"static\" style={{}}>\n       \n\n        <NavBarWrapper className={classes.navbar}>\n                    <Toolbar style={{padding: 0}}>\n\n        <Link to=\"/\" className={classes.link}>  \n        <Typography variant=\"h6\" style={{flexGrow: 0}} onClick={() => history.push(\"/home\")}>\n        TTK4145 Flashcards\n        </Typography>\n        </Link>\n\n\n        <List style={{textColor: \"white\", display: \"flex\", marginLeft: \"auto\"}}>\n            \n\n            {loggedIn ?  \n\n            <React.Fragment>\n                <ListItem>\n                    <NavLink className={classes.navlink}  to=\"/addcards\"> Add Cards</NavLink>\n                </ListItem>\n                <ListItem>\n                    <NavLink className={classes.navlink}  to=\"/peerreview\"> Peer Review</NavLink>\n                </ListItem>\n                <ListItem>\n                    <NavLink className={classes.navlink}  to=\"/study\"> Study </NavLink>\n                </ListItem>\n                {isAdmin ? \n                <ListItem>\n                    <NavLink className={classes.navlink}  to=\"/adminpage\"> Admin Page</NavLink>\n                </ListItem> : <div></div> }\n            </React.Fragment>\n            :\n            <div></div>\n            }\n\n        </List>      \n        <div style={{marginLeft: \"auto\"}}>\n            <UserMenu setDarkMode={props.setDarkMode}></UserMenu>\n            </div>\n        </Toolbar>\n        </NavBarWrapper>\n         </AppBar>\n    )\n}\n\nexport default Navbar","/home/asgeir/Desktop/master/client/src/store/reducers/authReducer.js",[],"/home/asgeir/Desktop/master/client/src/store/reducers/cardReducer.js",[],"/home/asgeir/Desktop/master/client/src/store/reducers/cardgroupReducer.js",[],"/home/asgeir/Desktop/master/client/src/store/reducers/alertReducer.js",[],"/home/asgeir/Desktop/master/client/src/components/loginfunc.js",["267","268"],"import { Redirect, useHistory } from \"react-router-dom\";\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { signInCallack } from '../store/actions/authActions';\nimport authReducer from \"../store/reducers/authReducer\";\nimport { useSelector } from 'react-redux';\nimport Loading from \"./notifications/loading\";\nimport {PageWrapper} from \"../static/wrappers\"\n\n\nconst LogInFunc = () => {\n    const dispatch = useDispatch();    \n    const loggedIn = useSelector(state => state.authReducer.loggedIn)\n\n    useEffect(() => {\n        dispatch(signInCallack())\n    }, [dispatch])   \n\n    const history = useHistory()\n    if (loggedIn){\n      history.push(\"/\")\n    }\n\n\n    return( \n        <PageWrapper>\n          <Loading /> \n        </PageWrapper>\n      )\n\n\n}\n\nexport default LogInFunc","/home/asgeir/Desktop/master/client/src/store/actions/authActions.js",["269"],"\nimport axios from 'axios';\nimport { LOG_IN_CALLBACK, LOG_IN_STATUS, LOG_OUT, SET_ALERT, SET_LOADING } from '../actionTypes';\n\n\n\n\nexport const signInCallack = () => async (dispatch) => {\n    dispatch({type: SET_LOADING, payload: true})\n    await axios.get(\"/api/login/callback\", { withCredentials: true })\n        .then(res => {\n            if(res.data.error){\n                throw new Error(res.data.error)\n            }\n            let user_token = res.data.user_token\n            let refresh_token = res.data.refresh_token\n            console.log(\"action, usertoken\", user_token)\n            console.log(\"action, refresh\", refresh_token)\n            localStorage.setItem(\"user_token\", user_token)\n            localStorage.setItem(\"refresh_token\", refresh_token)\n            const payload = {loggedIn: true}\n            dispatch({type: LOG_IN_CALLBACK, payload})\n        })\n        .catch(err => {\n            console.log(\"Error in signInCallback\", err)\n            const alert = {severity: \"error\", text: err.toString()}\n            dispatch({type: SET_ALERT, payload: alert})\n        })\n    dispatch({type: SET_LOADING, payload: false})\n}\n\nexport const adminOnly = () => async (dispatch) => {\n    axios.get(\"/api/adminonly\", {\n        headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"user_token\")}`\n        }\n    })\n    .then(res => {\n        console.log(\"from admin test\")\n        if(res.data.error){\n            throw new Error(res.data.error)\n        }\n        console.log(res.data)       \n        const alert = {severity: \"success\", text: res.data.status}\n        dispatch({type: SET_ALERT, payload: alert})\n \n\n        // dispatch({type: LOG_IN_CALLBACK, payload})\n    })\n    .catch(err => {\n        console.log(\"Error in signInCallback\", err)\n        const alert = {severity: \"error\", text: err.toString()}\n        dispatch({type: SET_ALERT, payload: alert})\n    })\n}\n\nexport const checkLogInStatus = () => async (dispatch, getState) => {\n    \n    const user_token = localStorage.getItem(\"user_token\")\n    const refresh_token = localStorage.getItem(\"refresh_token\")\n\n    console.log(\"user_token?\", Boolean(user_token))\n    console.log(\"refresh_token?\", Boolean(refresh_token))\n\n    if (user_token && refresh_token){\n        console.log(\"found both tokens\")\n        axios.get(\"/api/getcurrentuser\", {\n            headers: {\n                Authorization: `Bearer ${localStorage.getItem(\"user_token\")}`\n            }\n        }).then(res => {\n            if(res.data.error){\n                throw new Error(res.data.error)\n            }\n            console.log(\"found user?\", res.data)\n            console.log(\"true? \", res.data.role === \"Admin\")\n            let payload = {loggedIn: true, loggedInUser: res.data, isAdmin: res.data.role == \"Admin\"}\n            dispatch({type: LOG_IN_STATUS, payload})\n        }).catch(err => {\n            console.log(\"error..\", err)\n            let payload = {loading: false, loggedInUser: {}}\n            dispatch({type: LOG_IN_STATUS, payload})\n\n            // const alert = {severity: \"error\", text: err.toString()}\n            // dispatch({type: SET_ALERT, payload: alert})\n        })\n    }\n    else {\n        console.log(\"no user logged in\")\n        let payload = {loggedIn: false, loggedInUser: {}, loading: false}\n        dispatch({type: LOG_IN_STATUS, payload})\n    }\n\n}\n\nexport const signOut = () => async (dispatch, getState) => {\n\n    if (localStorage.getItem(\"user_token\")) {\n        const token = localStorage.getItem(\"user_token\")\n        axios.post(\"/api/logout/access\", {}, {\n            headers: {\n                Authorization: `Bearer ${token}`\n            }\n        }).then(res => {\n            if (res.data.error) {\n                console.error(res.data.error)\n            } else {\n                localStorage.removeItem(\"user_token\")\n            }\n        })\n    }\n    if (localStorage.getItem(\"refresh_token\")) {\n        const refreshToken = localStorage.getItem(\"refresh_token\")\n        axios.post(\"/api/logout/refresh\", {}, {\n            headers: {\n                Authorization: `Bearer ${refreshToken}`\n            }\n        }).then(res => {\n            if(res.data.error){\n                throw new Error(res.data.error)\n            } else {\n                localStorage.removeItem(\"refresh_token\")\n            }\n        })\n    }\n    localStorage.clear();\n\n    console.log(\"logging out...\")\n    const payload = {loggedIn: false, loggedInUser: {}}\n    dispatch({type: LOG_OUT, payload})\n\n}\n\n","/home/asgeir/Desktop/master/client/src/static/wrappers.js",[],"/home/asgeir/Desktop/master/client/src/store/actionTypes.js",[],"/home/asgeir/Desktop/master/client/src/store/actions/cardgroupActions.js",["270","271"],"\nimport axios from 'axios';\nimport { SET_ALERT, CREATE_CARDGROUP, SET_LOADING, LOAD_CARDGROUPS, DELETE_CARDGROUP, DELETE_CARDGROUP_ERROR, LOAD_CARDGROUP } from '../actionTypes';\n\nconst Sleep = (milliseconds) => {\n    return new Promise(resolve => setTimeout(resolve, milliseconds))\n  }\n\nexport const addCardgroup = (cardgroup) => async( dispatch, getState) => {\n        \n    \n    console.log(\"c cardgroup\")\n    console.log(cardgroup)\n\n    axios.post(\"/api/addcardgroup\", {\n            title: cardgroup.title,\n            numberOfCardsDue: cardgroup.numberOfCardsDue,\n            dueDate: cardgroup.dueDate\n        }, {\n            headers: {\n                Authorization: \"Bearer \" + localStorage.getItem(\"user_token\")\n            }\n        })\n        .then(res => {\n            if(res.data.error){\n                throw new Error(res.data.error)\n            }\n            console.log(\"returned\")\n            console.log(res.data)\n            \n            if(res.data.error){\n                console.log(\"error\")\n                throw new Error(res.data.error)\n            }\n\n\n            const createdCardgroup = res.data\n            console.log(createdCardgroup.dueDate)\n\n            console.log(\"was created, \", createdCardgroup)\n            let alert = {severity: \"success\", text: \"successfully created cardgroup: \"+createdCardgroup.title}\n            dispatch({type: SET_ALERT, payload: alert})\n            dispatch({type: CREATE_CARDGROUP, payload: createdCardgroup})\n        })\n        .catch(err => {\n            console.log(\"This is an error yes plz\")\n            let alert = {severity: \"error\", text: err.toString()}\n            dispatch({type: SET_ALERT, payload: alert})\n            // dispatch({type: CREATE_CARDGROUP_ERROR, err})\n        })\n\n    console.log(\"async call up in hier\", cardgroup)\n    \n};\n\n\nexport const loadCardgroups = () => async (dispatch, getState) => {\n    dispatch({type: SET_LOADING, payload: true})\n\n\n    await axios.get(\"/api/cardgroups\")\n    .then(res => {\n        if(res.data.error){\n            console.log(\"error\")\n            throw new Error(res.data.error)\n        }\n        const cardgroups = res.data\n        console.log(\"mah cardgroups\")\n        \n        console.log(cardgroups)\n        dispatch({type: LOAD_CARDGROUPS, payload: cardgroups})\n    })\n    .catch(err => console.log(err))\n\n    dispatch({type: SET_LOADING, payload: false})\n}\n\n\n\nexport const loadCardgroup = (groupId) => async (dispatch) => {\n    dispatch({type: SET_LOADING, payload: true})\n\n    await axios.get(\"/api/cardgroup/\"+groupId)\n    .then(res => {\n        console.log(\"res,\", res)\n        if(res.data.error){\n            console.log(\"error\")\n            throw new Error(res.data.error)\n        }\n        const cardgroup = [res.data]\n        console.log(\"cardgroup found\")\n        \n        console.log(cardgroup)\n        dispatch({type: LOAD_CARDGROUP, payload: cardgroup})\n    })\n    .catch(err => {\n        let alert = {severity: \"error\", text: err.toString()}\n        dispatch({type: SET_ALERT, payload: alert})\n    })\n\n    dispatch({type: SET_LOADING, payload: false})\n\n}\n\nexport const deleteCardgroup = (cardgroup) => async (dispatch, getState) => {\n    console.log(\"and action\")\n    console.log(cardgroup.id)\n\n    await axios.delete(\"/api/deletegroup/\" + cardgroup.id, \n    {headers: { \n        Authorization: \"Bearer \" +localStorage.getItem(\"user_token\") \n    }}\n    ).then(res => {\n        console.log(\"to be deleted\")\n        if(res.data.error){\n            console.log(\"error\")\n            throw new Error(res.data.error)\n        }\n\n        let alert = {severity: \"success\", text: \"successfully deleted cardgroup: \"+cardgroup.title}\n        dispatch({type: SET_ALERT, payload: alert})\n        dispatch({type: DELETE_CARDGROUP, payload: cardgroup})        \n    })\n    .catch(err => {\n\n        let alert = {severity: \"error\", text: err.toString()}\n        dispatch({type: SET_ALERT, payload: alert})\n        // dispatch({type: DELETE_CARDGROUP_ERROR, payload: cardgroup}) \n    })\n\n}\n\n\n\n\n","/home/asgeir/Desktop/master/client/src/store/actions/cardActions.js",[],"/home/asgeir/Desktop/master/client/src/components/submodules/cardview.js",["272"],"\nimport { useState } from 'react';\nimport { Card, IconButton, Typography } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\n\nimport { useDispatch, useSelector} from \"react-redux\"\nimport { Grid } from '@material-ui/core/';\nimport { deleteCard } from '../../store/actions/cardActions';\nimport FlashcardForm from '../dialogs/flashcardForm';\nimport loadingReducer from '../../store/reducers/loadingReducer';\nimport Loading from '../notifications/loading';\n\n\nconst CardView = props => {\n\n    const dispatch = useDispatch();\n    const [editCard, setEditCard] = useState({})\n    const [open, setOpen] = useState(false);\n    const loading = useSelector(state => state.loadingReducer.loading)\n\n    const handleClickOpen = () => {\n        setOpen(true);\n      };\n\n    const handleClose = (value) => {\n        setOpen(false);\n      };\n\n\n    const deleteThisCard = card => {     \n        dispatch(deleteCard(card))   \n    }\n\n    \n    const editThisCard = card => {\n        console.log(\"edit\", card)\n        setEditCard(card)    \n        handleClickOpen()\n    }\n    console.log(\"car1ds\", props.cards)\n    \n    let cardItems = []\n    if (props.cards.length){\n    props.cards.map((card, index) => (        \n        cardItems[index] = \n        <Grid item xs={12}>\n        <Card key={card.id} style={{padding: \"10px\", margin: \"5px\"}}>\n        <Grid container spacing={0}> \n            <Grid item xs={11}>\n                <Typography variant=\"subtitle2\" >\n                    Front:\n                </Typography>\n                <Typography variant=\"caption\" >\n                    {card.front}\n                </Typography>\n                <Typography variant=\"subtitle2\" >\n                    Back:\n                </Typography>\n                <Typography variant=\"caption\" >\n                    {card.back}\n                </Typography>\n            </Grid>\n            <Grid item xs={1} style={{padding: \"auto\"}} >\n                <IconButton onClick = {() => editThisCard(card)}> \n                    <EditIcon style={{fontSize: \"20px\"}} /> \n                </IconButton>\n                <IconButton onClick = {() => deleteThisCard(card)}> \n                    <DeleteIcon style={{fontSize: \"20px\"}} /> \n                </IconButton>\n            </Grid>        \n        </Grid>\n    </Card>\n    \n    </Grid>))\n    }\n\n    \n    if (loading){\n        return <Loading />\n    }\n\n    return (\n        \n        <div>\n            {editCard ? \n            <FlashcardForm open={open} onClose={handleClose} cardgroupId={1} card={editCard}  />\n            : <div> </div> }\n            \n            \n            {cardItems.length ? \n            \n            <Grid container spacing={0}> \n             {cardItems} \n            </Grid>\n            \n            : \n            <div style={{color: \"grey\", marginTop: \"150px\"}}>\n                <Typography variant=\"h5\">No cards</Typography>\n                <Typography variant=\"body1\">Add cards using the <i>Add Flashcard</i> button</Typography>\n            </div>}\n            \n            \n        </div>\n    )\n}\n\nexport default CardView","/home/asgeir/Desktop/master/client/src/components/submodules/groupview.js",["273","274","275"],"import { CardActionArea, Divider, Grid, Typography } from '@material-ui/core';\nimport { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport loadingReducer from '../../store/reducers/loadingReducer';\nimport Loading from '../notifications/loading';\nimport { dateJSONToString } from '../../utils/datehandling';\n\n\n\n\nconst GroupView = ({cardgroups, showDueDate, onClick}) => {\n\n    const loading = useSelector(state => state.loadingReducer.loading)   \n\n    if (loading){\n        return <Loading />\n    }\n    else {\n        return(\n            <div>\n                <Divider   /> \n                <Grid container spacing={0}>\n                    <Divider   /> \n\n                    {cardgroups.length ? \n                    cardgroups.map((cardgroup) => (\n                        <Grid item xs={12} key={cardgroup.id}> \n                            <CardActionArea onClick={() => onClick(cardgroup.id)} style={{padding: \"10px\", minHeight: \"100px\"}}>\n                                <Grid container spacing={2} >\n                                    <Grid item xs={12}>                        \n                                        <Typography variant=\"subtitle1\" component=\"h2\">\n                                            {cardgroup.title}     \n                                        </Typography>\n                                        {showDueDate ? \n                                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">\n                                                {cardgroup.numberOfCardsDue} cards are due: {dateJSONToString.call(this, cardgroup.dueDate)}     \n                                            </Typography> : <div></div>}\n                                    </Grid>\n                                </Grid>\n                            </CardActionArea> \n                            <Divider   /> \n                        </Grid>)) : <Typography variant=\"subtitle1\"> No groups</Typography> } \n                \n                </Grid>\n            </div>\n        )\n    }\n}\n\nexport default GroupView","/home/asgeir/Desktop/master/client/src/components/dialogs/createCardGroup.js",["276"],"\nimport { Button, \n    Grid, \n    TextField,\n    Dialog,\n    Typography,\n    makeStyles\n} from '@material-ui/core';\nimport DateFnsUtils from '@date-io/date-fns';\n\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n  } from '@material-ui/pickers';\n  \n\nimport React, { useState } from 'react';\n\n\nimport { addCardgroup } from '../../store/actions/cardgroupActions';\nimport {  useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport ConfirmDialog from \"./confirmDialog\"\nimport { useSelector } from 'react-redux';\n\nconst useStyles = makeStyles(theme => ({\n    dialog: {\n        \"& .MuiDialog-paperScrollPaper\": {\n            maxHeight: \"100vh\",\n        },\n    }\n}))\n\nconst CreateCardGroup = (props) => {\n    const { onClose, selectedValue, open } = props;\n    const dispatch = useDispatch();    \n    \n    const [selectedDate, setSelectedDate] = React.useState(null);\n    const [title, setTitle] = useState(\"\");\n    const [numberOfCards, setNumberOfCards] = useState(0)\n    const [time, setTime] = useState(\"23:59\")\n    const formSubmitCallback = useSelector(state => state.alertReducer.severity)\n    const newStatus = useSelector(state => state.alertReducer.newAlert)\n\n    const classes = useStyles()\n\n\n\n    const handleDateChange = (date) => {\n      setSelectedDate(date);\n    };\n\n    useEffect(() => {\n        console.log(\"stformSubmitCallback\")\n        if (formSubmitCallback===\"success\"){\n            handleClose()\n        }\n\n    },[newStatus])\n\n    const submit = e => {\n        e.preventDefault()        \n\n      \n\n\n        if (title && selectedDate && numberOfCards && time){\n\n            console.log(\"herfra\")\n            let dueDate = selectedDate\n\n            dueDate.setMinutes(time.split(\":\")[1])\n            dueDate.setHours(time.split(\":\")[0])\n\n\n\n            dispatch(addCardgroup({\n                title: title,        \n                dueDate: dueDate,\n                numberOfCardsDue: numberOfCards        \n            }))              \n        }\n        else{\n        }\n    }\n\n\n    const handleClose = () => {\n        setSelectedDate(null)\n        setTitle(\"\")\n        setNumberOfCards(0)\n        setTime(\"23:59\")      \n        onClose(selectedValue);\n    };\n    \n    return (\n      <Dialog onClose={handleClose} \n        className={classes.dialog}\n\n       open={open} style={{ margin: \"100px\"}}>\n          <ConfirmDialog></ConfirmDialog>\n            \n            <div style={{margin: \"40px 40px\"}}> \n\n            <Grid container spacing={2}>\n                <Grid item xs={12} >\n                    <Typography variant=\"h6\" align=\"left\" >New Cardgroup</Typography>\n                </Grid>\n            </Grid>\n\n\n            <form onSubmit={submit} >\n            <Grid container spacing={2}>\n                <Grid item xs={12}>\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField \n                        color=\"secondary\"\n                        onChange={e => setTitle(e.target.value)} \n                        fullWidth \n                        required \n                        variant=\"outlined\" \n                        label=\"Cardgroup title\"/>\n                </Grid>\n\n                <Grid item xs={12}>\n                <TextField\n                    fullWidth\n                    color=\"secondary\"\n                    id=\"outlined-number\"\n                    label=\"Number of flashcards for delivery pr student\"\n                    type=\"number\"\n                    required\n                    onChange={e => setNumberOfCards(e.target.value)} \n                    variant=\"outlined\"\n                />\n                </Grid>\n\n                <Grid item xs={6}>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <KeyboardDatePicker\n                        fullWidth\n                        disableToolbar         \n                        required    \n                        inputVariant=\"outlined\"           \n                        variant=\"outlined\"\n                        format=\"MM/dd/yyyy\"\n                        // margin=\"normal\"\n                        id=\"date-picker-inline\"\n                        label=\"Due date for delivery\"\n                        value={selectedDate}\n                        \n                        onChange={handleDateChange}\n                        onClick={console.log(\"close\")}\n                        color=\"secondary\"\n                        autoOk\n                        animateYearScrolling\n                        KeyboardButtonProps={{\n                            'aria-label': 'change date',\n                        }}\n                        />                 \n                </MuiPickersUtilsProvider>                   \n\n                    </Grid>\n                    <Grid item xs={6} >\n\n                    <TextField\n                            fullWidth\n                            id=\"time\"\n                            label=\"\"\n                            type=\"time\"\n                            variant=\"outlined\"\n                            onChange = {e => setTime(e.target.value)}\n                            defaultValue=\"23:59\"\n                            color=\"secondary\"\n                            InputLabelProps={{\n                                shrink: true,\n                                }}\n                            // inputProps={{\n                            //     step: 1440, // 5 min\n                            // }}\n                          />\n                    </Grid>\n\n\n               \n\n                \n                <Grid item xs={6}>\n                    <Button variant=\"contained\" onClick={handleClose} fullWidth color=\"primary\"  > Back</Button>\n                </Grid>\n                <Grid item xs={6}>\n                    <Button type=\"submit\" fullWidth style={{backgroundColor: selectedDate && title && numberOfCards ? \"green\" : \"grey\", color: \"white\"}}>Submit</Button>\n                </Grid>\n\n                </Grid>\n                </form>\n\n\n                </div>\n      </Dialog>\n    );\n}\n  \nexport default CreateCardGroup\n\n","/home/asgeir/Desktop/master/client/src/components/dialogs/createCardDialog.js",[],"/home/asgeir/Desktop/master/client/src/components/dialogs/confirmDialog.js",[],"/home/asgeir/Desktop/master/client/src/components/dialogs/flashcardForm.js",[],"/home/asgeir/Desktop/master/client/src/components/submodules/cardgroupselect.js",["277","278","279"],"import React, {useEffect} from \"react\"\nimport { FormControl, InputLabel, Select, makeStyles, MenuItem } from \"@material-ui/core\"\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { loadCards } from \"../../store/actions/cardActions\";\nimport { loadCardgroups } from \"../../store/actions/cardgroupActions\";\n\n\n\n\n\n\nconst CardgroupSelect = props => {\n\n    \n\n    const cardgroups = useSelector(state => state.cardgroupReducer.cardgroups)\n    \n    const dispatch = useDispatch();\n\n    // console.log(\"is token?\", localStorage.getItem(\"user_token\"))\n\n    useEffect(() => {\n        dispatch(loadCardgroups())\n    }, [])   \n\n\n\n    let cardgroupMenuitems = []\n\n    cardgroups.map((cardgroup, index) => (\n\n        cardgroupMenuitems[index] = <MenuItem key={index} value={cardgroup.id}>{cardgroup.title} </MenuItem>\n            \n    ))\n  \n    const [group, setGroup] = React.useState('');\n    \n\n    const handleChange = (event) => {\n      setGroup(event.target.value);\n      if (props.onChange){\n        props.onChange(event.target.value)\n      }\n    };\n  \n\n    return(\n        <FormControl fullWidth variant=\"outlined\" >\n            <InputLabel id=\"demo-simple-select-outlined-label\">Cardgroup</InputLabel>\n            <Select\n            required\n            color=\"secondary\"\n            labelId=\"demo-simple-select-outlined-label\"\n            id=\"demo-simple-select-outlined\"\n            value={group}\n            onChange={handleChange}\n            label=\"group\"\n            >\n            \n            {cardgroupMenuitems.length ? cardgroupMenuitems : <MenuItem value=\"\">\n                <em>No groups exists</em>\n            </MenuItem> }\n\n            </Select>\n      </FormControl>\n    )\n\n}\n\nexport default CardgroupSelect","/home/asgeir/Desktop/master/client/src/store/reducers/loadingReducer.js",["280"],"\nimport { SET_LOADING, STOP_LOADING } from '../actionTypes';\n\nconst initState = {\n    loading: false\n}\n\nconst loadingReducer = (state = initState, action) => {\n\n    switch(action.type){\n        case SET_LOADING:\n            console.log(\"laading\", action)\n            return {\n                loading: action.payload\n            }               \n        default:\n            console.log(\"default alert\")\n            return state\n    }\n}\n\nexport default loadingReducer","/home/asgeir/Desktop/master/client/src/components/pages/userProfile.js.js",[],"/home/asgeir/Desktop/master/client/src/components/adminpages/allCards.js",["281","282"],"import { PageWrapper } from \"../../static/wrappers\"\nimport { useDispatch, useSelector } from 'react-redux';\nimport userReducer from '../../store/reducers/userReducer';\nimport { useEffect } from 'react';\nimport {  getUsersStatus } from '../../store/actions/userActions';\nimport { DataGrid } from '@material-ui/data-grid';\nimport CardgroupSelect from '../submodules/cardgroupselect';\nimport { useState } from 'react';\nimport { Typography } from \"@material-ui/core\";\nimport { loadCardgroupFlashcards } from \"../../store/actions/cardActions\";\nimport CardDialog from \"../dialogs/cardDialog\";\n\n\n const AllCards = () => {\n\n    const dispatch = useDispatch()\n    const cards = useSelector(state => state.cardReducer.cards)\n    const [openCard, setOpenCard] = useState(false);\n    const [selectedCard, setSelectedCard] = useState({})\n\n\n    const [cardGroupId, setCardGroupId] = useState(0)\n\n\n    useEffect(() => {\n        dispatch(loadCardgroupFlashcards(cardGroupId)) \n        console.log(\"status\")\n    }, [dispatch, cardGroupId])\n    \n    console.log(\"cards\")\n    console.log(cards)\n\n    const columns = [\n        { field: 'username', headerName: 'Username', width: 130 },\n        { field: 'front', headerName: 'Card Front', width: 130 },\n        { field: 'back', headerName: 'Card Back', width: 130 },\n    ]      \n\n    let rows = cards.map(c => (\n        {\n            id: c.id,\n            name: c.user ? c.user.name: \"\",\n            username: c.user ? c.user.username: \"\",\n            front: c.front,\n            back: c.back\n        }\n    ))\n    \n    const handleClick = e => {\n        console.log(\"print\", e.row)\n        setSelectedCard(e.row)\n        setOpenCard(true)\n    }\n    \n    console.log(\"cgid\", cardGroupId)\n    return (\n        <PageWrapper>       \n            <CardDialog open={openCard} onClose={() => setOpenCard(false)} card={selectedCard} />\n            <div style={{marginBottom: \"15px\"}} >\n                <CardgroupSelect onChange={setCardGroupId} />\n                <Typography variant=\"subtitle2\" style={{marginTop: \"20px\"}}>\n                {/* {status[0] ? \"Due: \" + dateToString(status[0].cardgroup.dueDate) : \"Due:\"} */}\n                </Typography>\n            </div>\n\n                <div style={{ height: 400, width: '100%' }}>\n \n                <DataGrid  onCellClick={e => handleClick(e)} rows={rows} columns={columns} pageSize={5}  />\n            </div>\n        </PageWrapper>\n    )\n}\n\nexport default AllCards\n\n\n\n\n// import {useDispatch, useSelector} from \"react-redux\"\n// import { useEffect } from 'react';\n// import { loadCards, loadCardgroupFlashcards } from '../../store/actions/cardActions';\n// import CardView from '../submodules/cardview';\n// import {PageWrapper} from \"../../static/wrappers\"\n\n// const AllCards = props => {\n\n//     const cards = useSelector(state => state.cardReducer.cards)\n    \n//     const dispatch = useDispatch();\n\n//     useEffect(() => {\n//         dispatch(loadCards())   \n//     }, [dispatch])   \n\n\n//     return(\n//         <PageWrapper> \n//             <CardView cards={cards}/>\n//         </PageWrapper>\n//     )\n// }\n\n// export default AllCards","/home/asgeir/Desktop/master/client/src/components/adminpages/adminPage.js",["283"],"import { Redirect, useHistory } from \"react-router-dom\"\n\n\n\n\n\n\nconst AdminPage = () => {\n\n    const history = useHistory()\n    history.push(\"/adminpage/users\")\n\n    return(\n        <div>\n\n        </div>\n    )\n}\n\nexport default AdminPage","/home/asgeir/Desktop/master/client/src/components/adminpages/adminCardgroupPage.js",["284","285"],"import { PageWrapper } from \"../../static/wrappers\"\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { loadCardgroupFlashcards } from '../../store/actions/cardActions';\nimport CardView from \"../submodules/cardview\";\nimport AdmingroupCardView from \"../submodules/adminGroupCardView\";\n\n\n\nconst AdminCardGroupPage = props => {\n\n    const cards = useSelector(state => state.cardReducer.cards)\n    const dispatch = useDispatch()\n\n    const cardgroupId = props.match.params.id\n\n\n    useEffect(() => { \n        dispatch((loadCardgroupFlashcards(cardgroupId)))\n    }, [dispatch])\n\n    console.log(\"cards\", cards)\n    return (\n        <PageWrapper> \n        <div>\n            <AdmingroupCardView cards={cards} />\n        </div>\n        </PageWrapper>\n    )\n}\n\nexport default AdminCardGroupPage","/home/asgeir/Desktop/master/client/src/components/pages/login.js",["286","287"],"import React, { useState} from \"react\"\nimport  { Redirect } from 'react-router-dom'\nimport TextField from '@material-ui/core/TextField';\nimport axios from \"axios\";\nimport { Button, Icon, Link } from \"@material-ui/core\";\nimport { styled } from '@material-ui/core/styles';\nimport { useDispatch  } from 'react-redux';\nimport { PageWrapper } from \"../../static/wrappers\";\nimport { CLEAR_LOADING, SET_ALERT, SET_LOADING } from \"../../store/actionTypes\";\nimport Loading from \"../notifications/loading\";\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\n\n\nconst StyledLink = styled(Link)({\n  color: \"black\",\n  padding: \"20px\"    \n})\n\nconst ManualLogin = () => {\n  \n  const [username, setUsername] = useState(\"\")\n  const [email, setEmail] = useState(\"\")\n  const [name, setName] = useState(\"\")\n  const dispatch = useDispatch()\n  const [manualredirect, setManualredirect] = useState(false)\n\n\n  const manualLogin = e =>{\n    e.preventDefault()\n    if (username && email && name){\n      let data = {\n        username: username,\n        email: email,\n        name: name\n      }      \n\n      var url = '/api/userdata';\n      fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(data),\n        credentials: 'include',   // this line has been added for sessions \n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n      .then(response => response.json())\n      .then((data) => {\n        console.log(data);\n        if (data.status === \"success\"){\n          console.log(\"redirecting\")\n          setManualredirect(true)\n        } else {\n          throw(data.error) \n        }\n      })\n      .catch(err => {\n        let alert = {severity: \"error\", text: err}\n        dispatch({type: SET_ALERT, payload: alert}) \n  \n      })\n    } else {\n      let alert = {severity: \"error\", text: \"Missing credentials for login\"}\n      dispatch({type: SET_ALERT, payload: alert}) \n    }\n\n  }\n\n  if (manualredirect) {\n    return( \n      <Redirect to={{\n        pathname: \"/loginfunc\"\n      }}/>  \n    )\n  }\n  else {\n    return(\n      <div> \n          <div style={{marginBottom: 0, marginTop: \"50px\",}}> \n            <h3 style={{fontSize: \"14px\", color: \"#666\", display: \"inline\", padding: \"12px\"}}>ALTERNATIVE LOGIN - JUST FOR TESTING</h3> \n          </div>\n          <form onSubmit={manualLogin}>\n            <TextField  label=\"username\" onChange={e => setUsername(e.target.value)} required />  <br />\n            <TextField  label=\"name\" onChange={e => setName(e.target.value)} required/> <br />\n            <TextField  label=\"email\" onChange={e => setEmail(e.target.value)} required/> <br />\n            <Button  variant=\"contained\"  style={{margin: \"30px\"}} type=\"submit\">Manual Login (for testing)</Button>\n          </form> \n        </div>\n    )\n  }\n}\n\nfunction Login() {\n\n  const [AlternativeLogin, setAlternativeLogin] = useState(false)\n  const dispatch = useDispatch()\n  let loading = false;\n  const feideLogin = async () => {    \n    loading = !loading\n    dispatch({type: SET_LOADING, payload: true}) \n    await axios.get(\"/api/logintoken\", { withCredentials: true })\n    .then(res => {\n      window.open(res.data.url, \"_self\")\n    })  \n    .catch(err => {\n      console.log(\"err\", err)\n      let alert = {severity: \"error\", text: \"External login failed\"}\n      dispatch({type: SET_ALERT, payload: alert}) \n    })\n    dispatch({type: SET_LOADING, payload: false}) \n  } \n\n\n\n  \n    return (\n    <PageWrapper style={{textAlign: \"center\", marginTop: \"15%\"}}>\n\n      <Button color=\"primary\" variant=\"contained\" onClick={feideLogin} style={{width: \"300px\", height: \"80px\"}}>\n        Log in with Feide<Loading style={{marginLeft: \"10px\", height: \"26px\", }} size={24} alternative={<VpnKeyIcon />} /> \n      </Button> <br/>\n      <div style={{padding: \"10px\"}}> \n        <StyledLink href=\"#\" onClick={e => setAlternativeLogin(!AlternativeLogin)}>Alternative login</StyledLink>\n        <StyledLink  target=\"_blank\" href=\"https://s.ntnu.no/glemt\" >Forgot Password</StyledLink>        \n      </div>\n\n      {AlternativeLogin ? \n        <ManualLogin />\n      : <div> </div>}\n    </PageWrapper>     \n  );\n\n}\n\nexport default Login;\n","/home/asgeir/Desktop/master/client/src/components/pages/cardGroupPage.js",["288","289","290","291","292","293"],"/home/asgeir/Desktop/master/client/src/components/notifications/loading.js",["294"],"\nimport { CircularProgress, makeStyles } from '@material-ui/core/';\nimport { useSelector } from 'react-redux';\nimport loadingReducer from '../../store/reducers/loadingReducer';\n\nconst useStyles = makeStyles(theme => ({\n    loader: {\n        textAlign: \"center\"\n    }\n}))\n\n\nconst Loading = (props) => {\n    const classes = useStyles()\n    const loading = useSelector(state => state.loadingReducer.loading)\n\n    return (\n        <div style={props.style} className={classes.loader}>\n            {loading ?\n                <CircularProgress size={props.size ? props.size : 40} color={props.color ? props.color : \"secondary\"} /> \n            : props.alternative ? props.alternative : <div></div>} \n        </div>\n    )\n}\n\nexport default Loading","/home/asgeir/Desktop/master/client/src/components/submodules/adminGroupCardView.js",[],"/home/asgeir/Desktop/master/client/src/components/layout/adminNavbar.js",["295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314"],"\nimport React, {useState, useEffect} from \"react\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport  { Redirect, NavLink, Link, useHistory } from 'react-router-dom'\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport {AppBar, ButtonGroup, Menu, MenuItem} from '@material-ui/core'\nimport PersonIcon from '@material-ui/icons/Person';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { signOut } from '../../store/actions/authActions';\nimport { NavBarWrapper, PageWrapper } from \"../../static/wrappers\";\nimport { ToggleButton, ToggleButtonGroup } from \"@material-ui/lab\";\n\n\nconst useStyles = makeStyles(theme => ({ \n    navlink: {\n        color: theme.palette.textColor,\n        textDecoration: \"none\"\n    },\n    button: {\n        width: \"250px\",\n        height: \"50px\",\n    }\n})); \n\n\nconst AdminNavbar = props => {\n\n    const classes = useStyles()    \n    const [alignment, setAlignment] = React.useState(0);\n    const history = useHistory() \n    const urls=[\n        {\n            url: \"/adminpage/users\",\n            label: \"All Users\"\n        },\n        {\n            url: \"/adminpage/deliverystatus\",\n            label: \"Delivery Status\"\n        },\n        {\n            url: \"/adminpage/allcards\",\n            label: \"All Cards\"\n        },\n    ]\n\n    useEffect(() => {\n        setAlignment(urls.findIndex(x => x.url === history.location.pathname))\n    }, [history.location.pathname])\n\n\n    \n    return( \n        <PageWrapper>\n\n            <Typography variant=\"h4\" style={{flexGrow: 0}}>\n                Amin Page\n            </Typography>\n\n            <Toolbar style={{padding: 0}}>                        \n                <ToggleButtonGroup\n                    fullWidth\n                    value={alignment}\n                    exclusive  \n                    aria-label=\"text alignment\"\n                >\n                    {urls.map((url, index) => \n                        <ToggleButton component={Link} value={index} to={url.url} className={classes.button} variant=\"outlined\">{url.label}</ToggleButton> \n                    )}        \n                </ToggleButtonGroup>  \n            </Toolbar>\n        </PageWrapper>\n    )\n}\n\nexport default AdminNavbar","/home/asgeir/Desktop/master/client/src/components/adminpages/users.js",["315","316","317"],"import { PageWrapper } from \"../../static/wrappers\"\nimport { useDispatch, useSelector } from 'react-redux';\nimport userReducer from '../../store/reducers/userReducer';\nimport { useEffect } from 'react';\nimport { getAllUsers, getUsersWithRole, searchUsers } from '../../store/actions/userActions';\nimport { DataGrid, SearchIcon } from '@material-ui/data-grid';\nimport { FormControl, MenuItem, TextField, Grid, Button, IconButton } from '@material-ui/core';\nimport { InputLabel } from '@material-ui/core';\nimport { Select } from '@material-ui/core';\nimport { useState } from 'react';\nimport UserDialog from \"../dialogs/userDialog\";\n\n\n const Users = (props) => {\n\n    const [show, setShow] = useState('all');\n\n\n    const dispatch = useDispatch()\n    const users = useSelector(state => state.userReducer.users)\n    const [openUserDialog, setOpenUserDialog] = useState(false);\n    const [selectedUser,setSelectedUser] = useState({})\n\n\n    const [searchPhrase, setSearchPhrase] = useState(\"\")\n    \n\n    const userRoleFiler = role => {\n        if (role===\"all\"){\n            console.log(\"all da\")\n            dispatch(getAllUsers())\n        } else if (role===\"User\"){\n            dispatch(getUsersWithRole(\"User\"))\n        } else if (role===\"Admin\"){\n            console.log(\"aadd\")\n            dispatch(getUsersWithRole(\"Admin\"))\n        }\n    }\n\n    useEffect(() => {\n        // dispatch(getAllUsers())          \n        userRoleFiler(show)\n    }, [dispatch, show])\n\n    let rows = users    \n\n    const columns = [\n        {field: \"id\", headerName: \"id\", width: 70},\n        {field: \"username\", headerName: \"username\", width: 130},\n        {field: \"name\", headerName: \"name\", width: 130},\n        {field: \"email\", headerName: \"email\", width: 130},\n        {field: \"role\", headerName: \"role\", width: 130}\n    ]      \n\n    const handleSearch = (e) => {      \n        if (!searchPhrase){\n            userRoleFiler(show)\n        }   else {     \n        dispatch(searchUsers(show, searchPhrase))   \n        }     \n    }\n\n    const handleFilter = e => {\n        setSearchPhrase(\"\")\n        setShow(e.target.value)\n    } \n\n    const handleClick = e => {\n        console.log(\"print\", e.row)\n        setSelectedUser(e.row)\n        setOpenUserDialog(true)\n    }\n    \n    return (\n        <PageWrapper>       \n            <UserDialog open={openUserDialog} onClose={() => setOpenUserDialog(false)} user={selectedUser} />\n            <Grid container spacing={1}>\n                <Grid item xs={6}>\n            \n                    <FormControl fullWidth variant=\"outlined\">\n                    <InputLabel id=\"demo-simple-select-label\">Filter</InputLabel>\n                        <Select\n                        // labelId=\"demo-simple-select-label\"\n                        // id=\"demo-simple-select\"\n                        // value={show}\n                        // onChange={e => setShow(e.target.value)}'\n                        required\n                        color=\"secondary\"\n                        value={show}\n                        onChange={e => handleFilter(e)}\n                        label=\"show\"\n            \n                        >\n                        <MenuItem value={\"all\"}>All users</MenuItem>\n                        <MenuItem value={\"Admin\"}>Admins</MenuItem>\n                        <MenuItem value={\"User\"}>Users</MenuItem>\n                        </Select>\n                    </FormControl> \n                </Grid>\n                <Grid item xs={6}>\n\n\n                        <TextField \n                                id=\"search\"\n                                label=\"Search username\"\n                                color=\"secondary\"\n                                defaultValue=\"\"\n                                fullWidth\n                                onKeyPress={(ev) => {\n                                    if (ev.key === 'Enter') {\n                                        handleSearch()\n                                    }\n                                  }}\n                                onChange={e => setSearchPhrase(e.target.value)}\n                                value={searchPhrase}\n                                variant=\"outlined\"\n                                InputProps={{endAdornment: \n                                    <IconButton onClick={handleSearch}>\n                                        <SearchIcon />\n                                    </IconButton>\n                                }}\n                            ></TextField>\n                        </Grid>\n\n                        <Grid item xs={12}>\n\n\n\n                        <div style={{ height: 400, width: '100%' }}> \n                    <DataGrid onCellClick={e => handleClick(e)} rows={rows} columns={columns} pageSize={5}  />\n                    </div>\n            </Grid>  \n            </Grid>     \n\n        </PageWrapper>\n    )\n}\n\nexport default Users","/home/asgeir/Desktop/master/client/src/store/reducers/userReducer.js",["318"],"import { GET_USERS, GET_DELIVERY_STATUS, UPDATE_USER } from \"../actionTypes\"\n\n\n\nconst initState = {\n    users: [],\n    status: []\n}\n\nconst userReducer = (state = initState, action) => {\n\n    switch(action.type){\n        case GET_USERS:\n            console.log(\"successfull get users\")\n            return {\n                ...state, \n                users: action.payload\n            }   \n        case GET_DELIVERY_STATUS:\n            console.log(\"successfull get status\")\n            return{\n                ...state,\n                status: action.payload\n            }\n\n        case UPDATE_USER:\n            console.log(\"updated user\")\n            return{\n                ...state,\n                users: state.users.map(user => {\n                    if (user.id == action.payload.id ) {\n                        return action.payload;\n                    } else {\n                        return user;\n                    }\n                })\n            }\n            \n        default:\n            console.log(\"default auth\")\n            return state\n    }\n}\n\nexport default userReducer","/home/asgeir/Desktop/master/client/src/store/actions/userActions.js",[],"/home/asgeir/Desktop/master/client/src/components/adminpages/deliveryStatus.js",["319","320","321"],"import { PageWrapper } from \"../../static/wrappers\"\nimport { useDispatch, useSelector } from 'react-redux';\nimport userReducer from '../../store/reducers/userReducer';\nimport { useEffect } from 'react';\nimport {  getUsersStatus } from '../../store/actions/userActions';\nimport { DataGrid } from '@material-ui/data-grid';\nimport CardgroupSelect from '../submodules/cardgroupselect';\nimport { useState } from 'react';\nimport { Typography } from \"@material-ui/core\";\n\n\n const DeliveryStatus = () => {\n\n    const dispatch = useDispatch()\n    // const users = useSelector(state => state.userReducer.users)\n    const status = useSelector(state => state.userReducer.status)\n\n    const [cardGroupId, setCardGroupId] = useState(0)\n\n\n    useEffect(() => {\n        dispatch(getUsersStatus(cardGroupId))\n        console.log(\"status\")\n        console.log(status)\n    }, [dispatch, cardGroupId])\n    \n    console.log(\"usars\")\n\n    \n\n    const columns = [\n        { field: 'username', headerName: 'Username', width: 130 },\n        { field: 'delivered', headerName: 'Delivered', type: \"number\", width: 130 },\n        {\n          field: 'toDeliver',\n          headerName: 'To Deliver',\n          type: 'number',\n          width: 130,\n        },\n        { field: 'complete', headerName: 'Complete', type: \"number\", width: 130 },      \n    ]      \n\n    let rows = status.map(s => (\n        {\n            id: s.user.id, \n            username: s.user.username, \n            delivered: s.delivered, \n            toDeliver: s.cardgroup.numberOfCardsDue,\n            complete: s.delivered == s.cardgroup.numberOfCardsDue ? true : false\n        }\n    ))\n\n    \n      \n    \n    const dateToString = date => {\n        let a = new Date(date.year, date.month-1, date.date, date.hour, date.minute)\n            console.log(\"aa\", a)\n            // return a.getUTCMonth()\n            return a.toString()\n      }\n    \n    console.log(\"cgid\", cardGroupId)\n    return (\n        <PageWrapper>       \n            <div style={{marginBottom: \"15px\"}} >\n                <CardgroupSelect onChange={setCardGroupId} />\n                <Typography variant=\"subtitle2\" style={{marginTop: \"20px\"}}>\n                {status[0] ? \"Due: \" + dateToString(status[0].cardgroup.dueDate) : \"Due:\"}\n                </Typography>\n            </div>\n\n                <div style={{ height: 400, width: '100%' }}>\n \n                <DataGrid rows={rows} columns={columns} pageSize={5}  />\n            </div>\n        </PageWrapper>\n    )\n}\n\nexport default DeliveryStatus","/home/asgeir/Desktop/master/client/src/components/dialogs/userDialog.js",["322","323","324","325"],"import { Button, Dialog } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addAdmin, removeAdmin } from '../../store/actions/userActions';\nimport { useEffect } from 'react';\nimport userReducer from '../../store/reducers/userReducer';\n\n\n\nconst UserDialog = (props) =>  {\n    const { onClose, selectedValue, open, user } = props;\n   \n    const dispatch = useDispatch()\n\n    const handleClose = () => {\n      onClose(selectedValue);\n    };\n    \n    const makeAdmin = () => {\n        dispatch(addAdmin(user))\n        handleClose()\n    }\n\n    const unmakeAdmin = () => {\n        dispatch(removeAdmin(user))\n        handleClose()\n    }\n   \n    return (\n      <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open} >\n        <div style={{padding: \"30px\", width:\"500px\"}}>\n\n            <h2>User: {user.name}</h2>\n            <span style={{ color: \"grey\" }}>username: </span><span>{user.username}</span> <br />\n            <span style={{ color: \"grey\" }}>email: </span><span>{user.email}</span> <br />\n            <span style={{ color: \"grey\" }}>role: </span><span>{user.role}</span> <br />\n\n            <div style={{textAlign: \"center\", paddingTop: \"50px\"}}>\n            {user.role == \"Admin\" ? \n                <Button onClick={() => unmakeAdmin()} variant=\"outlined\">Remove admin</Button>\n            :\n                <Button onClick={() => makeAdmin()} variant=\"outlined\">Make admin</Button>\n            }     \n            </div>\n        \n        </div>\n      </Dialog>\n    );\n  }\n  \n  export default UserDialog","/home/asgeir/Desktop/master/client/src/components/dialogs/cardDialog.js",["326","327","328","329","330","331","332"],"import { Button, Dialog, Box } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addAdmin, removeAdmin } from '../../store/actions/userActions';\nimport { useEffect } from 'react';\nimport userReducer from '../../store/reducers/userReducer';\nimport CardView from '../submodules/cardview';\n\nconst CardDialog = (props) =>  {\n    const { onClose, selectedValue, open, card } = props;\n   \n    // const dispatch = useDispatch()\n\n    const handleClose = () => {\n      onClose(selectedValue);\n    };\n    \n    // const makeAdmin = () => {\n    //     dispatch(addAdmin(user))\n    //     handleClose()\n    // }\n\n    // const unmakeAdmin = () => {\n    //     dispatch(removeAdmin(user))\n    //     handleClose()\n    // }\n   \n    return (\n      <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n      <Box style={{width:\"400px\", height: \"auto\", margin: 0}} >\n          <CardView cards={[card]} />\n          </Box>\n      </Dialog> \n    );\n  }\n  \n  export default CardDialog","/home/asgeir/Desktop/master/client/src/components/pages/peerreview.js",["333","334","335","336"],"\nimport { PageWrapper } from \"../../static/wrappers\";\nimport { Divider, Grid, makeStyles } from '@material-ui/core';\nimport { Typography } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport GroupView from \"../submodules/groupview\";\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { loadCardgroups } from \"../../store/actions/cardgroupActions\";\nimport { useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { useState } from 'react';\nimport CreatePeerreview from \"../dialogs/createPeerreview\";\nimport { getUserPeerreviews } from \"../../store/actions/peerreviewActions\";\nimport PeerreviewView from \"../submodules/peerReviewView\";\n\n\nconst useStyles = makeStyles(theme => ({\n    addButton: {\n        backgroundColor: theme.palette.button.success.main,\n        color: \"white\",\n        border: \"none\",\n        align: \"center\",\n        '&:hover': {\n            background: theme.palette.button.success.dark,\n          }\n\n    }\n}))\n\nconst PeerReview = () => {\n    const classes = useStyles() \n    const dispatch = useDispatch();  \n    const [open, setOpen] = useState(false);\n   \n    const peerreviews = useSelector(state => state.peerreviewReducer.peerreviews)\n    const isAdmin = useSelector(state => state.authReducer.isAdmin)\n    const [cardgroups, setCardgroups] = useState([])\n\n    useEffect(() => {\n        dispatch(getUserPeerreviews())\n        \n    }, [dispatch])   \n\n    const history = useHistory()\n\n    const handleRedirect = peerreviewid => {\n        history.push(\"/peerreview/\"+peerreviewid)\n    }\n    \n    useEffect(() => {\n        if (peerreviews.length){\n            setCardgroups(  \n                peerreviews.map(p => {\n                    return p.cardgroup\n                })\n            )\n        }\n    }, [peerreviews])\n\n    return( \n        <PageWrapper>\n            <CreatePeerreview open={open} onClose={() => setOpen(false)}  />\n\n            <Grid container spacing={5}>  \n                <Grid item xs={12}>\n                    <Grid container spacing={2}>  \n                        <Grid item xs={8}  >\n                            <Typography variant=\"h4\" gutterBottom >\n                                Peer Review of Cards\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={4}  >\n                            {isAdmin ?                 \n                            <Button fullWidth className={classes.addButton} variant=\"outlined\" onClick={() => setOpen(true)}>\n                                + Add Peer Review Session\n                            </Button> :\n                            <div></div>}\n                        </Grid>\n                        <Grid item xs={12}  >\n\n\n\n                            <Typography variant=\"body2\" color=\"textSecondary\">\n                                Liten readme her\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <PeerreviewView peerreviews={peerreviews} onClick={handleRedirect} />\n                        </Grid> \n\n                    </Grid>\n                </Grid>\n\n            </Grid>\n\n        </PageWrapper>\n    )\n\n}\n\n\nexport default PeerReview","/home/asgeir/Desktop/master/client/src/components/pages/peerReviewGroup.js",["337","338","339","340","341","342","343","344","345","346"],"\nimport { useSelector } from 'react-redux';\nimport React, {useState} from \"react\"\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { loadCards, loadCardgroupFlashcards, loadPeerReviewFlashcards } from '../../store/actions/cardActions';\nimport RateCard from '../submodules/rateCard';\nimport { Box, Button, Divider, Grid, Typography } from '@material-ui/core';\nimport { PageWrapper } from \"../../static/wrappers\";\nimport { loadCardgroup } from '../../store/actions/cardgroupActions';\nimport Loading from '../notifications/loading';\nimport loadingReducer from '../../store/reducers/loadingReducer';\nimport  SaveIcon  from '@material-ui/icons/Save';\nimport CardgroupSelect from '../submodules/cardgroupselect';\nimport { loadPeerreview } from '../../store/actions/peerreviewActions';\nimport Progress from '../submodules/progress';\nimport ratingReducer from '../../store/reducers/ratingReducer';\nimport { getRatingsInPeerreview } from '../../store/actions/ratingActions';\n\nconst PeerReviewGroup = (props) =>{\n    const peerreviewId = props.match.params.id\n\n    const cards = useSelector(state => state.cardReducer.cards)\n    const peerreview = useSelector(state => state.peerreviewReducer.peerreviews[0])\n\n    const ratings = useSelector(state => state.ratingReducer.ratings)\n    const [save, setSave] = useState(false) \n\n    const dispatch = useDispatch() \n    useEffect(() => {\n        dispatch(loadPeerreview(peerreviewId))\n        dispatch(loadPeerReviewFlashcards(peerreviewId))  \n        dispatch(getRatingsInPeerreview(peerreviewId))\n    }, [])\n\n    console.log(\"mhmhmhm\")\n    console.log(cards)\n\n    const loading = useSelector(state => state.loadingReducer.loading)\n\n    useEffect(() => {\n        if (!loading){\n            setSave(false)\n        }\n    }, [loading])\n\n    const saveAllRatings = () => {\n        console.log(\"save...\")\n        setSave(true)\n    }\n\n    const testFunc = props => {\n        console.log(\"test:\", props)\n    }\n\n    \n\n    if (!cards || !peerreview){\n        return(\n            <Loading />\n        )\n    }\n    else {\n        return (\n            <PageWrapper>\n                <Typography  variant=\"h4\" >Peer Review of Cards from </Typography>\n                <Typography  variant=\"h4\" >{peerreview.cardgroup.title}</Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                {peerreview.reviewsDue} cards are due to be rated. Read the question, attempt to answer it to yourself, \n                then you may reveal the answer. After testing the card, you are to rate it based on three criteria, try to be objective:\n                    <br/> <br/>\n                    <b>Level of Difficulty</b> An objective rating on whether the difficulty of the card is appropriate. Too easy or too hard? Rate the card low. \n                    Good level of difficulty? Rate the card high. <br/>\n                    <b>Relevance and Quality</b> A rating of how relevant the card is to the course curriculum and the quality of the flashcard. Will studying\n                     this card be useful for learning the course material? Is the question well-phrased? Is it too long and complex? Is it original?\n                    the cource material? Is the question well phrased? Is it too long and complex? Is it original?<br/>\n                    <b>Mark as Duplicate</b>  If two or more cards are very similar or duplicate of each other, press \"mark as duplicate\" on one of the cards and\n                     choose one or more of the other cards.\n\n                    {/* <b>Overall quality</b> The overall quality of the flashcard. Is the question well phrased? Is it too long and complex? Is it original? This rating can be more subjective. <br/> */}\n\n                </Typography>\n                    <Progress x={ratings.length} y={peerreview.reviewsDue} body=\"Cards rated\" style={{width: \"300px\", marginLeft: \"auto\", marginBottom: \"30px\"}} />\n                <Divider />\n                \n                {cards.length ? \n                \n                cards.map((card, i) => \n                    <React.Fragment>\n                        <RateCard key={card.id} card={card} index={i+1} save={save}  />\n                        <Divider />\n                    </React.Fragment>\n                ) : <div>empty</div>}\n                \n                <div style={{margin: \"10px\", textAlign: \"left\"}}>\n{/*                 \n                <Grid container spacing={2}>\n                    <Grid item xs={12}>     */}\n                    <div style={{padding: \"0 200px\"}}>\n                    <Button color=\"primary\" fullWidth variant=\"contained\" onClick={saveAllRatings}  >\n                        Save Ratings<Loading style={{marginLeft: \"10px\", height: \"26px\", }} size={24} alternative={<SaveIcon />} /> \n                    </Button> <br/>\n                    </div>\n                    \n                    {/* </Grid>\n                    <Grid item xs={6}> \n                    </Grid>\n                </Grid> */}\n\n                </div>\n            </PageWrapper>\n        )\n    }\n}\n\nexport default PeerReviewGroup","/home/asgeir/Desktop/master/client/src/components/submodules/rateCard.js",["347","348","349","350","351","352","353","354","355","356","357","358"],"\nimport { Button, Card, Grid, IconButton, Tooltip, Typography } from '@material-ui/core';\nimport Rating from '@material-ui/lab/Rating';\nimport SaveIcon from '@material-ui/icons/Save';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport { makeStyles } from '@material-ui/core';\nimport { useState } from 'react';\nimport MoodBadIcon from '@material-ui/icons/MoodBad';\nimport { getRating, saveRating } from '../../store/actions/ratingActions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport ratingReducer from '../../store/reducers/ratingReducer';\nimport loadingReducer from '../../store/reducers/loadingReducer';\nimport Loading from '../notifications/loading';\nimport { SET_ALERT } from '../../store/actionTypes';\nconst useStyles = makeStyles(theme => ({\n    container: {\n        padding: \"10px\",\n        minHeight: \"150px\",\n        margin: \"10px 0\",\n    },\n    duplicateButton: {\n        fontSize: \"10px\",\n        marginTop: \"10px\"\n    },\n    body:{\n        minHeight: \"100px\",\n    }\n}))\n\nconst RateCard = ({card, index, save}) => {\n\n    const classes = useStyles()\n    const [flipped, setFlipped] = useState(false);\n\n    const [difficulty, setDifficulty] = useState(0)\n    const [relevance, setRelevance] = useState(0)\n    const [saveDate, setSaveDate] = useState(\"\");\n\n    const loading = useSelector(state => state.loadingReducer.loading)\n\n\n    const [quality, setQuality] = useState(0)\n    const dispatch = useDispatch() \n\n    const rating = useSelector(state => state.ratingReducer.ratings.find(rating => rating.card_id == card.id))\n    \n    \n\n    useEffect(() => {\n        console.log(\"fml\")\n        dispatch(getRating(card.id))     \n    }, [])\n\n\n    useEffect(() => {\n        if (rating){\n            setDifficulty(rating.difficulty)    \n            setQuality(rating.quality_rating)\n            setSaveDate(rating.savedatestring)\n        }\n    }, [rating])\n\n    useEffect(() => {\n        if(save){\n            submitRating()\n        }\n    }, [save])\n\n\n\n    const markAsDuplicate = () => {\n        console.log(\"duplicate\")\n        alert(\"Mark as duplicate not yet implemented\")\n        // setDifficulty(5)\n    }\n\n    const submitRating = () => {\n\n        if (difficulty && quality){\n            console.log(\"rate this card\")\n            const rating = {\n                difficulty,\n                quality,\n                cardId: card.id\n            }                  \n            dispatch(saveRating({rating, cardNumber: index}))\n            }\n        else {\n        }\n    }\n\n    return(\n        <Grid className={classes.container} container spacing={2}>\n                <Grid item xs={1}>       \n                        <Typography variant=\"subtitle2\">#</Typography>\n                        <Typography variant=\"body2\">{index}</Typography>\n                </Grid>\n                <Grid item xs={3}>       \n                        <Typography variant=\"subtitle2\">Question</Typography>\n                        <Typography variant=\"body2\">{card.front}</Typography>\n                </Grid>\n                \n                <Grid item xs={5}>       \n                        <Typography variant=\"subtitle2\">{flipped ? \"Answer\" : \"Reveal Answer\"}</Typography>\n                        {flipped ? \n                            <Typography className={classes.body} variant=\"body2\"> {flipped ? card.back : \"\" }</Typography>\n                        :\n                            <div></div>\n                        }\n\n\n                        <Tooltip title={flipped ? \"Hide Answer\" : \"Reveal Answer\"} placement=\"right\">\n                            <IconButton onClick={() => setFlipped(!flipped)} variant={\"outlined\"}  className={classes.revealButton} size=\"small\">                           \n                                {flipped ? <VisibilityOffIcon size=\"small\" color=\"primary\" /> : <VisibilityIcon size=\"small\"  color=\"primary\"/>}\n                            </IconButton>\n                        </Tooltip>\n                        \n                        \n                </Grid>\n                <Grid item xs={3}>       \n                        <Typography variant=\"subtitle2\">Rate</Typography> \n                        <Typography variant=\"body2\"> Difficulty</Typography> \n                        <Rating \n                            value={difficulty/2}\n                            precision={0.5}\n                            size=\"small\"\n                            onChange={(event, newValue) => {\n                                setDifficulty(2*newValue);\n                            }}\n                        />\n                        \n                        <Typography variant=\"body2\">Relevance and Quality</Typography> \n                        <Rating \n                            value={quality/2}\n                            precision={0.5}\n                            size=\"small\"\n                            onChange={(event, newValue) => {\n                                setQuality(2*newValue);\n                            }}\n                        />\n\n                        {/* <Typography variant=\"body2\">Overall quality</Typography> \n                        <Rating \n                            value={quality}\n                            precision={0.5}\n                            size=\"small\"\n                            onChange={(event, newValue) => {\n                                setQuality(newValue);\n                            }}\n                        /> */}\n                         <Button className={classes.duplicateButton} onClick={markAsDuplicate} variant=\"contained\" color=\"primary\" size=\"small\" endIcon={<MoodBadIcon />} >                           \n                            Mark as duplicate\n                        </Button>\n\n                </Grid>\n\n                <Grid item xs={12} style={{height: \"24px\"}}>\n                    <Typography variant=\"caption\" color=\"textSecondary\" >{saveDate ? \"Last saved \"+saveDate : \"\"} </Typography> \n                </Grid>\n                {/* <Grid item xs={2} style={{textAlign: \"center\"}}>     \n                    <Typography variant=\"subtitle2\">Save Rating</Typography>  \n                    <IconButton size=\"small\" color=\"primary\" onClick={submitRating}>\n                        {loading  ? <Loading color=\"primary\" size=\"24px\"  /> : <SaveIcon size=\"small\"/>} \n                    </IconButton> \n                </Grid> */}\n        </Grid>\n    )\n}\n\nexport default RateCard","/home/asgeir/Desktop/master/client/src/components/pages/study.js",[],"/home/asgeir/Desktop/master/client/src/components/layout/footer.js",[],"/home/asgeir/Desktop/master/client/src/store/reducers/ratingReducer.js",["359","360"],"\nimport { CREATE_RATING, LOAD_RATINGS  } from '../actionTypes';\n\nconst initState = {\n    ratings: []\n}\n\nconst ratingReducer = (state = initState, action) => {\n\n    switch(action.type){\n        case CREATE_RATING:\n            \n            console.log(\"savind\", action.payload)\n            /* Is in list */\n            if (state.ratings.filter(rating => rating.id === action.payload.id).length > 0){\n                console.log(\"IN ARR\")\n                console.log(state.ratings)\n                console.log(\n                    state.ratings.map(rating => {\n                        if (rating.id === action.payload.id){\n                            return action.payload\n                        }\n                        else{\n                            return rating\n                        }\n                    })    \n                )\n                return{\n                    ...state,\n                    ratings: state.ratings.map(rating => {\n                        if (rating.id === action.payload.id){\n                            return action.payload\n                        }\n                        else{\n                            return rating\n                        }\n                    })    \n                }\n            } else{\n                console.log(\"NOT IN ARR\")\n                return{\n                    ...state,\n                    ratings: [...state.ratings, action.payload]\n                }\n            }\n\n            \n\n            return{\n                ...state,\n                ratings: state.ratings.map(rating => {\n                    if (rating.id === action.payload.id){\n                        return action.payload\n                    }\n                    else{\n                        return rating\n                    }\n                })\n            }\n        \n            return{\n                ...state,\n                ratings: [action.payload]\n            }\n        case LOAD_RATINGS:\n            console.log(\"got ratings\", action.payload)\n            return{\n                ...state,\n                ratings: action.payload\n            }\n            \n        default:\n            console.log(\"default alert\")\n            return state\n    }\n}\n\nexport default ratingReducer","/home/asgeir/Desktop/master/client/src/store/actions/ratingActions.js",[],"/home/asgeir/Desktop/master/client/src/utils/datehandling.js",[],"/home/asgeir/Desktop/master/client/src/store/reducers/peerreviewReducer.js",[],"/home/asgeir/Desktop/master/client/src/components/dialogs/createPeerreview.js",["361","362"],"/home/asgeir/Desktop/master/client/src/store/actions/peerreviewActions.js",["363","364"],"import axios from 'axios';\nimport { CREATE_PEERREVIEW, LOAD_PEERREVIEWS, SET_LOADING, SET_ALERT, GET_USER_ALL_PEERREVIEWS } from '../actionTypes';\n\n\nexport const createPeerreviews = ({groupId, dueDate, numberOfReviews}) => async( dispatch, getState) => {\n        \n    \n    dispatch({type: SET_LOADING, payload: true})\n    await axios.post(\"/api/createpeerreviewsessions\", {\n            groupId: groupId,\n            dueDate: dueDate,\n            numberOfReviews: numberOfReviews\n        }, {\n            headers: {\n                Authorization: \"Bearer \" + localStorage.getItem(\"user_token\")\n            }\n        })\n        .then(res => {\n            if(res.data.error){\n                throw new Error(res.data.error)\n            }\n            console.log(\"returned\")\n            console.log(res.data)\n            \n            if(res.data.error){\n                console.log(\"error\")\n                throw new Error(res.data.error)\n            }\n\n\n            const createdPeerreview = res.data\n            console.log(\"was created, \",  )\n            let alert = {severity: \"success\", text: \"successfully created peerreviews: \"+createdPeerreview}\n            dispatch({type: SET_ALERT, payload: alert})\n            // dispatch({type: CREATE_PEERREVIEW, payload: createdCardgroup})\n        })\n        .catch(err => {\n            console.log(\"This is an error yes plz\")\n            let alert = {severity: \"error\", text: err.toString()}\n            dispatch({type: SET_ALERT, payload: alert})\n            // dispatch({type: CREATE_CARDGROUP_ERROR, err})\n        })\n\n    dispatch({type: SET_LOADING, payload: false})\n    \n};\n\nexport const getUserPeerreviews = () => async( dispatch, getState) => {\n        \n    \n    dispatch({type: SET_LOADING, payload: true})\n    await axios.get(\"/api/userpeerreviews\", \n    {\n        headers: {\n            Authorization: \"Bearer \" + localStorage.getItem(\"user_token\")\n        }\n    })\n\n   \n\n        .then(res => {\n            if(res.data.error){\n                throw new Error(res.data.error)\n            }\n            console.log(\"returned\")\n            console.log(res.data)\n            \n            if(res.data.error){\n                console.log(\"error\")\n                throw new Error(res.data.error)\n            }\n\n\n            const peerReviews = res.data\n            console.log(\"was found, \",  peerReviews)\n            dispatch({type: LOAD_PEERREVIEWS, payload: peerReviews})\n            // let alert = {severity: \"success\", text: \"successfully got peerreviews: \"+peerReviews}\n            // dispatch({type: SET_ALERT, payload: alert})\n            // dispatch({type: CREATE_PEERREVIEW, payload: createdCardgroup})\n        })\n        .catch(err => {\n            console.log(\"This is an error yes plz\")\n            let alert = {severity: \"error\", text: err.toString()}\n            dispatch({type: SET_ALERT, payload: alert})\n            // dispatch({type: CREATE_CARDGROUP_ERROR, err})\n        })\n\n    dispatch({type: SET_LOADING, payload: false})\n    \n};\n\nexport const loadPeerreview = (pid) => async( dispatch, getState) => {\n        \n    \n    dispatch({type: SET_LOADING, payload: true})\n    await axios.get(\"/api/peerreview/\"+pid, \n    {\n        headers: {\n            Authorization: \"Bearer \" + localStorage.getItem(\"user_token\")\n        }\n    })\n\n   \n\n        .then(res => {\n            if(res.data.error){\n                throw new Error(res.data.error)\n            }\n            console.log(\"returned\")\n            console.log(res.data)\n            \n            if(res.data.error){\n                console.log(\"error\")\n                throw new Error(res.data.error)\n            }\n\n\n            const peerreview = res.data\n            console.log(\"was found, \",  peerreview)\n            dispatch({type: LOAD_PEERREVIEWS, payload: [peerreview]})\n            // let alert = {severity: \"success\", text: \"successfully got peerreviews: \"+peerreview}\n            // dispatch({type: SET_ALERT, payload: alert})\n            // dispatch({type: CREATE_PEERREVIEW, payload: createdCardgroup})\n        })\n        .catch(err => {\n            console.log(\"This is an error yes plz\")\n            let alert = {severity: \"error\", text: err.toString()}\n            dispatch({type: SET_ALERT, payload: alert})\n            // dispatch({type: CREATE_CARDGROUP_ERROR, err})\n        })\n\n    dispatch({type: SET_LOADING, payload: false})\n    \n};\n","/home/asgeir/Desktop/master/client/src/components/submodules/peerReviewView.js",["365","366","367"],"import { CardActionArea, Divider, Grid, Typography } from '@material-ui/core';\nimport { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport loadingReducer from '../../store/reducers/loadingReducer';\nimport Loading from '../notifications/loading';\nimport { dateJSONToString } from '../../utils/datehandling';\n\n\n\n\nconst PeerreviewView = ({peerreviews, showDueDate, onClick}) => {\n\n    const loading = useSelector(state => state.loadingReducer.loading)   \n\n    if (loading){\n        return <Loading />\n    }\n    else {\n        return(\n            <div>\n                <Divider   /> \n                <Grid container spacing={0}>\n                    <Divider   /> \n\n                    {peerreviews.length ? \n                    peerreviews.map((peerreview) => (\n                        <Grid item xs={12} key={peerreview.id}> \n                            <CardActionArea onClick={() => onClick(peerreview.id)} style={{padding: \"10px\", minHeight: \"100px\"}}>\n                                <Grid container spacing={2} >\n                                    <Grid item xs={12}>                        \n                                        <Typography variant=\"subtitle1\" component=\"h2\">\n                                            Peer Review of cards in <i>{peerreview.cardgroup.title} </i>\n                                        </Typography>\n                                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">\n                                                {peerreview.reviewsDue} Cards are due for peer review: {dateJSONToString.call(this, peerreview.dueDate)}    \n                                            </Typography> \n                                    </Grid>\n                                </Grid>\n                            </CardActionArea> \n                            <Divider   /> \n                        </Grid>)) : <Typography variant=\"subtitle1\"> No peer reviews due</Typography> } \n                \n                </Grid>\n            </div>\n        )\n    }\n}\n\nexport default PeerreviewView","/home/asgeir/Desktop/master/client/src/components/submodules/progress.js",[],"/home/asgeir/Desktop/master/client/src/components/pages/addCards.js",["368","369"],"import React, { useEffect } from \"react\"\nimport { useDispatch, useSelector } from 'react-redux';\nimport GroupView from \"../submodules/groupview\";\nimport { loadCardgroups } from \"../../store/actions/cardgroupActions\";\nimport {Typography, Button, Grid, makeStyles} from '@material-ui/core';\nimport {PageWrapper} from \"../../static/wrappers\"\nimport CreateCardGroup from \"../dialogs/createCardGroup\";\nimport { adminOnly } from \"../../store/actions/authActions\";\nimport authReducer from '../../store/reducers/authReducer';\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n    addButton: {\n        backgroundColor: theme.palette.button.success.main,\n        color: \"white\",\n        border: \"none\",\n        align: \"center\",\n        '&:hover': {\n            background: theme.palette.button.success.dark,\n          }\n\n    }\n}))\n\n\n\nconst AddCards = () => {\n\n    const classes = useStyles()\n    const dispatch = useDispatch();\n   \n    const cardgroups = useSelector(state => state.cardgroupReducer.cardgroups)\n    const isAdmin = useSelector(state => state.authReducer.isAdmin)\n\n    useEffect(() => {\n        dispatch(loadCardgroups())\n    }, [dispatch])   \n\n    useEffect(() => {\n        console.log(\"cardgroups changed...\")\n    }, [cardgroups])   \n\n    const [open, setOpen] = React.useState(false);\n    // const [selectedValue, setSelectedValue] = React.useState(emails[1]);\n  \n    const handleClickOpen = () => {\n      setOpen(true);\n    };\n  \n    const handleClose = (value) => {\n      setOpen(false);\n    };\n\n    const history = useHistory() \n    const handleRedirectToGroup = groupId => {\n        history.push(\"/cardgroup/\" +groupId)\n    }\n\n\n\n\n    return (\n        // <div style={{maxWidth: \"600px\", marginTop: \"65px\", marginLeft: \"auto\", marginRight: \"auto\"}}>\n        <PageWrapper>   \n        {/* <img src=\"../../static/download.jpeg\"  width=\"500\" height=\"600\" /> */}\n\n\n        <Grid container spacing={2}>\n            <Grid item xs={8}  >\n                <Typography variant=\"h4\" gutterBottom >\n                    Add Cards    \n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                    Each cardgroup has a set number of cards to submit and a duedate.\n                    </Typography>\n            </Grid>\n            <Grid item xs={4}>\n                {isAdmin ?                 \n                <Button fullWidth className={classes.addButton} variant=\"outlined\" onClick={handleClickOpen}>\n                    + Create group\n                </Button> :\n                <div></div>}\n            </Grid> \n            <Grid item xs={12}>\n                <GroupView cardgroups={cardgroups} showDueDate onClick={handleRedirectToGroup}/>\n            </Grid> \n        </Grid>\n    \n        \n    <CreateCardGroup open={open} onClose={handleClose}  />\n    </PageWrapper>\n        \n    )\n}\n\nexport default AddCards","/home/asgeir/Desktop/master/client/src/components/pages/home.js",["370","371"],"\nimport { Grid, Typography, Divider, Link } from '@material-ui/core';\nimport { PageWrapper } from '../../static/wrappers';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\n\nconst Home = () => {\n\n\n\n    return(\n        <PageWrapper>\n            <Grid container spacing={2}>\n                <Grid item xs={12}  >\n                    <Typography variant=\"h4\" gutterBottom >\n                        Home\n                    </Typography>\n                </Grid> \n                <Grid item xs={12}>\n                    <Divider />\n                </Grid> \n                <Grid item xs={12}>\n                    <Typography variant=\"body2\" color=\"textSecondary\">\n                        <b>About:</b> <br/>\n                        This application will be used to build a collective deck of quality flashcards, covering the curriculum of TTK4145 - Real-time Programming.\n                        <br /> <br />\n                        During the semester you are tasked with creating 2-5 flashcards for specific parts of the course material. Through peer review, the best flashcards will be selected to be added to the collective deck. \n                        You will be rewarded for creating original, quality flashcards. \n                        <br /> <br/> \n                        <span>You will be able to use the collective deck to study the course material, either a random sample or through spaced repetition, which is recommended. </span>\n                         <Link color=\"textPrimary\" href=\"https://en.wikipedia.org/wiki/Spaced_repetition\">Read more about spaced repetition here</Link>  \n                        <br/> <br />\n                        Please submit feedback, suggestions and report bugs to Asgeir Hunshamar. Contact below\n                        \n                                               \n                    </Typography>\n                </Grid>\n                <Grid item xs={12} style={{marginTop: \"50px\"}}>\n                    <Typography variant=\"body2\" color=\"textSecondary\">\n                                <b>Contact:</b>                                                           \n                    </Typography>                                       \n                </Grid>\n\n                <Grid item xs={4}>\n                    <Typography variant=\"body2\" color=\"textSecondary\">\n                        <b>Asgeir Hunshamar</b> <br/>\n                        Creator and developer <br/>\n                        <a>asgeirhu@stud.ntnu.no</a>\n                    </Typography>\n                </Grid>\n                <Grid item xs={4}>\n                    <Typography variant=\"body2\" color=\"textSecondary\">\n                        <b>Sverre Hendseth</b> <br/>\n                        Course coordinator and lecturer <br/>\n                        <Link color=\"inherit\" href=\"mailto:sverre.hendseth@ntnu.no\">sverre.hendseth@ntnu.no</Link> \n                    </Typography>\n                </Grid>\n\n            </Grid>\n\n\n        </PageWrapper>\n    )\n}\n\nexport default Home",{"ruleId":"372","replacedBy":"373"},{"ruleId":"374","replacedBy":"375"},{"ruleId":"376","severity":1,"message":"377","line":10,"column":8,"nodeType":"378","messageId":"379","endLine":10,"endColumn":14},{"ruleId":"376","severity":1,"message":"380","line":3,"column":27,"nodeType":"378","messageId":"379","endLine":3,"endColumn":35},{"ruleId":"376","severity":1,"message":"381","line":15,"column":8,"nodeType":"378","messageId":"379","endLine":15,"endColumn":26},{"ruleId":"382","severity":1,"message":"383","line":57,"column":8,"nodeType":"384","endLine":57,"endColumn":28,"suggestions":"385"},{"ruleId":"382","severity":1,"message":"386","line":25,"column":8,"nodeType":"384","endLine":25,"endColumn":18,"suggestions":"387"},{"ruleId":"376","severity":1,"message":"388","line":2,"column":16,"nodeType":"378","messageId":"379","endLine":2,"endColumn":24},{"ruleId":"376","severity":1,"message":"380","line":4,"column":11,"nodeType":"378","messageId":"379","endLine":4,"endColumn":19},{"ruleId":"376","severity":1,"message":"380","line":1,"column":10,"nodeType":"378","messageId":"379","endLine":1,"endColumn":18},{"ruleId":"376","severity":1,"message":"389","line":5,"column":8,"nodeType":"378","messageId":"379","endLine":5,"endColumn":19},{"ruleId":"390","severity":1,"message":"391","line":77,"column":91,"nodeType":"392","messageId":"393","endLine":77,"endColumn":93},{"ruleId":"376","severity":1,"message":"394","line":3,"column":87,"nodeType":"378","messageId":"379","endLine":3,"endColumn":109},{"ruleId":"376","severity":1,"message":"395","line":5,"column":7,"nodeType":"378","messageId":"379","endLine":5,"endColumn":12},{"ruleId":"376","severity":1,"message":"396","line":11,"column":8,"nodeType":"378","messageId":"379","endLine":11,"endColumn":22},{"ruleId":"376","severity":1,"message":"388","line":2,"column":10,"nodeType":"378","messageId":"379","endLine":2,"endColumn":18},{"ruleId":"376","severity":1,"message":"380","line":3,"column":10,"nodeType":"378","messageId":"379","endLine":3,"endColumn":18},{"ruleId":"376","severity":1,"message":"396","line":5,"column":8,"nodeType":"378","messageId":"379","endLine":5,"endColumn":22},{"ruleId":"382","severity":1,"message":"397","line":59,"column":7,"nodeType":"384","endLine":59,"endColumn":18,"suggestions":"398"},{"ruleId":"376","severity":1,"message":"399","line":2,"column":43,"nodeType":"378","messageId":"379","endLine":2,"endColumn":53},{"ruleId":"376","severity":1,"message":"400","line":5,"column":10,"nodeType":"378","messageId":"379","endLine":5,"endColumn":19},{"ruleId":"382","severity":1,"message":"386","line":25,"column":8,"nodeType":"384","endLine":25,"endColumn":10,"suggestions":"401"},{"ruleId":"376","severity":1,"message":"402","line":2,"column":23,"nodeType":"378","messageId":"379","endLine":2,"endColumn":35},{"ruleId":"376","severity":1,"message":"403","line":3,"column":8,"nodeType":"378","messageId":"379","endLine":3,"endColumn":19},{"ruleId":"376","severity":1,"message":"404","line":5,"column":11,"nodeType":"378","messageId":"379","endLine":5,"endColumn":25},{"ruleId":"376","severity":1,"message":"380","line":1,"column":10,"nodeType":"378","messageId":"379","endLine":1,"endColumn":18},{"ruleId":"376","severity":1,"message":"405","line":6,"column":8,"nodeType":"378","messageId":"379","endLine":6,"endColumn":16},{"ruleId":"382","severity":1,"message":"406","line":21,"column":8,"nodeType":"384","endLine":21,"endColumn":18,"suggestions":"407"},{"ruleId":"376","severity":1,"message":"408","line":5,"column":18,"nodeType":"378","messageId":"379","endLine":5,"endColumn":22},{"ruleId":"376","severity":1,"message":"409","line":9,"column":10,"nodeType":"378","messageId":"379","endLine":9,"endColumn":23},{"ruleId":"376","severity":1,"message":"410","line":7,"column":24,"nodeType":"378","messageId":"379","endLine":7,"endColumn":38},{"ruleId":"376","severity":1,"message":"389","line":10,"column":8,"nodeType":"378","messageId":"379","endLine":10,"endColumn":19},{"ruleId":"376","severity":1,"message":"396","line":11,"column":8,"nodeType":"378","messageId":"379","endLine":11,"endColumn":22},{"ruleId":"376","severity":1,"message":"403","line":13,"column":8,"nodeType":"378","messageId":"379","endLine":13,"endColumn":19},{"ruleId":"376","severity":1,"message":"380","line":14,"column":10,"nodeType":"378","messageId":"379","endLine":14,"endColumn":18},{"ruleId":"382","severity":1,"message":"411","line":85,"column":8,"nodeType":"384","endLine":85,"endColumn":41,"suggestions":"412"},{"ruleId":"376","severity":1,"message":"396","line":4,"column":8,"nodeType":"378","messageId":"379","endLine":4,"endColumn":22},{"ruleId":"376","severity":1,"message":"388","line":2,"column":16,"nodeType":"378","messageId":"379","endLine":2,"endColumn":24},{"ruleId":"376","severity":1,"message":"380","line":4,"column":11,"nodeType":"378","messageId":"379","endLine":4,"endColumn":19},{"ruleId":"376","severity":1,"message":"413","line":4,"column":21,"nodeType":"378","messageId":"379","endLine":4,"endColumn":28},{"ruleId":"376","severity":1,"message":"414","line":5,"column":8,"nodeType":"378","messageId":"379","endLine":5,"endColumn":25},{"ruleId":"376","severity":1,"message":"415","line":6,"column":8,"nodeType":"378","messageId":"379","endLine":6,"endColumn":22},{"ruleId":"376","severity":1,"message":"416","line":7,"column":8,"nodeType":"378","messageId":"379","endLine":7,"endColumn":23},{"ruleId":"376","severity":1,"message":"417","line":8,"column":8,"nodeType":"378","messageId":"379","endLine":8,"endColumn":21},{"ruleId":"376","severity":1,"message":"418","line":9,"column":9,"nodeType":"378","messageId":"379","endLine":9,"endColumn":15},{"ruleId":"376","severity":1,"message":"419","line":9,"column":17,"nodeType":"378","messageId":"379","endLine":9,"endColumn":28},{"ruleId":"376","severity":1,"message":"420","line":9,"column":30,"nodeType":"378","messageId":"379","endLine":9,"endColumn":34},{"ruleId":"376","severity":1,"message":"421","line":9,"column":36,"nodeType":"378","messageId":"379","endLine":9,"endColumn":44},{"ruleId":"376","severity":1,"message":"422","line":10,"column":8,"nodeType":"378","messageId":"379","endLine":10,"endColumn":18},{"ruleId":"376","severity":1,"message":"423","line":13,"column":8,"nodeType":"378","messageId":"379","endLine":13,"endColumn":14},{"ruleId":"376","severity":1,"message":"424","line":16,"column":8,"nodeType":"378","messageId":"379","endLine":16,"endColumn":12},{"ruleId":"376","severity":1,"message":"425","line":17,"column":8,"nodeType":"378","messageId":"379","endLine":17,"endColumn":16},{"ruleId":"376","severity":1,"message":"426","line":18,"column":10,"nodeType":"378","messageId":"379","endLine":18,"endColumn":21},{"ruleId":"376","severity":1,"message":"427","line":18,"column":23,"nodeType":"378","messageId":"379","endLine":18,"endColumn":34},{"ruleId":"376","severity":1,"message":"428","line":19,"column":10,"nodeType":"378","messageId":"379","endLine":19,"endColumn":17},{"ruleId":"376","severity":1,"message":"429","line":20,"column":10,"nodeType":"378","messageId":"379","endLine":20,"endColumn":23},{"ruleId":"382","severity":1,"message":"430","line":58,"column":8,"nodeType":"384","endLine":58,"endColumn":35,"suggestions":"431"},{"ruleId":"376","severity":1,"message":"403","line":3,"column":8,"nodeType":"378","messageId":"379","endLine":3,"endColumn":19},{"ruleId":"376","severity":1,"message":"423","line":7,"column":50,"nodeType":"378","messageId":"379","endLine":7,"endColumn":56},{"ruleId":"382","severity":1,"message":"432","line":43,"column":8,"nodeType":"384","endLine":43,"endColumn":24,"suggestions":"433"},{"ruleId":"390","severity":1,"message":"391","line":31,"column":33,"nodeType":"392","messageId":"393","endLine":31,"endColumn":35},{"ruleId":"376","severity":1,"message":"403","line":3,"column":8,"nodeType":"378","messageId":"379","endLine":3,"endColumn":19},{"ruleId":"382","severity":1,"message":"434","line":25,"column":8,"nodeType":"384","endLine":25,"endColumn":31,"suggestions":"435"},{"ruleId":"390","severity":1,"message":"391","line":49,"column":35,"nodeType":"392","messageId":"393","endLine":49,"endColumn":37},{"ruleId":"376","severity":1,"message":"427","line":2,"column":23,"nodeType":"378","messageId":"379","endLine":2,"endColumn":34},{"ruleId":"376","severity":1,"message":"436","line":4,"column":10,"nodeType":"378","messageId":"379","endLine":4,"endColumn":19},{"ruleId":"376","severity":1,"message":"403","line":5,"column":8,"nodeType":"378","messageId":"379","endLine":5,"endColumn":19},{"ruleId":"390","severity":1,"message":"391","line":38,"column":24,"nodeType":"392","messageId":"393","endLine":38,"endColumn":26},{"ruleId":"376","severity":1,"message":"423","line":1,"column":10,"nodeType":"378","messageId":"379","endLine":1,"endColumn":16},{"ruleId":"376","severity":1,"message":"426","line":2,"column":10,"nodeType":"378","messageId":"379","endLine":2,"endColumn":21},{"ruleId":"376","severity":1,"message":"427","line":2,"column":23,"nodeType":"378","messageId":"379","endLine":2,"endColumn":34},{"ruleId":"376","severity":1,"message":"437","line":3,"column":10,"nodeType":"378","messageId":"379","endLine":3,"endColumn":18},{"ruleId":"376","severity":1,"message":"438","line":3,"column":20,"nodeType":"378","messageId":"379","endLine":3,"endColumn":31},{"ruleId":"376","severity":1,"message":"436","line":4,"column":10,"nodeType":"378","messageId":"379","endLine":4,"endColumn":19},{"ruleId":"376","severity":1,"message":"403","line":5,"column":8,"nodeType":"378","messageId":"379","endLine":5,"endColumn":19},{"ruleId":"376","severity":1,"message":"439","line":3,"column":10,"nodeType":"378","messageId":"379","endLine":3,"endColumn":17},{"ruleId":"376","severity":1,"message":"440","line":6,"column":8,"nodeType":"378","messageId":"379","endLine":6,"endColumn":17},{"ruleId":"376","severity":1,"message":"441","line":9,"column":10,"nodeType":"378","messageId":"379","endLine":9,"endColumn":24},{"ruleId":"376","severity":1,"message":"442","line":38,"column":12,"nodeType":"378","messageId":"379","endLine":38,"endColumn":22},{"ruleId":"376","severity":1,"message":"400","line":6,"column":10,"nodeType":"378","messageId":"379","endLine":6,"endColumn":19},{"ruleId":"376","severity":1,"message":"443","line":6,"column":21,"nodeType":"378","messageId":"379","endLine":6,"endColumn":44},{"ruleId":"376","severity":1,"message":"444","line":8,"column":10,"nodeType":"378","messageId":"379","endLine":8,"endColumn":13},{"ruleId":"376","severity":1,"message":"445","line":8,"column":32,"nodeType":"378","messageId":"379","endLine":8,"endColumn":36},{"ruleId":"376","severity":1,"message":"446","line":10,"column":10,"nodeType":"378","messageId":"379","endLine":10,"endColumn":23},{"ruleId":"376","severity":1,"message":"396","line":12,"column":8,"nodeType":"378","messageId":"379","endLine":12,"endColumn":22},{"ruleId":"376","severity":1,"message":"447","line":14,"column":8,"nodeType":"378","messageId":"379","endLine":14,"endColumn":23},{"ruleId":"376","severity":1,"message":"448","line":17,"column":8,"nodeType":"378","messageId":"379","endLine":17,"endColumn":21},{"ruleId":"382","severity":1,"message":"449","line":34,"column":8,"nodeType":"384","endLine":34,"endColumn":10,"suggestions":"450"},{"ruleId":"376","severity":1,"message":"451","line":52,"column":11,"nodeType":"378","messageId":"379","endLine":52,"endColumn":19},{"ruleId":"376","severity":1,"message":"452","line":2,"column":18,"nodeType":"378","messageId":"379","endLine":2,"endColumn":22},{"ruleId":"376","severity":1,"message":"453","line":4,"column":8,"nodeType":"378","messageId":"379","endLine":4,"endColumn":16},{"ruleId":"376","severity":1,"message":"448","line":13,"column":8,"nodeType":"378","messageId":"379","endLine":13,"endColumn":21},{"ruleId":"376","severity":1,"message":"396","line":14,"column":8,"nodeType":"378","messageId":"379","endLine":14,"endColumn":22},{"ruleId":"376","severity":1,"message":"454","line":15,"column":8,"nodeType":"378","messageId":"379","endLine":15,"endColumn":15},{"ruleId":"376","severity":1,"message":"455","line":16,"column":10,"nodeType":"378","messageId":"379","endLine":16,"endColumn":19},{"ruleId":"376","severity":1,"message":"456","line":38,"column":12,"nodeType":"378","messageId":"379","endLine":38,"endColumn":21},{"ruleId":"376","severity":1,"message":"457","line":38,"column":23,"nodeType":"378","messageId":"379","endLine":38,"endColumn":35},{"ruleId":"376","severity":1,"message":"458","line":41,"column":11,"nodeType":"378","messageId":"379","endLine":41,"endColumn":18},{"ruleId":"390","severity":1,"message":"391","line":47,"column":99,"nodeType":"392","messageId":"393","endLine":47,"endColumn":101},{"ruleId":"382","severity":1,"message":"459","line":54,"column":8,"nodeType":"384","endLine":54,"endColumn":10,"suggestions":"460"},{"ruleId":"382","severity":1,"message":"461","line":69,"column":8,"nodeType":"384","endLine":69,"endColumn":14,"suggestions":"462"},{"ruleId":"463","severity":1,"message":"464","line":49,"column":13,"nodeType":"465","messageId":"466","endLine":59,"endColumn":14},{"ruleId":"463","severity":1,"message":"464","line":61,"column":13,"nodeType":"465","messageId":"466","endLine":64,"endColumn":14},{"ruleId":"376","severity":1,"message":"467","line":20,"column":10,"nodeType":"378","messageId":"379","endLine":20,"endColumn":22},{"ruleId":"382","severity":1,"message":"397","line":62,"column":7,"nodeType":"384","endLine":62,"endColumn":18,"suggestions":"468"},{"ruleId":"376","severity":1,"message":"469","line":2,"column":10,"nodeType":"378","messageId":"379","endLine":2,"endColumn":27},{"ruleId":"376","severity":1,"message":"470","line":2,"column":71,"nodeType":"378","messageId":"379","endLine":2,"endColumn":95},{"ruleId":"376","severity":1,"message":"388","line":2,"column":10,"nodeType":"378","messageId":"379","endLine":2,"endColumn":18},{"ruleId":"376","severity":1,"message":"380","line":3,"column":10,"nodeType":"378","messageId":"379","endLine":3,"endColumn":18},{"ruleId":"376","severity":1,"message":"396","line":5,"column":8,"nodeType":"378","messageId":"379","endLine":5,"endColumn":22},{"ruleId":"376","severity":1,"message":"471","line":8,"column":10,"nodeType":"378","messageId":"379","endLine":8,"endColumn":19},{"ruleId":"376","severity":1,"message":"389","line":9,"column":8,"nodeType":"378","messageId":"379","endLine":9,"endColumn":19},{"ruleId":"376","severity":1,"message":"472","line":4,"column":8,"nodeType":"378","messageId":"379","endLine":4,"endColumn":23},{"ruleId":"473","severity":1,"message":"474","line":47,"column":25,"nodeType":"475","endLine":47,"endColumn":28},"no-native-reassign",["476"],"no-negated-in-lhs",["477"],"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'AdminCardGroupPage' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isAdmin'. Either include it or remove the dependency array.","ArrayExpression",["478"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["479"],"'useState' is defined but never used.","'authReducer' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'DELETE_CARDGROUP_ERROR' is defined but never used.","'Sleep' is assigned a value but never used.","'loadingReducer' is defined but never used.","React Hook useEffect has missing dependencies: 'formSubmitCallback' and 'handleClose'. Either include them or remove the dependency array.",["480"],"'makeStyles' is defined but never used.","'loadCards' is defined but never used.",["481"],"'STOP_LOADING' is defined but never used.","'userReducer' is defined but never used.","'getUsersStatus' is defined but never used.","'CardView' is defined but never used.","React Hook useEffect has a missing dependency: 'cardgroupId'. Either include it or remove the dependency array.",["482"],"'Icon' is defined but never used.","'CLEAR_LOADING' is defined but never used.","'LinearProgress' is defined but never used.","React Hook useEffect has missing dependencies: 'cardgroup' and 'user'. Either include them or remove the dependency array.",["483"],"'NavLink' is defined but never used.","'AccountCircleIcon' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'Brightness4Icon' is defined but never used.","'ExitToAppIcon' is defined but never used.","'AppBar' is defined but never used.","'ButtonGroup' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'PersonIcon' is defined but never used.","'Button' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'signOut' is defined but never used.","'NavBarWrapper' is defined but never used.","React Hook useEffect has a missing dependency: 'urls'. Either include it or remove the dependency array.",["484"],"React Hook useEffect has a missing dependency: 'userRoleFiler'. Either include it or remove the dependency array.",["485"],"React Hook useEffect has a missing dependency: 'status'. Either include it or remove the dependency array.",["486"],"'useEffect' is defined but never used.","'addAdmin' is defined but never used.","'removeAdmin' is defined but never used.","'Divider' is defined but never used.","'GroupView' is defined but never used.","'loadCardgroups' is defined but never used.","'cardgroups' is assigned a value but never used.","'loadCardgroupFlashcards' is defined but never used.","'Box' is defined but never used.","'Grid' is defined but never used.","'loadCardgroup' is defined but never used.","'CardgroupSelect' is defined but never used.","'ratingReducer' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'peerreviewId'. Either include them or remove the dependency array.",["487"],"'testFunc' is assigned a value but never used.","'Card' is defined but never used.","'SaveIcon' is defined but never used.","'Loading' is defined but never used.","'SET_ALERT' is defined but never used.","'relevance' is assigned a value but never used.","'setRelevance' is assigned a value but never used.","'loading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'card.id' and 'dispatch'. Either include them or remove the dependency array.",["488"],"React Hook useEffect has a missing dependency: 'submitRating'. Either include it or remove the dependency array.",["489"],"no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'addCardgroup' is defined but never used.",["490"],"'CREATE_PEERREVIEW' is defined but never used.","'GET_USER_ALL_PEERREVIEWS' is defined but never used.","'adminOnly' is defined but never used.","'MailOutlineIcon' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"491","fix":"492"},{"desc":"493","fix":"494"},{"desc":"495","fix":"496"},{"desc":"497","fix":"498"},{"desc":"499","fix":"500"},{"desc":"501","fix":"502"},{"desc":"503","fix":"504"},{"desc":"505","fix":"506"},{"desc":"507","fix":"508"},{"desc":"509","fix":"510"},{"desc":"511","fix":"512"},{"desc":"513","fix":"514"},{"desc":"495","fix":"515"},"Update the dependencies array to be: [loggedIn, dispatch, isAdmin]",{"range":"516","text":"517"},"Update the dependencies array to be: [dispatch, newAlert]",{"range":"518","text":"519"},"Update the dependencies array to be: [formSubmitCallback, handleClose, newStatus]",{"range":"520","text":"521"},"Update the dependencies array to be: [dispatch]",{"range":"522","text":"523"},"Update the dependencies array to be: [cardgroupId, dispatch]",{"range":"524","text":"525"},"Update the dependencies array to be: [cardgroup, dispatch, props.match.params.id, user]",{"range":"526","text":"527"},"Update the dependencies array to be: [history.location.pathname, urls]",{"range":"528","text":"529"},"Update the dependencies array to be: [dispatch, show, userRoleFiler]",{"range":"530","text":"531"},"Update the dependencies array to be: [dispatch, cardGroupId, status]",{"range":"532","text":"533"},"Update the dependencies array to be: [dispatch, peerreviewId]",{"range":"534","text":"535"},"Update the dependencies array to be: [card.id, dispatch]",{"range":"536","text":"537"},"Update the dependencies array to be: [save, submitRating]",{"range":"538","text":"539"},{"range":"540","text":"521"},[1941,1961],"[loggedIn, dispatch, isAdmin]",[716,726],"[dispatch, newAlert]",[1462,1473],"[formSubmitCallback, handleClose, newStatus]",[649,651],"[dispatch]",[639,649],"[cardgroupId, dispatch]",[2789,2822],"[cardgroup, dispatch, props.match.params.id, user]",[1832,1859],"[history.location.pathname, urls]",[1443,1459],"[dispatch, show, userRoleFiler]",[857,880],"[dispatch, cardGroupId, status]",[1578,1580],"[dispatch, peerreviewId]",[1777,1779],"[card.id, dispatch]",[2080,2086],"[save, submitRating]",[1606,1617]]