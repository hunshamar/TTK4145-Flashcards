[{"/home/asgeir/Desktop/master/client/src/index.js":"1","/home/asgeir/Desktop/master/client/src/App.js":"2","/home/asgeir/Desktop/master/client/src/reportWebVitals.js":"3","/home/asgeir/Desktop/master/client/src/store/reducers/rootReducer.js":"4","/home/asgeir/Desktop/master/client/src/routes.js":"5","/home/asgeir/Desktop/master/client/src/static/theme.js":"6","/home/asgeir/Desktop/master/client/src/components/notifications/alerter.js":"7","/home/asgeir/Desktop/master/client/src/components/layout/navbar.js":"8","/home/asgeir/Desktop/master/client/src/store/reducers/authReducer.js":"9","/home/asgeir/Desktop/master/client/src/store/reducers/cardReducer.js":"10","/home/asgeir/Desktop/master/client/src/store/reducers/cardgroupReducer.js":"11","/home/asgeir/Desktop/master/client/src/store/reducers/alertReducer.js":"12","/home/asgeir/Desktop/master/client/src/components/loginfunc.js":"13","/home/asgeir/Desktop/master/client/src/store/actions/authActions.js":"14","/home/asgeir/Desktop/master/client/src/static/wrappers.js":"15","/home/asgeir/Desktop/master/client/src/store/actionTypes.js":"16","/home/asgeir/Desktop/master/client/src/store/actions/cardgroupActions.js":"17","/home/asgeir/Desktop/master/client/src/store/actions/cardActions.js":"18","/home/asgeir/Desktop/master/client/src/components/submodules/cardview.js":"19","/home/asgeir/Desktop/master/client/src/components/submodules/groupview.js":"20","/home/asgeir/Desktop/master/client/src/components/dialogs/createCardGroup.js":"21","/home/asgeir/Desktop/master/client/src/components/dialogs/createCardDialog.js":"22","/home/asgeir/Desktop/master/client/src/components/dialogs/confirmDialog.js":"23","/home/asgeir/Desktop/master/client/src/components/dialogs/flashcardForm.js":"24","/home/asgeir/Desktop/master/client/src/components/submodules/cardgroupselect.js":"25","/home/asgeir/Desktop/master/client/src/store/reducers/loadingReducer.js":"26","/home/asgeir/Desktop/master/client/src/components/pages/userProfile.js.js":"27","/home/asgeir/Desktop/master/client/src/components/adminpages/allCards.js":"28","/home/asgeir/Desktop/master/client/src/components/adminpages/adminPage.js":"29","/home/asgeir/Desktop/master/client/src/components/adminpages/adminCardgroupPage.js":"30","/home/asgeir/Desktop/master/client/src/components/pages/home.js":"31","/home/asgeir/Desktop/master/client/src/components/pages/login.js":"32","/home/asgeir/Desktop/master/client/src/components/pages/cardGroupPage.js":"33","/home/asgeir/Desktop/master/client/src/components/notifications/loading.js":"34","/home/asgeir/Desktop/master/client/src/components/submodules/adminGroupCardView.js":"35","/home/asgeir/Desktop/master/client/src/components/layout/adminNavbar.js":"36","/home/asgeir/Desktop/master/client/src/components/adminpages/users.js":"37","/home/asgeir/Desktop/master/client/src/store/reducers/userReducer.js":"38","/home/asgeir/Desktop/master/client/src/store/actions/userActions.js":"39","/home/asgeir/Desktop/master/client/src/components/adminpages/deliveryStatus.js":"40","/home/asgeir/Desktop/master/client/src/components/dialogs/userDialog.js":"41","/home/asgeir/Desktop/master/client/src/components/dialogs/cardDialog.js":"42"},{"size":838,"mtime":1613989550723,"results":"43","hashOfConfig":"44"},{"size":1436,"mtime":1613989550723,"results":"45","hashOfConfig":"44"},{"size":362,"mtime":1613989550723,"results":"46","hashOfConfig":"44"},{"size":481,"mtime":1614451316520,"results":"47","hashOfConfig":"44"},{"size":3356,"mtime":1614525362602,"results":"48","hashOfConfig":"44"},{"size":1501,"mtime":1614526682992,"results":"49","hashOfConfig":"44"},{"size":923,"mtime":1613989550723,"results":"50","hashOfConfig":"44"},{"size":4776,"mtime":1614451316520,"results":"51","hashOfConfig":"44"},{"size":1228,"mtime":1614451316520,"results":"52","hashOfConfig":"44"},{"size":1757,"mtime":1613989550723,"results":"53","hashOfConfig":"44"},{"size":1788,"mtime":1613989550723,"results":"54","hashOfConfig":"44"},{"size":507,"mtime":1613989550723,"results":"55","hashOfConfig":"44"},{"size":448,"mtime":1613989550723,"results":"56","hashOfConfig":"44"},{"size":4365,"mtime":1614525378889,"results":"57","hashOfConfig":"44"},{"size":638,"mtime":1613989550723,"results":"58","hashOfConfig":"44"},{"size":1180,"mtime":1614451316520,"results":"59","hashOfConfig":"44"},{"size":4014,"mtime":1614451316520,"results":"60","hashOfConfig":"44"},{"size":6189,"mtime":1614451316520,"results":"61","hashOfConfig":"44"},{"size":3135,"mtime":1614451316520,"results":"62","hashOfConfig":"44"},{"size":2560,"mtime":1614526409161,"results":"63","hashOfConfig":"44"},{"size":6090,"mtime":1613989550723,"results":"64","hashOfConfig":"44"},{"size":3186,"mtime":1613989550723,"results":"65","hashOfConfig":"44"},{"size":1211,"mtime":1613989550723,"results":"66","hashOfConfig":"44"},{"size":3714,"mtime":1613989550723,"results":"67","hashOfConfig":"44"},{"size":1759,"mtime":1614451316520,"results":"68","hashOfConfig":"44"},{"size":466,"mtime":1614451316520,"results":"69","hashOfConfig":"44"},{"size":902,"mtime":1614451316520,"results":"70","hashOfConfig":"44"},{"size":3086,"mtime":1614451316516,"results":"71","hashOfConfig":"44"},{"size":199,"mtime":1614451316516,"results":"72","hashOfConfig":"44"},{"size":863,"mtime":1614451316516,"results":"73","hashOfConfig":"44"},{"size":2409,"mtime":1614526155046,"results":"74","hashOfConfig":"44"},{"size":3854,"mtime":1614525286352,"results":"75","hashOfConfig":"44"},{"size":5471,"mtime":1614527140834,"results":"76","hashOfConfig":"44"},{"size":240,"mtime":1614451316520,"results":"77","hashOfConfig":"44"},{"size":1187,"mtime":1614451316520,"results":"78","hashOfConfig":"44"},{"size":2469,"mtime":1614451316520,"results":"79","hashOfConfig":"44"},{"size":4872,"mtime":1614451316516,"results":"80","hashOfConfig":"44"},{"size":1089,"mtime":1614451316520,"results":"81","hashOfConfig":"44"},{"size":4139,"mtime":1614451316520,"results":"82","hashOfConfig":"44"},{"size":2508,"mtime":1614451316516,"results":"83","hashOfConfig":"44"},{"size":1574,"mtime":1614451316516,"results":"84","hashOfConfig":"44"},{"size":1030,"mtime":1614451316516,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"p7npxu",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"88"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"88"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"88"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"88"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"88"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"88"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"88"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"88"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"88"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"88"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"88"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"88"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"88"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"88"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"88"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"88"},"/home/asgeir/Desktop/master/client/src/index.js",[],["189","190"],"/home/asgeir/Desktop/master/client/src/App.js",[],"/home/asgeir/Desktop/master/client/src/reportWebVitals.js",[],"/home/asgeir/Desktop/master/client/src/store/reducers/rootReducer.js",[],"/home/asgeir/Desktop/master/client/src/routes.js",["191","192"],"\nimport React, {useEffect} from \"react\"\nimport { BrowserRouter as Redirect, Route, Switch } from \"react-router-dom\";\n\nimport Home from \"./components/pages/home\"\nimport Login from \"./components/pages/login\"\nimport AllCards from './components/adminpages/allCards';\n// import CreateCardgroup from \"./components/createCardgroup\"\nimport logInFunc from './components/loginfunc';\nimport { checkLogInStatus } from \"./store/actions/authActions\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport CardGroupPage from './components/pages/cardGroupPage';\nimport { makeStyles } from \"@material-ui/core\";\nimport UserProfile from \"./components/pages/userProfile.js.js\";\nimport AdminCardGroupPage from './components/adminpages/adminCardgroupPage';\nimport Users from \"./components/adminpages/users\";\nimport AdminNavbar from './components/layout/adminNavbar';\nimport AdminPage from \"./components/adminpages/adminPage\";\nimport DeliveryStatus from './components/adminpages/deliveryStatus';\n\nconst useStyles = makeStyles(theme => ({\n    // pages: {\n    //     paddingLeft: \"auto\",\n    //     paddingRight: \"auto\",\n    //     alignItems: \"center\",\n    //     display: \"flex\",\n    //     paddingTop: theme.values.siteTopMargin        \n    // }\n\n})); \n\nconst Routes = () => {\n\n    const classes = useStyles()\n    const loggedIn = useSelector(state => state.authReducer.loggedIn)\n    const isAdmin = useSelector(state => state.authReducer.isAdmin)\n    const dispatch = useDispatch();     \n    \n    useEffect(() => {\n        dispatch(checkLogInStatus())\n        console.log(\"is logged\", loggedIn)\n        console.log(\"is admin\", isAdmin)            \n        \n    }, [loggedIn, dispatch])   \n\n    // get log in status\n\n    return(\n        <div className={classes.pages}>\n            <Switch>\n                <Route path=\"/\" exact component={loggedIn ? Home : Login}/>\n                <Route path=\"/loginfunc\" exact component={logInFunc}/>\n                <Route path=\"/cardgroup/:id\" exact component={CardGroupPage} />\n\n                {loggedIn ? \n                <React.Fragment>\n                    <Route path=\"/userprofile/:username\" exact component={UserProfile} />\n                    {isAdmin ? \n                    <React.Fragment>\n                        {/* <Route path=\"/adminpage\" exact component={AdminPage} /> */}\n                    \n                        <Route\n                            path=\"/adminpage\"\n                            render={({ match: { url } }) => (\n                            <>\n                                <AdminNavbar />    \n                                <Route path={`${url}/`} component={AdminPage} exact />\n                                <Route path={`${url}/users`} component={Users} />\n                                <Route path={`${url}/deliverystatus`} component={DeliveryStatus} />\n                                <Route path={`${url}/allcards`} component={AllCards} />\n                            </>\n                            )}\n                        />\n                    </React.Fragment>\n                     :    \n                    <React.Fragment>\n                    </React.Fragment>}\n                </React.Fragment>\n                :\n                <Redirect to={{\n                    pathname: \"/\"\n                }} /> }  \n            </Switch>\n        </div>\n    )\n}\n\nexport default Routes","/home/asgeir/Desktop/master/client/src/static/theme.js",[],"/home/asgeir/Desktop/master/client/src/components/notifications/alerter.js",[],"/home/asgeir/Desktop/master/client/src/components/layout/navbar.js",[],"/home/asgeir/Desktop/master/client/src/store/reducers/authReducer.js",[],"/home/asgeir/Desktop/master/client/src/store/reducers/cardReducer.js",[],"/home/asgeir/Desktop/master/client/src/store/reducers/cardgroupReducer.js",[],"/home/asgeir/Desktop/master/client/src/store/reducers/alertReducer.js",[],"/home/asgeir/Desktop/master/client/src/components/loginfunc.js",[],"/home/asgeir/Desktop/master/client/src/store/actions/authActions.js",["193"],"\nimport axios from 'axios';\nimport { LOG_IN_CALLBACK, LOG_IN_STATUS, LOG_OUT, SET_ALERT } from '../actionTypes';\n\n\n\n\nexport const signInCallack = () => async (dispatch) => {\n    axios.get(\"/api/login/callback\", { withCredentials: true })\n        .then(res => {\n            if(res.data.error){\n                throw new Error(res.data.error)\n            }\n            let user_token = res.data.user_token\n            let refresh_token = res.data.refresh_token\n            console.log(\"action, usertoken\", user_token)\n            console.log(\"action, refresh\", refresh_token)\n            localStorage.setItem(\"user_token\", user_token)\n            localStorage.setItem(\"refresh_token\", refresh_token)\n            const payload = {loggedIn: true}\n            dispatch({type: LOG_IN_CALLBACK, payload})\n        })\n        .catch(err => {\n            console.log(\"Error in signInCallback\", err)\n            const alert = {severity: \"error\", text: err.toString()}\n            dispatch({type: SET_ALERT, payload: alert})\n        })\n}\n\nexport const adminOnly = () => async (dispatch) => {\n    axios.get(\"/api/adminonly\", {\n        headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"user_token\")}`\n        }\n    })\n    .then(res => {\n        console.log(\"from admin test\")\n        if(res.data.error){\n            throw new Error(res.data.error)\n        }\n        console.log(res.data)       \n        const alert = {severity: \"success\", text: res.data.status}\n        dispatch({type: SET_ALERT, payload: alert})\n \n\n        // dispatch({type: LOG_IN_CALLBACK, payload})\n    })\n    .catch(err => {\n        console.log(\"Error in signInCallback\", err)\n        const alert = {severity: \"error\", text: err.toString()}\n        dispatch({type: SET_ALERT, payload: alert})\n    })\n}\n\nexport const checkLogInStatus = () => async (dispatch, getState) => {\n    \n    const user_token = localStorage.getItem(\"user_token\")\n    const refresh_token = localStorage.getItem(\"refresh_token\")\n\n    console.log(\"user_token?\", Boolean(user_token))\n    console.log(\"refresh_token?\", Boolean(refresh_token))\n\n    if (user_token && refresh_token){\n        console.log(\"found both tokens\")\n        axios.get(\"/api/getcurrentuser\", {\n            headers: {\n                Authorization: `Bearer ${localStorage.getItem(\"user_token\")}`\n            }\n        }).then(res => {\n            if(res.data.error){\n                throw new Error(res.data.error)\n            }\n            console.log(\"found user?\", res.data)\n            console.log(\"true? \", res.data.role === \"Admin\")\n            let payload = {loggedIn: true, loggedInUser: res.data, isAdmin: res.data.role == \"Admin\"}\n            dispatch({type: LOG_IN_STATUS, payload})\n        }).catch(err => {\n            console.log(\"error..\", err)\n            let payload = {loading: false, loggedInUser: {}}\n            dispatch({type: LOG_IN_STATUS, payload})\n\n            // const alert = {severity: \"error\", text: err.toString()}\n            // dispatch({type: SET_ALERT, payload: alert})\n        })\n    }\n    else {\n        console.log(\"no user logged in\")\n        let payload = {loggedIn: false, loggedInUser: {}, loading: false}\n        dispatch({type: LOG_IN_STATUS, payload})\n    }\n\n}\n\nexport const signOut = () => async (dispatch, getState) => {\n\n    if (localStorage.getItem(\"user_token\")) {\n        const token = localStorage.getItem(\"user_token\")\n        axios.post(\"/api/logout/access\", {}, {\n            headers: {\n                Authorization: `Bearer ${token}`\n            }\n        }).then(res => {\n            if (res.data.error) {\n                console.error(res.data.error)\n            } else {\n                localStorage.removeItem(\"user_token\")\n            }\n        })\n    }\n    if (localStorage.getItem(\"refresh_token\")) {\n        const refreshToken = localStorage.getItem(\"refresh_token\")\n        axios.post(\"/api/logout/refresh\", {}, {\n            headers: {\n                Authorization: `Bearer ${refreshToken}`\n            }\n        }).then(res => {\n            if(res.data.error){\n                throw new Error(res.data.error)\n            } else {\n                localStorage.removeItem(\"refresh_token\")\n            }\n        })\n    }\n    localStorage.clear();\n\n    console.log(\"logging out...\")\n    const payload = {loggedIn: false, loggedInUser: {}}\n    dispatch({type: LOG_OUT, payload})\n\n}\n\n","/home/asgeir/Desktop/master/client/src/static/wrappers.js",[],"/home/asgeir/Desktop/master/client/src/store/actionTypes.js",[],"/home/asgeir/Desktop/master/client/src/store/actions/cardgroupActions.js",["194","195"],"\nimport axios from 'axios';\nimport { SET_ALERT, CREATE_CARDGROUP, CREATE_CARDGROUP_ERROR, LOAD_CARDGROUPS, DELETE_CARDGROUP, DELETE_CARDGROUP_ERROR, LOAD_CARDGROUP } from '../actionTypes';\n\nexport const addCardgroup = (cardgroup) => async( dispatch, getState) => {\n        \n    \n    console.log(\"c cardgroup\")\n    console.log(cardgroup)\n\n    axios.post(\"/api/addcardgroup\", {\n            title: cardgroup.title,\n            numberOfCardsDue: cardgroup.numberOfCardsDue,\n            dueDate: cardgroup.dueDate\n        }, {\n            headers: {\n                Authorization: \"Bearer \" + localStorage.getItem(\"user_token\")\n            }\n        })\n        .then(res => {\n            console.log(\"returned\")\n            console.log(res.data)\n            \n            if(res.data.error){\n                console.log(\"error\")\n                throw new Error(res.data.error)\n            }\n\n\n            const createdCardgroup = res.data\n            console.log(createdCardgroup.dueDate)\n\n            console.log(\"was created, \", createdCardgroup)\n            let alert = {severity: \"success\", text: \"successfully created cardgroup: \"+createdCardgroup.title}\n            dispatch({type: SET_ALERT, payload: alert})\n            dispatch({type: CREATE_CARDGROUP, payload: createdCardgroup})\n        })\n        .catch(err => {\n            console.log(\"This is an error yes plz\")\n            let alert = {severity: \"error\", text: err.toString()}\n            dispatch({type: SET_ALERT, payload: alert})\n            // dispatch({type: CREATE_CARDGROUP_ERROR, err})\n        })\n\n    console.log(\"async call up in hier\", cardgroup)\n    \n};\n\n\nexport const loadCardgroups = () => async (dispatch, getState) => {\n    await axios.get(\"/api/cardgroups\")\n    .then(res => {\n        if(res.data.error){\n            console.log(\"error\")\n            throw new Error(res.data.error)\n        }\n        const cardgroups = res.data\n        console.log(\"mah cardgroups\")\n        \n        console.log(cardgroups)\n        dispatch({type: LOAD_CARDGROUPS, payload: cardgroups})\n    })\n    .catch(err => console.log(err))\n}\n\nexport const loadCardgroup = (groupId) => async (dispatch) => {\n    await axios.get(\"/api/cardgroup/\"+groupId)\n    .then(res => {\n        console.log(\"res,\", res)\n        if(res.data.error){\n            console.log(\"error\")\n            throw new Error(res.data.error)\n        }\n        const cardgroup = [res.data]\n        console.log(\"cardgroup found\")\n        \n        console.log(cardgroup)\n        dispatch({type: LOAD_CARDGROUP, payload: cardgroup})\n    })\n    .catch(err => {\n        let alert = {severity: \"error\", text: err.toString()}\n        dispatch({type: SET_ALERT, payload: alert})\n    })\n}\n\nexport const deleteCardgroup = (cardgroup) => async (dispatch, getState) => {\n    console.log(\"and action\")\n    console.log(cardgroup.id)\n\n    await axios.delete(\"/api/deletegroup/\" + cardgroup.id, \n    {headers: { \n        Authorization: \"Bearer \" +localStorage.getItem(\"user_token\") \n    }}\n    ).then(res => {\n        console.log(\"to be deleted\")\n        if(res.data.error){\n            console.log(\"error\")\n            throw new Error(res.data.error)\n        }\n\n        let alert = {severity: \"success\", text: \"successfully deleted cardgroup: \"+cardgroup.title}\n        dispatch({type: SET_ALERT, payload: alert})\n        dispatch({type: DELETE_CARDGROUP, payload: cardgroup})        \n    })\n    .catch(err => {\n\n        let alert = {severity: \"error\", text: err.toString()}\n        dispatch({type: SET_ALERT, payload: alert})\n        // dispatch({type: DELETE_CARDGROUP_ERROR, payload: cardgroup}) \n    })\n\n}\n\n\n\n\n","/home/asgeir/Desktop/master/client/src/store/actions/cardActions.js",[],"/home/asgeir/Desktop/master/client/src/components/submodules/cardview.js",["196"],"\nimport { useState } from 'react';\nimport { Card, IconButton, Typography } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\n\nimport { useDispatch} from \"react-redux\"\nimport { Grid } from '@material-ui/core/';\nimport { deleteCard } from '../../store/actions/cardActions';\nimport FlashcardForm from '../dialogs/flashcardForm';\n\n\n\nconst CardView = props => {\n\n    const dispatch = useDispatch();\n    const [editCard, setEditCard] = useState({})\n    const [open, setOpen] = useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n      };\n\n    const handleClose = (value) => {\n        setOpen(false);\n      };\n\n\n    const deleteThisCard = card => {     \n        dispatch(deleteCard(card))   \n    }\n\n    \n    const editThisCard = card => {\n        console.log(\"edit\", card)\n        setEditCard(card)    \n        handleClickOpen()\n    }\n    console.log(\"car1ds\", props.cards)\n    \n    let cardItems = []\n    if (props.cards.length){\n    props.cards.map((card, index) => (        \n        cardItems[index] = \n        <Grid item xs={12}>\n        <Card key={card.id} style={{padding: \"10px\", margin: \"5px\"}}>\n        <Grid container spacing={0}> \n            <Grid item xs={11}>\n                <Typography variant=\"subtitle2\" >\n                    Front:\n                </Typography>\n                <Typography variant=\"caption\" >\n                    {card.front}\n                </Typography>\n                <Typography variant=\"subtitle2\" >\n                    Back:\n                </Typography>\n                <Typography variant=\"caption\" >\n                    {card.back}\n                </Typography>\n            </Grid>\n            <Grid item xs={1} style={{padding: \"auto\"}} >\n                <IconButton onClick = {() => editThisCard(card)}> \n                    <EditIcon style={{fontSize: \"20px\"}} /> \n                </IconButton>\n                <IconButton onClick = {() => deleteThisCard(card)}> \n                    <DeleteIcon style={{fontSize: \"20px\"}} /> \n                </IconButton>\n            </Grid>        \n        </Grid>\n    </Card>\n    \n    </Grid>))\n    }\n\n  \n    return (\n        \n        <div>\n            {editCard ? \n            <FlashcardForm open={open} onClose={handleClose} cardgroupId={1} card={editCard}  />\n            : <div> </div> }\n            \n            \n            {cardItems.length ? \n            \n            <Grid container spacing={0}> \n             {cardItems} \n            </Grid>\n            \n            : \n            <div style={{color: \"grey\", marginTop: \"150px\"}}>\n                <Typography variant=\"h5\">No cards</Typography>\n                <Typography variant=\"body1\">Add cards using the <i>Add Flashcard</i> button</Typography>\n            </div>}\n            \n            \n        </div>\n    )\n}\n\nexport default CardView","/home/asgeir/Desktop/master/client/src/components/submodules/groupview.js",["197","198"],"import { CardActionArea, Divider, Grid, Typography } from '@material-ui/core';\nimport { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport loadingReducer from '../../store/reducers/loadingReducer';\nimport Loading from '../notifications/loading';\n\n\n\n\nconst GroupView = ({cardgroups}) => {\n\n    const loading = useSelector(state => state.loadingReducer.loading)\n\n    const [redirectToGroupWithId, setredirectToGroupWithId] = useState(-1)\n\n    const handleClick = (e, groupId) => {\n        console.log(\"redirect\")\n        console.log(groupId)\n        setredirectToGroupWithId(groupId)\n    }\n\n    let admin = true\n\n    const dateToString = date => {\n        console.log(\"ddatee\")\n        console.log(date)\n        try{\n            let a = new Date(date.year, date.month-1, date.date, date.hour, date.minute)\n            console.log(\"aa\", a)\n            // return a.getUTCMonth()\n            return a.toString()\n        }\n        catch{\n            return \"Date error\"\n        }\n    }\n    \n\n    let cardgroupItems = cardgroups.map((cardgroup) => (\n        <Grid item xs={12} key={cardgroup.id}> \n                <CardActionArea onClick={e => handleClick(e, cardgroup.id)} style={{padding: \"10px\", minHeight: \"100px\"}}>\n                <Grid container spacing={2} >\n                    <Grid item xs={12}>                        \n                        <Typography variant=\"subtitle1\" component=\"h2\">\n                            {cardgroup.title}     \n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">\n                            {cardgroup.numberOfCardsDue} cards are due: {dateToString.call(this, cardgroup.dueDate)}     \n                        </Typography>\n                    </Grid>\n                </Grid>\n                </CardActionArea> \n                <Divider   /> \n        </Grid>\n    ))\n\n    if (loading){\n        return <Loading />\n    }\n    else if (redirectToGroupWithId > 0) {\n        return( \n          <Redirect to={{\n            pathname: \"/cardgroup/\" +redirectToGroupWithId\n          }}/>  \n        )\n      }\n    else if (cardgroupItems){\n        return(\n\n            <div>\n            <Divider   /> \n            <Grid container spacing={0}>\n                 \n                 <Divider   /> \n                {cardgroupItems}\n                \n            </Grid>\n            </div>\n        )\n    } else{\n        return (\n            <div>empty</div>\n        )\n    }\n\n}\n\nexport default GroupView","/home/asgeir/Desktop/master/client/src/components/dialogs/createCardGroup.js",[],"/home/asgeir/Desktop/master/client/src/components/dialogs/createCardDialog.js",[],"/home/asgeir/Desktop/master/client/src/components/dialogs/confirmDialog.js",[],["199","200"],"/home/asgeir/Desktop/master/client/src/components/dialogs/flashcardForm.js",[],"/home/asgeir/Desktop/master/client/src/components/submodules/cardgroupselect.js",["201","202","203"],"import React, {useEffect} from \"react\"\nimport { FormControl, InputLabel, Select, makeStyles, MenuItem } from \"@material-ui/core\"\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { loadCards } from \"../../store/actions/cardActions\";\nimport { loadCardgroups } from \"../../store/actions/cardgroupActions\";\n\n\n\n\n\n\nconst CardgroupSelect = props => {\n\n    \n\n    const cardgroups = useSelector(state => state.cardgroupReducer.cardgroups)\n    \n    const dispatch = useDispatch();\n\n    // console.log(\"is token?\", localStorage.getItem(\"user_token\"))\n\n    useEffect(() => {\n        dispatch(loadCardgroups())\n    }, [])   \n\n\n\n    let cardgroupMenuitems = []\n\n    cardgroups.map((cardgroup, index) => (\n\n        cardgroupMenuitems[index] = <MenuItem key={index} value={cardgroup.id}>{cardgroup.title} </MenuItem>\n            \n    ))\n  \n    const [group, setGroup] = React.useState('');\n    \n\n    const handleChange = (event) => {\n      setGroup(event.target.value);\n      if (props.onChange){\n        props.onChange(event.target.value)\n      }\n    };\n  \n\n    return(\n        <FormControl fullWidth variant=\"outlined\" >\n            <InputLabel id=\"demo-simple-select-outlined-label\">Cardgroup</InputLabel>\n            <Select\n            required\n            color=\"secondary\"\n            labelId=\"demo-simple-select-outlined-label\"\n            id=\"demo-simple-select-outlined\"\n            value={group}\n            onChange={handleChange}\n            label=\"group\"\n            >\n            \n            {cardgroupMenuitems.length ? cardgroupMenuitems : <MenuItem value=\"\">\n                <em>No groups exists</em>\n            </MenuItem> }\n\n            </Select>\n      </FormControl>\n    )\n\n}\n\nexport default CardgroupSelect","/home/asgeir/Desktop/master/client/src/store/reducers/loadingReducer.js",["204"],"\nimport { SET_LOADING, STOP_LOADING } from '../actionTypes';\n\nconst initState = {\n    loading: false\n}\n\nconst loadingReducer = (state = initState, action) => {\n\n    switch(action.type){\n        case SET_LOADING:\n            console.log(\"laading\", action)\n            return {\n                loading: action.payload\n            }               \n        default:\n            console.log(\"default alert\")\n            return state\n    }\n}\n\nexport default loadingReducer","/home/asgeir/Desktop/master/client/src/components/pages/userProfile.js.js",[],"/home/asgeir/Desktop/master/client/src/components/adminpages/allCards.js",["205","206"],"import { PageWrapper } from \"../../static/wrappers\"\nimport { useDispatch, useSelector } from 'react-redux';\nimport userReducer from '../../store/reducers/userReducer';\nimport { useEffect } from 'react';\nimport {  getUsersStatus } from '../../store/actions/userActions';\nimport { DataGrid } from '@material-ui/data-grid';\nimport CardgroupSelect from '../submodules/cardgroupselect';\nimport { useState } from 'react';\nimport { Typography } from \"@material-ui/core\";\nimport { loadCardgroupFlashcards } from \"../../store/actions/cardActions\";\nimport CardDialog from \"../dialogs/cardDialog\";\n\n\n const AllCards = () => {\n\n    const dispatch = useDispatch()\n    const cards = useSelector(state => state.cardReducer.cards)\n    const [openCard, setOpenCard] = useState(false);\n    const [selectedCard, setSelectedCard] = useState({})\n\n\n    const [cardGroupId, setCardGroupId] = useState(0)\n\n\n    useEffect(() => {\n        dispatch(loadCardgroupFlashcards(cardGroupId)) \n        console.log(\"status\")\n    }, [dispatch, cardGroupId])\n    \n    console.log(\"cards\")\n    console.log(cards)\n\n    const columns = [\n        { field: 'username', headerName: 'Username', width: 130 },\n        { field: 'front', headerName: 'Card Front', width: 130 },\n        { field: 'back', headerName: 'Card Back', width: 130 },\n    ]      \n\n    let rows = cards.map(c => (\n        {\n            id: c.id,\n            name: c.user.name,\n            username: c.user.username,\n            front: c.front,\n            back: c.back\n        }\n    ))\n    \n    const handleClick = e => {\n        console.log(\"print\", e.row)\n        setSelectedCard(e.row)\n        setOpenCard(true)\n    }\n    \n    console.log(\"cgid\", cardGroupId)\n    return (\n        <PageWrapper>       \n            <CardDialog open={openCard} onClose={() => setOpenCard(false)} card={selectedCard} />\n            <div style={{marginBottom: \"15px\"}} >\n                <CardgroupSelect onChange={setCardGroupId} />\n                <Typography variant=\"subtitle2\" style={{marginTop: \"20px\"}}>\n                {/* {status[0] ? \"Due: \" + dateToString(status[0].cardgroup.dueDate) : \"Due:\"} */}\n                </Typography>\n            </div>\n\n                <div style={{ height: 400, width: '100%' }}>\n \n                <DataGrid  onCellClick={e => handleClick(e)} rows={rows} columns={columns} pageSize={5}  />\n            </div>\n        </PageWrapper>\n    )\n}\n\nexport default AllCards\n\n\n\n\n// import {useDispatch, useSelector} from \"react-redux\"\n// import { useEffect } from 'react';\n// import { loadCards, loadCardgroupFlashcards } from '../../store/actions/cardActions';\n// import CardView from '../submodules/cardview';\n// import {PageWrapper} from \"../../static/wrappers\"\n\n// const AllCards = props => {\n\n//     const cards = useSelector(state => state.cardReducer.cards)\n    \n//     const dispatch = useDispatch();\n\n//     useEffect(() => {\n//         dispatch(loadCards())   \n//     }, [dispatch])   \n\n\n//     return(\n//         <PageWrapper> \n//             <CardView cards={cards}/>\n//         </PageWrapper>\n//     )\n// }\n\n// export default AllCards","/home/asgeir/Desktop/master/client/src/components/adminpages/adminPage.js",[],"/home/asgeir/Desktop/master/client/src/components/adminpages/adminCardgroupPage.js",["207","208"],"import { PageWrapper } from \"../../static/wrappers\"\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { loadCardgroupFlashcards } from '../../store/actions/cardActions';\nimport CardView from \"../submodules/cardview\";\nimport AdmingroupCardView from \"../submodules/adminGroupCardView\";\n\n\n\nconst AdminCardGroupPage = props => {\n\n    const cards = useSelector(state => state.cardReducer.cards)\n    const dispatch = useDispatch()\n\n    const cardgroupId = props.match.params.id\n\n\n    useEffect(() => { \n        dispatch((loadCardgroupFlashcards(cardgroupId)))\n    }, [dispatch])\n\n    console.log(\"cards\", cards)\n    return (\n        <PageWrapper> \n        <div>\n            <AdmingroupCardView cards={cards} />\n        </div>\n        </PageWrapper>\n    )\n}\n\nexport default AdminCardGroupPage","/home/asgeir/Desktop/master/client/src/components/pages/home.js",["209","210"],"import React, { useEffect } from \"react\"\nimport { useDispatch, useSelector } from 'react-redux';\nimport GroupView from \"../submodules/groupview\";\nimport { loadCardgroups } from \"../../store/actions/cardgroupActions\";\nimport {Typography, Button, Grid, makeStyles} from '@material-ui/core';\nimport {PageWrapper} from \"../../static/wrappers\"\nimport CreateCardGroup from \"../dialogs/createCardGroup\";\nimport { adminOnly } from \"../../store/actions/authActions\";\nimport authReducer from '../../store/reducers/authReducer';\n\nconst useStyles = makeStyles(theme => ({\n    addButton: {\n        backgroundColor: theme.palette.button.success.main,\n        color: \"white\",\n        border: \"none\",\n        align: \"center\",\n        '&:hover': {\n            background: theme.palette.button.success.dark,\n          }\n\n    }\n}))\n\n\n\nconst Home = () => {\n\n    const classes = useStyles()\n    const dispatch = useDispatch();\n   \n    const cardgroups = useSelector(state => state.cardgroupReducer.cardgroups)\n    const isAdmin = useSelector(state => state.authReducer.isAdmin)\n    \n    useEffect(() => {\n        dispatch(loadCardgroups())\n    }, [dispatch])   \n\n    useEffect(() => {\n        console.log(\"cardgroups changed...\")\n    }, [cardgroups])   \n\n    const [open, setOpen] = React.useState(false);\n    // const [selectedValue, setSelectedValue] = React.useState(emails[1]);\n  \n    const handleClickOpen = () => {\n      setOpen(true);\n    };\n  \n    const handleClose = (value) => {\n      setOpen(false);\n    };\n\n\n  \n\n\n\n    return (\n        // <div style={{maxWidth: \"600px\", marginTop: \"65px\", marginLeft: \"auto\", marginRight: \"auto\"}}>\n        <PageWrapper>   \n\n        <Grid container spacing={2}>\n            <Grid item xs={8}  >\n                <Typography variant=\"h4\" gutterBottom >\n                    Card Groups    \n                </Typography>\n            </Grid>\n            <Grid item xs={4}>\n                {isAdmin ?                 \n                <Button fullWidth className={classes.addButton} variant=\"outlined\" onClick={handleClickOpen}>\n                    + Create group\n                </Button> :\n                <div></div>}\n            </Grid> \n            <Grid item xs={12}>\n                <GroupView cardgroups={cardgroups}/>\n            </Grid> \n        </Grid>\n    \n        \n    <CreateCardGroup open={open} onClose={handleClose} />\n    </PageWrapper>\n        \n    )\n}\n\nexport default Home","/home/asgeir/Desktop/master/client/src/components/pages/login.js",[],"/home/asgeir/Desktop/master/client/src/components/pages/cardGroupPage.js",["211","212","213","214"],"\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { loadCardGroupUserFlashcards } from '../../store/actions/cardActions';\nimport CardView from '../submodules/cardview';\nimport { deleteCardgroup, loadCardgroup } from '../../store/actions/cardgroupActions';\nimport { Button, Grid, LinearProgress, makeStyles, Typography } from '@material-ui/core';\nimport CreateCardDialog from '../dialogs/createCardDialog';\nimport {PageWrapper} from \"../../static/wrappers\"\nimport authReducer from '../../store/reducers/authReducer';\nimport loadingReducer from '../../store/reducers/loadingReducer';\nimport Loading from '../notifications/loading';\nimport userReducer from '../../store/reducers/userReducer';\nimport { Redirect } from 'react-router-dom';\n\nconst useStyles = makeStyles(theme => ({\n    addButton: {\n        backgroundColor: theme.palette.button.success.main,\n        color: \"white\",\n        border: \"none\",\n        align: \"center\",\n        '&:hover': {\n            background: theme.palette.button.success.dark,\n          }\n    },\n    delButton: {\n        backgroundColor: theme.palette.button.error.main,\n        color: \"white\",\n        border: \"none\",\n        align: \"center\",\n        '&:hover': {\n            background: theme.palette.button.error.dark,\n          }\n    },\n    progressBar: {\n        \"& .MuiLinearProgress-barColorPrimary\" : {\n            backgroundColor: theme.palette.button.success.main\n        }\n    }\n}))\n\n\nconst CardGroupPage = props => {\n    console.log(\"prop\")\n    console.log(props.match.params)\n\n    const [redirectHome, setRedirectHome] = useState(false)\n    const classes = useStyles()\n\n    const isAdmin = useSelector(state => state.authReducer.isAdmin)\n\n    const cards = useSelector(state => state.cardReducer.cards)\n    const cardgroup = useSelector(state => state.cardgroupReducer.cardgroups[0])\n    const user = useSelector(state => state.authReducer.loggedInUser)\n    const [open, setOpen] = useState(false);\n    const dispatch = useDispatch();\n\n    const percentage = Math.round(100*(cards.length / cardgroup.numberOfCardsDue))\n    const loading = useSelector(state => state.loadingReducer.loading)\n\n    const handleClickOpen = () => {\n        setOpen(true);\n      };\n\n    const handleClose = (value) => {\n        setOpen(false);\n      };\n\n    const handleDelete = () => {\n        if (window.confirm(\"Are you sure you want to delete cardgroup with all cards?\")){ \n            dispatch(deleteCardgroup(cardgroup))\n            setRedirectHome(true)\n        }\n\n    }\n\n    console.log(\"cardgr.:\")\n    console.log(cardgroup)\n    \n    useEffect(() => {\n        console.log(\"stuff and things\") \n        console.log(cardgroup)\n        console.log(user)\n        dispatch(loadCardGroupUserFlashcards(props.match.params.id, user.id))       \n        dispatch(loadCardgroup(props.match.params.id))\n    }, [dispatch, props.match.params.id])   \n\n    const date = cardgroup.dueDate\n    let a = new Date(date.year, date.month-1, date.date, date.hour, date.minute)\n    console.log(\"aa\", a)\n\n    if (redirectHome){\n        return (\n            <Redirect to={{\n                pathname: \"/\"\n              }}/>  \n        )\n    }   \n    if (loading){\n        return (\n            <PageWrapper>\n                <Loading />\n            </PageWrapper>    \n        )\n    }\n    return(\n        <PageWrapper>\n            <CreateCardDialog open={open} onClose={handleClose} cardgroupId={props.match.params.id} />           \n\n            <Grid container spacing={6}>\n                <Grid item xs={8}>\n                    <Typography variant=\"h4\">{cardgroup.title}</Typography>\n                    <Typography variant=\"body2\">{cardgroup.numberOfCardsDue} cards are due \n                     {\" \"+a.toString()}\n                     </Typography>\n\n                    <div style={{marginTop: \"40px\"}}>\n                     <CardView cards={cards}/>\n                     </div>\n                </Grid>\n                \n                \n                <Grid item xs={4}>\n                    <Button fullWidth style={{height: \"80px\"}} className={classes.addButton} variant=\"outlined\" onClick={handleClickOpen}>\n                    + Add Flashcard\n                    </Button> \n                    <Grid container style={{margin: \"30px 0\", border: \"0px solid black\"}}>\n                        <Grid item xs={8}>\n                            <Typography variant=\"body1\">You've created</Typography>\n                            <Typography variant=\"body1\">{cards.length} of {cardgroup.numberOfCardsDue}</Typography>\n                        </Grid>\n                        <Grid item xs={4}>\n                           <Typography variant=\"h4\">{percentage}%</Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <LinearProgress className={classes.progressBar} variant=\"determinate\" value={percentage} />\n                        </Grid>\n                    </Grid>\n                    {isAdmin ? \n                    <Button fullWidth style={{height: \"80px\"}} className={classes.delButton} variant=\"outlined\" onClick={handleDelete}>\n                        Delete cardgroup and all cards\n                    </Button> : <div></div>}\n                </Grid>\n                <Grid item xs={7}>\n                    \n                </Grid>\n\n            </Grid>\n\n\n\n\n            \n\n\n            \n\n        </PageWrapper>\n    )\n\n  \n}\n\nexport default CardGroupPage","/home/asgeir/Desktop/master/client/src/components/notifications/loading.js",[],"/home/asgeir/Desktop/master/client/src/components/submodules/adminGroupCardView.js",[],"/home/asgeir/Desktop/master/client/src/components/layout/adminNavbar.js",["215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233"],"\nimport React, {useState} from \"react\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport  { Redirect, NavLink, Link } from 'react-router-dom'\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport {AppBar, ButtonGroup, Menu, MenuItem} from '@material-ui/core'\nimport PersonIcon from '@material-ui/icons/Person';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { signOut } from '../../store/actions/authActions';\nimport { NavBarWrapper, PageWrapper } from \"../../static/wrappers\";\nimport { ToggleButton, ToggleButtonGroup } from \"@material-ui/lab\";\n\n\nconst useStyles = makeStyles(theme => ({ \n    navlink: {\n        color: theme.palette.textColor,\n        textDecoration: \"none\"\n    },\n    button: {\n        width: \"200px\",\n        height: \"50px\",\n    }\n}));\n\n\n\n\n\nconst AdminNavbar = props => {\n\n    const classes = useStyles()\n    \n    const [alignment, setAlignment] = React.useState(1);\n\n\n    const handleAlignment = (event, newAlignment) => {\n        setAlignment(newAlignment);\n      };\n\n    return( \n        <PageWrapper>\n\n            <Typography variant=\"h4\" style={{flexGrow: 0}}>\n        Amin Page\n        </Typography>\n\n                    <Toolbar style={{padding: 0}}>                        \n           \n                    <ToggleButtonGroup\n                    fullWidth\n      value={alignment}\n      exclusive\n      onChange={handleAlignment}    \n      aria-label=\"text alignment\"\n    >\n            <ToggleButton component={Link} value={1} to=\"/adminpage/users\" className={classes.button} variant=\"outlined\"> Users </ToggleButton>\n            <ToggleButton component={Link} value={2} to=\"/adminpage/deliverystatus\" className={classes.button} variant=\"outlined\"> Delivery status </ToggleButton>\n            <ToggleButton component={Link} value={3} to=\"/adminpage/allcards\" className={classes.button} variant=\"outlined\"> All Cards </ToggleButton>\n            \n\n            </ToggleButtonGroup>  \n        \n        </Toolbar>\n        </PageWrapper>\n    )\n}\n\nexport default AdminNavbar","/home/asgeir/Desktop/master/client/src/components/adminpages/users.js",["234","235","236"],"import { PageWrapper } from \"../../static/wrappers\"\nimport { useDispatch, useSelector } from 'react-redux';\nimport userReducer from '../../store/reducers/userReducer';\nimport { useEffect } from 'react';\nimport { getAllUsers, getUsersWithRole, searchUsers } from '../../store/actions/userActions';\nimport { DataGrid, SearchIcon } from '@material-ui/data-grid';\nimport { FormControl, MenuItem, TextField, Grid, Button, IconButton } from '@material-ui/core';\nimport { InputLabel } from '@material-ui/core';\nimport { Select } from '@material-ui/core';\nimport { useState } from 'react';\nimport UserDialog from \"../dialogs/userDialog\";\n\n\n const Users = () => {\n\n    const [show, setShow] = useState('all');\n\n\n    const dispatch = useDispatch()\n    const users = useSelector(state => state.userReducer.users)\n    const [openUserDialog, setOpenUserDialog] = useState(false);\n    const [selectedUser,setSelectedUser] = useState({})\n\n\n    const [searchPhrase, setSearchPhrase] = useState(\"\")\n    \n\n    const userRoleFiler = role => {\n        if (role===\"all\"){\n            console.log(\"all da\")\n            dispatch(getAllUsers())\n        } else if (role===\"User\"){\n            dispatch(getUsersWithRole(\"User\"))\n        } else if (role===\"Admin\"){\n            console.log(\"aadd\")\n            dispatch(getUsersWithRole(\"Admin\"))\n        }\n    }\n\n    useEffect(() => {\n        // dispatch(getAllUsers())          \n        userRoleFiler(show)\n    }, [dispatch, show])\n\n    let rows = users    \n\n    const columns = [\n        {field: \"id\", headerName: \"id\", width: 70},\n        {field: \"username\", headerName: \"username\", width: 130},\n        {field: \"name\", headerName: \"name\", width: 130},\n        {field: \"email\", headerName: \"email\", width: 130},\n        {field: \"role\", headerName: \"role\", width: 130}\n    ]      \n\n    const handleSearch = (e) => {      \n        if (!searchPhrase){\n            userRoleFiler(show)\n        }   else {     \n        dispatch(searchUsers(show, searchPhrase))   \n        }     \n    }\n\n    const handleFilter = e => {\n        setSearchPhrase(\"\")\n        setShow(e.target.value)\n    } \n\n    const handleClick = e => {\n        console.log(\"print\", e.row)\n        setSelectedUser(e.row)\n        setOpenUserDialog(true)\n    }\n    \n    return (\n        <PageWrapper>       \n            <UserDialog open={openUserDialog} onClose={() => setOpenUserDialog(false)} user={selectedUser} />\n            <Grid container spacing={1}>\n                <Grid item xs={6}>\n            \n                    <FormControl fullWidth variant=\"outlined\">\n                    <InputLabel id=\"demo-simple-select-label\">Filter</InputLabel>\n                        <Select\n                        // labelId=\"demo-simple-select-label\"\n                        // id=\"demo-simple-select\"\n                        // value={show}\n                        // onChange={e => setShow(e.target.value)}'\n                        required\n                        color=\"secondary\"\n                        value={show}\n                        onChange={e => handleFilter(e)}\n                        label=\"show\"\n            \n                        >\n                        <MenuItem value={\"all\"}>All users</MenuItem>\n                        <MenuItem value={\"Admin\"}>Admins</MenuItem>\n                        <MenuItem value={\"User\"}>Users</MenuItem>\n                        </Select>\n                    </FormControl> \n                </Grid>\n                <Grid item xs={6}>\n\n\n                        <TextField \n                                id=\"search\"\n                                label=\"Search username\"\n                                color=\"secondary\"\n                                defaultValue=\"\"\n                                fullWidth\n                                onKeyPress={(ev) => {\n                                    if (ev.key === 'Enter') {\n                                        handleSearch()\n                                    }\n                                  }}\n                                onChange={e => setSearchPhrase(e.target.value)}\n                                value={searchPhrase}\n                                variant=\"outlined\"\n                                InputProps={{endAdornment: \n                                    <IconButton onClick={handleSearch}>\n                                        <SearchIcon />\n                                    </IconButton>\n                                }}\n                            ></TextField>\n                        </Grid>\n\n                        <Grid item xs={12}>\n\n\n\n                        <div style={{ height: 400, width: '100%' }}> \n                    <DataGrid onCellClick={e => handleClick(e)} rows={rows} columns={columns} pageSize={5}  />\n                    </div>\n            </Grid>  \n            </Grid>     \n\n        </PageWrapper>\n    )\n}\n\nexport default Users","/home/asgeir/Desktop/master/client/src/store/reducers/userReducer.js",["237"],"import { GET_USERS, GET_DELIVERY_STATUS, UPDATE_USER } from \"../actionTypes\"\n\n\n\nconst initState = {\n    users: [],\n    status: []\n}\n\nconst userReducer = (state = initState, action) => {\n\n    switch(action.type){\n        case GET_USERS:\n            console.log(\"successfull get users\")\n            return {\n                ...state, \n                users: action.payload\n            }   \n        case GET_DELIVERY_STATUS:\n            console.log(\"successfull get status\")\n            return{\n                ...state,\n                status: action.payload\n            }\n\n        case UPDATE_USER:\n            console.log(\"updated user\")\n            return{\n                ...state,\n                users: state.users.map(user => {\n                    if (user.id == action.payload.id ) {\n                        return action.payload;\n                    } else {\n                        return user;\n                    }\n                })\n            }\n            \n        default:\n            console.log(\"default auth\")\n            return state\n    }\n}\n\nexport default userReducer","/home/asgeir/Desktop/master/client/src/store/actions/userActions.js",[],"/home/asgeir/Desktop/master/client/src/components/adminpages/deliveryStatus.js",["238","239","240"],"import { PageWrapper } from \"../../static/wrappers\"\nimport { useDispatch, useSelector } from 'react-redux';\nimport userReducer from '../../store/reducers/userReducer';\nimport { useEffect } from 'react';\nimport {  getUsersStatus } from '../../store/actions/userActions';\nimport { DataGrid } from '@material-ui/data-grid';\nimport CardgroupSelect from '../submodules/cardgroupselect';\nimport { useState } from 'react';\nimport { Typography } from \"@material-ui/core\";\n\n\n const DeliveryStatus = () => {\n\n    const dispatch = useDispatch()\n    // const users = useSelector(state => state.userReducer.users)\n    const status = useSelector(state => state.userReducer.status)\n\n    const [cardGroupId, setCardGroupId] = useState(0)\n\n\n    useEffect(() => {\n        dispatch(getUsersStatus(cardGroupId))\n        console.log(\"status\")\n        console.log(status)\n    }, [dispatch, cardGroupId])\n    \n    console.log(\"usars\")\n\n    \n\n    const columns = [\n        { field: 'username', headerName: 'Username', width: 130 },\n        { field: 'delivered', headerName: 'Delivered', type: \"number\", width: 130 },\n        {\n          field: 'toDeliver',\n          headerName: 'To Deliver',\n          type: 'number',\n          width: 130,\n        },\n        { field: 'complete', headerName: 'Complete', type: \"number\", width: 130 },      \n    ]      \n\n    let rows = status.map(s => (\n        {\n            id: s.user.id, \n            username: s.user.username, \n            delivered: s.delivered, \n            toDeliver: s.cardgroup.numberOfCardsDue,\n            complete: s.delivered == s.cardgroup.numberOfCardsDue ? true : false\n        }\n    ))\n\n    \n      \n    \n    const dateToString = date => {\n        let a = new Date(date.year, date.month-1, date.date, date.hour, date.minute)\n            console.log(\"aa\", a)\n            // return a.getUTCMonth()\n            return a.toString()\n      }\n    \n    console.log(\"cgid\", cardGroupId)\n    return (\n        <PageWrapper>       \n            <div style={{marginBottom: \"15px\"}} >\n                <CardgroupSelect onChange={setCardGroupId} />\n                <Typography variant=\"subtitle2\" style={{marginTop: \"20px\"}}>\n                {status[0] ? \"Due: \" + dateToString(status[0].cardgroup.dueDate) : \"Due:\"}\n                </Typography>\n            </div>\n\n                <div style={{ height: 400, width: '100%' }}>\n \n                <DataGrid rows={rows} columns={columns} pageSize={5}  />\n            </div>\n        </PageWrapper>\n    )\n}\n\nexport default DeliveryStatus","/home/asgeir/Desktop/master/client/src/components/dialogs/userDialog.js",["241","242","243","244"],"import { Button, Dialog } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addAdmin, removeAdmin } from '../../store/actions/userActions';\nimport { useEffect } from 'react';\nimport userReducer from '../../store/reducers/userReducer';\n\n\n\nconst UserDialog = (props) =>  {\n    const { onClose, selectedValue, open, user } = props;\n   \n    const dispatch = useDispatch()\n\n    const handleClose = () => {\n      onClose(selectedValue);\n    };\n    \n    const makeAdmin = () => {\n        dispatch(addAdmin(user))\n        handleClose()\n    }\n\n    const unmakeAdmin = () => {\n        dispatch(removeAdmin(user))\n        handleClose()\n    }\n   \n    return (\n      <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open} >\n        <div style={{padding: \"30px\", width:\"500px\"}}>\n\n            <h2>User: {user.name}</h2>\n            <span style={{ color: \"grey\" }}>username: </span><span>{user.username}</span> <br />\n            <span style={{ color: \"grey\" }}>email: </span><span>{user.email}</span> <br />\n            <span style={{ color: \"grey\" }}>role: </span><span>{user.role}</span> <br />\n\n            <div style={{textAlign: \"center\", paddingTop: \"50px\"}}>\n            {user.role == \"Admin\" ? \n                <Button onClick={() => unmakeAdmin()} variant=\"outlined\">Remove admin</Button>\n            :\n                <Button onClick={() => makeAdmin()} variant=\"outlined\">Make admin</Button>\n            }     \n            </div>\n        \n        </div>\n      </Dialog>\n    );\n  }\n  \n  export default UserDialog","/home/asgeir/Desktop/master/client/src/components/dialogs/cardDialog.js",["245","246","247","248","249","250","251"],"import { Button, Dialog, Box } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addAdmin, removeAdmin } from '../../store/actions/userActions';\nimport { useEffect } from 'react';\nimport userReducer from '../../store/reducers/userReducer';\nimport CardView from '../submodules/cardview';\n\nconst CardDialog = (props) =>  {\n    const { onClose, selectedValue, open, card } = props;\n   \n    // const dispatch = useDispatch()\n\n    const handleClose = () => {\n      onClose(selectedValue);\n    };\n    \n    // const makeAdmin = () => {\n    //     dispatch(addAdmin(user))\n    //     handleClose()\n    // }\n\n    // const unmakeAdmin = () => {\n    //     dispatch(removeAdmin(user))\n    //     handleClose()\n    // }\n   \n    return (\n      <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n      <Box style={{width:\"400px\", height: \"auto\", margin: 0}} >\n          <CardView cards={[card]} />\n          </Box>\n      </Dialog> \n    );\n  }\n  \n  export default CardDialog",{"ruleId":"252","replacedBy":"253"},{"ruleId":"254","replacedBy":"255"},{"ruleId":"256","severity":1,"message":"257","line":15,"column":8,"nodeType":"258","messageId":"259","endLine":15,"endColumn":26},{"ruleId":"260","severity":1,"message":"261","line":44,"column":8,"nodeType":"262","endLine":44,"endColumn":28,"suggestions":"263"},{"ruleId":"264","severity":1,"message":"265","line":75,"column":91,"nodeType":"266","messageId":"267","endLine":75,"endColumn":93},{"ruleId":"256","severity":1,"message":"268","line":3,"column":87,"nodeType":"258","messageId":"259","endLine":3,"endColumn":109},{"ruleId":"256","severity":1,"message":"269","line":5,"column":7,"nodeType":"258","messageId":"259","endLine":5,"endColumn":12},{"ruleId":"256","severity":1,"message":"270","line":11,"column":8,"nodeType":"258","messageId":"259","endLine":11,"endColumn":22},{"ruleId":"256","severity":1,"message":"270","line":5,"column":8,"nodeType":"258","messageId":"259","endLine":5,"endColumn":22},{"ruleId":"256","severity":1,"message":"271","line":23,"column":9,"nodeType":"258","messageId":"259","endLine":23,"endColumn":14},{"ruleId":"252","replacedBy":"272"},{"ruleId":"254","replacedBy":"273"},{"ruleId":"256","severity":1,"message":"274","line":2,"column":43,"nodeType":"258","messageId":"259","endLine":2,"endColumn":53},{"ruleId":"256","severity":1,"message":"275","line":5,"column":10,"nodeType":"258","messageId":"259","endLine":5,"endColumn":19},{"ruleId":"260","severity":1,"message":"276","line":25,"column":8,"nodeType":"262","endLine":25,"endColumn":10,"suggestions":"277"},{"ruleId":"256","severity":1,"message":"278","line":2,"column":23,"nodeType":"258","messageId":"259","endLine":2,"endColumn":35},{"ruleId":"256","severity":1,"message":"279","line":3,"column":8,"nodeType":"258","messageId":"259","endLine":3,"endColumn":19},{"ruleId":"256","severity":1,"message":"280","line":5,"column":11,"nodeType":"258","messageId":"259","endLine":5,"endColumn":25},{"ruleId":"256","severity":1,"message":"281","line":6,"column":8,"nodeType":"258","messageId":"259","endLine":6,"endColumn":16},{"ruleId":"260","severity":1,"message":"282","line":21,"column":8,"nodeType":"262","endLine":21,"endColumn":18,"suggestions":"283"},{"ruleId":"256","severity":1,"message":"284","line":8,"column":10,"nodeType":"258","messageId":"259","endLine":8,"endColumn":19},{"ruleId":"256","severity":1,"message":"285","line":9,"column":8,"nodeType":"258","messageId":"259","endLine":9,"endColumn":19},{"ruleId":"256","severity":1,"message":"285","line":10,"column":8,"nodeType":"258","messageId":"259","endLine":10,"endColumn":19},{"ruleId":"256","severity":1,"message":"270","line":11,"column":8,"nodeType":"258","messageId":"259","endLine":11,"endColumn":22},{"ruleId":"256","severity":1,"message":"279","line":13,"column":8,"nodeType":"258","messageId":"259","endLine":13,"endColumn":19},{"ruleId":"260","severity":1,"message":"286","line":86,"column":8,"nodeType":"262","endLine":86,"endColumn":41,"suggestions":"287"},{"ruleId":"256","severity":1,"message":"288","line":2,"column":16,"nodeType":"258","messageId":"259","endLine":2,"endColumn":24},{"ruleId":"256","severity":1,"message":"289","line":4,"column":11,"nodeType":"258","messageId":"259","endLine":4,"endColumn":19},{"ruleId":"256","severity":1,"message":"290","line":4,"column":21,"nodeType":"258","messageId":"259","endLine":4,"endColumn":28},{"ruleId":"256","severity":1,"message":"291","line":5,"column":8,"nodeType":"258","messageId":"259","endLine":5,"endColumn":25},{"ruleId":"256","severity":1,"message":"292","line":6,"column":8,"nodeType":"258","messageId":"259","endLine":6,"endColumn":22},{"ruleId":"256","severity":1,"message":"293","line":7,"column":8,"nodeType":"258","messageId":"259","endLine":7,"endColumn":23},{"ruleId":"256","severity":1,"message":"294","line":8,"column":8,"nodeType":"258","messageId":"259","endLine":8,"endColumn":21},{"ruleId":"256","severity":1,"message":"295","line":9,"column":9,"nodeType":"258","messageId":"259","endLine":9,"endColumn":15},{"ruleId":"256","severity":1,"message":"296","line":9,"column":17,"nodeType":"258","messageId":"259","endLine":9,"endColumn":28},{"ruleId":"256","severity":1,"message":"297","line":9,"column":30,"nodeType":"258","messageId":"259","endLine":9,"endColumn":34},{"ruleId":"256","severity":1,"message":"298","line":9,"column":36,"nodeType":"258","messageId":"259","endLine":9,"endColumn":44},{"ruleId":"256","severity":1,"message":"299","line":10,"column":8,"nodeType":"258","messageId":"259","endLine":10,"endColumn":18},{"ruleId":"256","severity":1,"message":"300","line":13,"column":8,"nodeType":"258","messageId":"259","endLine":13,"endColumn":14},{"ruleId":"256","severity":1,"message":"301","line":16,"column":8,"nodeType":"258","messageId":"259","endLine":16,"endColumn":12},{"ruleId":"256","severity":1,"message":"302","line":17,"column":8,"nodeType":"258","messageId":"259","endLine":17,"endColumn":16},{"ruleId":"256","severity":1,"message":"303","line":18,"column":10,"nodeType":"258","messageId":"259","endLine":18,"endColumn":21},{"ruleId":"256","severity":1,"message":"304","line":18,"column":23,"nodeType":"258","messageId":"259","endLine":18,"endColumn":34},{"ruleId":"256","severity":1,"message":"305","line":19,"column":10,"nodeType":"258","messageId":"259","endLine":19,"endColumn":17},{"ruleId":"256","severity":1,"message":"306","line":20,"column":10,"nodeType":"258","messageId":"259","endLine":20,"endColumn":23},{"ruleId":"256","severity":1,"message":"279","line":3,"column":8,"nodeType":"258","messageId":"259","endLine":3,"endColumn":19},{"ruleId":"256","severity":1,"message":"300","line":7,"column":50,"nodeType":"258","messageId":"259","endLine":7,"endColumn":56},{"ruleId":"260","severity":1,"message":"307","line":43,"column":8,"nodeType":"262","endLine":43,"endColumn":24,"suggestions":"308"},{"ruleId":"264","severity":1,"message":"265","line":31,"column":33,"nodeType":"266","messageId":"267","endLine":31,"endColumn":35},{"ruleId":"256","severity":1,"message":"279","line":3,"column":8,"nodeType":"258","messageId":"259","endLine":3,"endColumn":19},{"ruleId":"260","severity":1,"message":"309","line":25,"column":8,"nodeType":"262","endLine":25,"endColumn":31,"suggestions":"310"},{"ruleId":"264","severity":1,"message":"265","line":49,"column":35,"nodeType":"266","messageId":"267","endLine":49,"endColumn":37},{"ruleId":"256","severity":1,"message":"304","line":2,"column":23,"nodeType":"258","messageId":"259","endLine":2,"endColumn":34},{"ruleId":"256","severity":1,"message":"311","line":4,"column":10,"nodeType":"258","messageId":"259","endLine":4,"endColumn":19},{"ruleId":"256","severity":1,"message":"279","line":5,"column":8,"nodeType":"258","messageId":"259","endLine":5,"endColumn":19},{"ruleId":"264","severity":1,"message":"265","line":38,"column":24,"nodeType":"266","messageId":"267","endLine":38,"endColumn":26},{"ruleId":"256","severity":1,"message":"300","line":1,"column":10,"nodeType":"258","messageId":"259","endLine":1,"endColumn":16},{"ruleId":"256","severity":1,"message":"303","line":2,"column":10,"nodeType":"258","messageId":"259","endLine":2,"endColumn":21},{"ruleId":"256","severity":1,"message":"304","line":2,"column":23,"nodeType":"258","messageId":"259","endLine":2,"endColumn":34},{"ruleId":"256","severity":1,"message":"312","line":3,"column":10,"nodeType":"258","messageId":"259","endLine":3,"endColumn":18},{"ruleId":"256","severity":1,"message":"313","line":3,"column":20,"nodeType":"258","messageId":"259","endLine":3,"endColumn":31},{"ruleId":"256","severity":1,"message":"311","line":4,"column":10,"nodeType":"258","messageId":"259","endLine":4,"endColumn":19},{"ruleId":"256","severity":1,"message":"279","line":5,"column":8,"nodeType":"258","messageId":"259","endLine":5,"endColumn":19},"no-native-reassign",["314"],"no-negated-in-lhs",["315"],"no-unused-vars","'AdminCardGroupPage' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isAdmin'. Either include it or remove the dependency array.","ArrayExpression",["316"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'DELETE_CARDGROUP_ERROR' is defined but never used.","'Sleep' is assigned a value but never used.","'loadingReducer' is defined but never used.","'admin' is assigned a value but never used.",["314"],["315"],"'makeStyles' is defined but never used.","'loadCards' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["317"],"'STOP_LOADING' is defined but never used.","'userReducer' is defined but never used.","'getUsersStatus' is defined but never used.","'CardView' is defined but never used.","React Hook useEffect has a missing dependency: 'cardgroupId'. Either include it or remove the dependency array.",["318"],"'adminOnly' is defined but never used.","'authReducer' is defined but never used.","React Hook useEffect has missing dependencies: 'cardgroup' and 'user'. Either include them or remove the dependency array.",["319"],"'useState' is defined but never used.","'Redirect' is defined but never used.","'NavLink' is defined but never used.","'AccountCircleIcon' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'Brightness4Icon' is defined but never used.","'ExitToAppIcon' is defined but never used.","'AppBar' is defined but never used.","'ButtonGroup' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'PersonIcon' is defined but never used.","'Button' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'signOut' is defined but never used.","'NavBarWrapper' is defined but never used.","React Hook useEffect has a missing dependency: 'userRoleFiler'. Either include it or remove the dependency array.",["320"],"React Hook useEffect has a missing dependency: 'status'. Either include it or remove the dependency array.",["321"],"'useEffect' is defined but never used.","'addAdmin' is defined but never used.","'removeAdmin' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"322","fix":"323"},{"desc":"324","fix":"325"},{"desc":"326","fix":"327"},{"desc":"328","fix":"329"},{"desc":"330","fix":"331"},{"desc":"332","fix":"333"},"Update the dependencies array to be: [loggedIn, dispatch, isAdmin]",{"range":"334","text":"335"},"Update the dependencies array to be: [dispatch]",{"range":"336","text":"337"},"Update the dependencies array to be: [cardgroupId, dispatch]",{"range":"338","text":"339"},"Update the dependencies array to be: [cardgroup, dispatch, props.match.params.id, user]",{"range":"340","text":"341"},"Update the dependencies array to be: [dispatch, show, userRoleFiler]",{"range":"342","text":"343"},"Update the dependencies array to be: [dispatch, cardGroupId, status]",{"range":"344","text":"345"},[1652,1672],"[loggedIn, dispatch, isAdmin]",[649,651],"[dispatch]",[639,649],"[cardgroupId, dispatch]",[2885,2918],"[cardgroup, dispatch, props.match.params.id, user]",[1438,1454],"[dispatch, show, userRoleFiler]",[857,880],"[dispatch, cardGroupId, status]"]