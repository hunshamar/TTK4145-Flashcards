[{"/home/asgeir/Desktop/master/frontend/src/index.js":"1","/home/asgeir/Desktop/master/frontend/src/App.js":"2","/home/asgeir/Desktop/master/frontend/src/reportWebVitals.js":"3","/home/asgeir/Desktop/master/frontend/src/home.js":"4","/home/asgeir/Desktop/master/frontend/src/login.js":"5"},{"size":500,"mtime":1610987966256,"results":"6","hashOfConfig":"7"},{"size":379,"mtime":1611152973887,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1610987966256,"results":"9","hashOfConfig":"7"},{"size":1392,"mtime":1611155669809,"results":"10","hashOfConfig":"7"},{"size":888,"mtime":1611154098551,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"vvr8t2",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"/home/asgeir/Desktop/master/frontend/src/index.js",[],["24","25"],"/home/asgeir/Desktop/master/frontend/src/App.js",[],"/home/asgeir/Desktop/master/frontend/src/reportWebVitals.js",[],"/home/asgeir/Desktop/master/frontend/src/home.js",["26","27"],"/home/asgeir/Desktop/master/frontend/src/login.js",["28","29","30","31","32"],"import React, {useState} from \"react\"\nimport  { Redirect } from 'react-router-dom'\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction Login() {\n\n  const [token, setToken] = useState(\"\")\n\n  const login = () => {\n\n    fetch(\"http://localhost:5000/login\")\n    .then(response => response.json())\n    .then(data => {\n      console.log(token)\n\n      setToken(data)\n      window.open(\"https://www.itk.ntnu.no/api/feide.php?token=\"+token+\"&returnURL=http://localhost:5000/api/userdata\", \"_self\")\n\n\n    })\n\n    console.log(\"logging in\")\n  }\n\n\n  if (token){\n    return (\n      <div>redirecting...</div>\n    )\n  } else {\n  return (\n    <div style={{margin: \"300px\"}}>\n      <button onClick={login} style={{width: \"300px\", height: \"100px\"}}>\n        Log in\n      </button>\n    </div>\n  );\n}\n}\n\nexport default Login;\n",{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":2,"column":9,"nodeType":"39","messageId":"40","endLine":2,"endColumn":18},{"ruleId":"41","severity":1,"message":"42","line":17,"column":15,"nodeType":"43","endLine":26,"endColumn":6},{"ruleId":"37","severity":1,"message":"44","line":2,"column":11,"nodeType":"39","messageId":"40","endLine":2,"endColumn":19},{"ruleId":"37","severity":1,"message":"45","line":3,"column":27,"nodeType":"39","messageId":"40","endLine":3,"endColumn":33},{"ruleId":"37","severity":1,"message":"46","line":3,"column":35,"nodeType":"39","messageId":"40","endLine":3,"endColumn":40},{"ruleId":"37","severity":1,"message":"47","line":3,"column":42,"nodeType":"39","messageId":"40","endLine":3,"endColumn":46},{"ruleId":"37","severity":1,"message":"48","line":5,"column":8,"nodeType":"39","messageId":"40","endLine":5,"endColumn":12},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'Redirect' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'logo' is defined but never used.","no-global-assign","no-unsafe-negation"]