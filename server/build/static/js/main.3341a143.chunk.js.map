{"version":3,"sources":["store/actionTypes.js","store/actions/authActions.js","static/wrappers.js","components/layout/navbar.js","store/reducers/loadingReducer.js","components/notifications/loading.js","utils/datehandling.js","components/submodules/groupview.js","store/actions/cardgroupActions.js","components/dialogs/confirmDialog.js","components/dialogs/createCardGroup.js","store/reducers/authReducer.js","components/pages/addCards.js","components/pages/login.js","store/reducers/userReducer.js","store/actions/userActions.js","store/actions/cardActions.js","components/submodules/cardgroupselect.js","components/submodules/flashcardStudy.js","components/dialogs/cardPreviewDialog.js","components/submodules/HTMLTextField.js","components/dialogs/createCardDialog.js","components/submodules/cardview.js","components/dialogs/cardDialog.js","components/adminpages/allCards.js","components/loginfunc.js","components/submodules/progress.js","components/pages/cardGroupPage.js","components/pages/userProfile.js.js","components/dialogs/userDialog.js","components/adminpages/users.js","components/layout/adminNavbar.js","components/adminpages/adminPage.js","components/adminpages/deliveryStatus.js","store/actions/peerreviewActions.js","components/dialogs/createPeerreview.js","components/submodules/peerReviewView.js","components/pages/peerreview.js","store/reducers/ratingReducer.js","components/submodules/divHTMLSanitized.js","components/dialogs/markAsDuplicateDialog.js","components/submodules/rateCard.js","store/actions/ratingActions.js","components/pages/peerReviewGroup.js","components/pages/study.js","components/dialogs/feedback.js","components/pages/home.js","components/pages/HTMLGuide.js","components/adminpages/allPeerreviews.js","routes.js","static/theme.js","components/notifications/alerter.js","App.js","components/layout/footer.js","reportWebVitals.js","store/reducers/cardReducer.js","store/reducers/cardgroupReducer.js","store/reducers/alertReducer.js","store/reducers/peerreviewReducer.js","store/reducers/rootReducer.js","index.js"],"names":["SET_LOADING","SET_ALERT","CLEAR_ALERT","LOG_IN_CALLBACK","LOG_OUT","LOG_IN_STATUS","GET_USERS","UPDATE_USER","GET_DELIVERY_STATUS","CREATE_CARDGROUP","CREATE_CARDGROUP_ERROR","LOAD_CARDGROUPS","LOAD_CARDGROUP","DELETE_CARDGROUP","DELETE_CARDGROUP_ERROR","EDIT_CARDGROUP","CREATE_CARD","CREATE_CARD_ERROR","LOAD_CARD","LOAD_CARDS","DELETE_CARD","DELETE_CARD_ERROR","CREATE_PEERREVIEW","LOAD_PEERREVIEWS","CREATE_RATING","LOAD_RATINGS","refreshTokens","a","user_token","localStorage","getItem","axios","post","headers","Authorization","then","res","console","log","data","refresh_token","removeItem","setItem","token","siteWidth","wideSiteWidth","PageWrapper","makeStyles","theme","pageWrapper","marginLeft","marginRight","withStyles","root","marginBottom","maxWidth","minWidth","marginTop","Box","AdminNavbarWrapper","NavBarWrapper","useStyles","link","color","textDecoration","navlink","whiteSpace","navbar","backgroundColor","palette","primary","main","textColor","UserMenu","props","classes","user","useSelector","state","authReducer","loggedInUser","React","useState","anchorEl","setAnchorEl","history","useHistory","dispatch","useDispatch","handleClose","username","Button","aria-controls","aria-haspopup","onClick","event","currentTarget","style","Menu","id","keepMounted","open","Boolean","onClose","to","className","MenuItem","setDarkMode","getState","error","refreshToken","Error","clear","type","payload","loggedIn","push","window","location","reload","Navbar","isAdmin","AppBar","position","Toolbar","padding","Typography","variant","flexGrow","List","display","Fragment","ListItem","initState","loading","loadingReducer","action","loader","textAlign","Loading","CircularProgress","size","alternative","monthNames","daysInWeek","dateJSONToString","date","d","Date","getDay","getMonth","getDate","getFullYear","getHours","getMinutes","GroupView","cardgroups","showDueDate","Divider","Grid","container","spacing","length","map","cardgroup","item","xs","CardActionArea","minHeight","alignItems","component","title","numberOfCardsDue","call","dueDate","loadCardgroups","get","catch","err","ConfirmDIalog","selectedValue","Dialog","aria-labelledby","dialog","maxHeight","CreateCardGroup","toeditCardgroup","selectedDate","setSelectedDate","setTitle","numberOfCards","setNumberOfCards","time","setTime","formSubmitCallback","alertReducer","severity","newStatus","newAlert","useEffect","margin","align","onSubmit","e","preventDefault","setMinutes","split","setHours","put","editedCardgroup","alert","text","toString","createdCardgroup","addCardgroup","TextField","onChange","target","value","fullWidth","required","label","utils","DateFnsUtils","disableToolbar","inputVariant","format","autoOk","animateYearScrolling","KeyboardButtonProps","defaultValue","InputLabelProps","shrink","addButton","button","success","border","background","dark","AddCards","cardgroupReducer","setOpen","gutterBottom","groupId","StyledLink","styled","Link","ManualLogin","setUsername","email","setEmail","name","setName","manualredirect","setManualredirect","pathname","fontSize","fetch","method","body","JSON","stringify","credentials","response","json","status","Login","AlternativeLogin","setAlternativeLogin","feideLogin","withCredentials","url","width","height","href","users","userReducer","getUsersWithRole","role","loadCardgroupFlashcards","cardgroupId","cards","CardgroupSelect","cardgroupMenuitems","index","group","setGroup","showFirst","FormControl","InputLabel","Select","labelId","FlashcardStudy","flashcard","revealback","reveal","setReveal","overflow","dangerouslySetInnerHTML","__html","DOMPurify","sanitize","front","back","customizedButton","left","top","CardPreviewDialog","card","Tooltip","placement","IconButton","HTMLTextField","InputProps","multiline","rows","inputRef","useRef","onKeyDown","key","selectionStart","selectionEnd","newValue","substring","current","CreateCardDialog","setFront","setBack","preview","setPreview","changedCard","cardgroupid","createdCard","addCard","borderColor","borderRadius","mb","endIcon","CardView","editCard","setEditCard","openEdit","setOpenEdit","openPreview","setOpenPreview","deleteThisCard","confirm","delete","deleteCard","cardItems","Card","previewThisCard","paddingTop","editThisCard","CardDialog","AllCards","cardReducer","openCard","setOpenCard","selectedCard","setSelectedCard","cardGroupId","setCardGroupId","c","nRatings","averageRating","onCellClick","row","handleClick","columns","field","headerName","pageSize","LogInFunc","progressBar","Progress","x","y","percentage","Math","round","LinearProgress","delButton","CardGroupPage","match","params","openEditCardgroup","setOpenEditCardgroup","deleteCardgroup","UserProfile","loggedInuser","UserDialog","makeAdmin","updatedUser","addAdmin","unmakeAdmin","removeAdmin","Users","show","setShow","openUserDialog","setOpenUserDialog","selectedUser","setSelectedUser","searchPhrase","setSearchPhrase","userRoleFiler","handleSearch","searchUsers","handleFilter","onKeyPress","ev","endAdornment","AdminNavbar","alignment","setAlignment","urls","findIndex","ToggleButtonGroup","exclusive","aria-label","ToggleButton","AdminPage","DeliveryStatus","s","delivered","toDeliver","complete","getUserPeerreviews","peerReviews","CreatePeerreview","numberOfReviews","setNumberOfReviews","setGroupId","createPeerreviews","PeerreviewView","peerreviews","peerreview","reviewsDue","PeerReview","peerreviewReducer","setCardgroups","p","peerreviewid","ratings","ratingReducer","filter","rating","DivHTMLSanatized","flexDirection","justifyContent","CheckCard","isDuplicate","editDuplicates","checked","setChecked","Checkbox","MarkAsDuplicatedDialog","setDuplicateCards","duplicateCards","cardId","includes","Popover","i","duplicateButton","marked","backgroundHover","difficultyLabels","0.5","1","1.5","2","2.5","3","3.5","4","4.5","5","qualityLabels","RateCard","save","previewCard","cardIdToIndex","flipped","setFlipped","difficulty","setDifficulty","hoverDifficulty","setHoverDifficulty","saveDate","setSaveDate","duplicateCardIds","setDuplicateCardIds","openMarkAsDuplicated","setOpenMarkAsDuplicated","quality","setQuality","hoverQuality","setHoverQuality","find","card_id","foundRating","quality_rating","savedatestring","duplicates","submitRating","cardNumber","join","createdRating","saveRating","revealButton","Rating","precision","onChangeActive","newHover","savebutton","PeerReviewGroup","peerreviewId","setSave","setPreviewCard","pid","foundRatings","getRatingsInPeerreview","openPreviewCard","indexOf","Study","Feedback","buttonstyle","dialogstyle","src","frameborder","marginheight","marginwidth","Home","TagTitle","fontWeight","exampleString","HTMLGuide","HTMLString","setHTMLString","InputAdornment","AllPeerreviews","toRate","rated","reviewsDone","FML","Routes","pages","path","exact","logInFunc","render","darkTheme","createMuiTheme","default","secondary","blue","hover","values","siteSideMargin","siteTopMargin","grey","Alerter","reason","Snackbar","autoHideDuration","Alert","App","footer","darkMode","sessionStorage","CssBaseline","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3341a143.chunk.js","sourcesContent":["\n\n/* alert actions */\nexport const SET_LOADING       = \"SET_LOADING\"\nexport const CLEAR_LOADING       = \"CLEAR_LOADING\"\n\n\n/* Loading actions */ \nexport const SET_ALERT       = \"SET_ALERT\"\nexport const CLEAR_ALERT       = \"CLEAR_ALERT\"\n\n/* Authentication actions */\nexport const LOG_IN_CALLBACK = \"LOG_IN_CALLBACK\"\nexport const LOG_OUT         = \"LOG_OUT\"\nexport const LOG_IN_STATUS   = \"LOG_IN_STATUS\"\n\n/* User actions */\nexport const GET_USERS = \"GET_USERS\"\nexport const UPDATE_USER = \"UPDATE_USER\"\nexport const GET_DELIVERY_STATUS = \"GET_DELIVERY_STATUS\"\n\n/* Cardgroup actions */\nexport const CREATE_CARDGROUP = \"CREATE_CARDGROUP\"\nexport const CREATE_CARDGROUP_ERROR = \"CREATE_CARDGROUP_ERROR\"\nexport const LOAD_CARDGROUPS = \"LOAD_CARDGROUPS\"\nexport const LOAD_CARDGROUP  = \"LOAD_CARDGROUP\"\nexport const DELETE_CARDGROUP = \"DELETE_CARDGROUP\"\nexport const DELETE_CARDGROUP_ERROR = \"DELETE_CARDGROUP_ERROR\"\nexport const EDIT_CARDGROUP = \"EDIT_CARDGROUP\"\n\n/* Card ACTIONS */\nexport const CLEAR_CARDS = \"CLEAR_CARDS\"\nexport const CREATE_CARD = \"CREATE_CARD\"\nexport const CREATE_CARD_ERROR = \"CREATE_CARD_ERROR\"\nexport const LOAD_CARD = \"LOAD_CARD\"\nexport const LOAD_CARDS = \"LOAD_CARDS\"\nexport const EDIT_CARD = \"EDIT_CARD\"\nexport const DELETE_CARD = \"DELETE_CARD\"\nexport const DELETE_CARD_ERROR = \"DELETE_CARD_ERROR\"\n\n/* Peer review actions */\nexport const CREATE_PEERREVIEW = \"CREATE_PEERREVIEW\"\nexport const LOAD_PEERREVIEWS = \"LOAD_PEERREVIEWS\"\n\n/* Rating actions */\nexport const CREATE_RATING = \"CREATE_RATING\"\nexport const LOAD_RATINGS = \"LOAD_RATINGS\"\n\n\n\n\n","\nimport axios from 'axios';\nimport { LOG_IN_CALLBACK, LOG_IN_STATUS, LOG_OUT, SET_ALERT, SET_LOADING } from '../actionTypes';\n\n\n\n\nexport const signInCallack = () => async (dispatch) => {\n    dispatch({type: SET_LOADING, payload: true})\n    await axios.get(\"/api/login/callback\", { withCredentials: true })\n        .then(res => {\n            if(res.data.error){\n                throw new Error(res.data.error)\n            }\n            let user_token = res.data.user_token\n            let refresh_token = res.data.refresh_token\n            console.log(\"action, usertoken\", user_token)\n            console.log(\"action, refresh\", refresh_token)\n            localStorage.setItem(\"user_token\", user_token)\n            localStorage.setItem(\"refresh_token\", refresh_token)\n            const payload = {loggedIn: true}\n            dispatch({type: LOG_IN_CALLBACK, payload})\n        })\n        .catch(err => {\n            console.log(\"Error in signInCallback\", err)\n            const alert = {severity: \"error\", text: err.toString()}\n            dispatch({type: SET_ALERT, payload: alert})\n        })\n    dispatch({type: SET_LOADING, payload: false})\n}\n\nexport const checkLogInStatus = () => async (dispatch, getState) => {\n\n\n    \n\n    await refreshTokens()\n    \n    const user_token = localStorage.getItem(\"user_token\")\n    const refresh_token = localStorage.getItem(\"refresh_token\")\n\n    console.log(\"user_token?\", Boolean(user_token))\n    console.log(\"refresh_token?\", Boolean(refresh_token))\n\n    if (user_token && refresh_token){\n        console.log(\"found both tokens\")\n        axios.get(\"/api/currentuser/user\", {\n            headers: {\n                Authorization: `Bearer ${localStorage.getItem(\"user_token\")}`\n            }\n        }).then(res => {\n            if(res.data.error){\n                throw new Error(res.data.error)\n            }\n            console.log(\"found user?\", res.data)\n            console.log(\"true? \", res.data.role === \"Admin\")\n            let payload = {loggedIn: true, loggedInUser: res.data, isAdmin: res.data.role == \"Admin\"}\n            dispatch({type: LOG_IN_STATUS, payload})\n        }).catch(err => {\n            console.log(\"error..\", err)\n            let payload = {loading: false, loggedInUser: {}}\n            dispatch({type: LOG_IN_STATUS, payload})\n\n            // const alert = {severity: \"error\", text: err.toString()}\n            // dispatch({type: SET_ALERT, payload: alert})\n        })\n    }\n    else {\n        console.log(\"no user logged in\")\n        let payload = {loggedIn: false, loggedInUser: {}, loading: false}\n        dispatch({type: LOG_IN_STATUS, payload})\n    }\n\n}\n\nexport const signOut = () => async (dispatch, getState) => {\n    // await refreshTokens()\n\n    if (localStorage.getItem(\"user_token\")) {\n        const token = localStorage.getItem(\"user_token\")\n        axios.post(\"/api/logout/accesstoken\", {}, {\n            headers: {\n                Authorization: `Bearer ${token}`\n            }\n        }).then(res => {\n            if (res.data.error) {\n                console.error(res.data.error)\n            } else {\n                localStorage.removeItem(\"user_token\")\n            }\n        })\n    }\n    if (localStorage.getItem(\"refresh_token\")) {\n        const refreshToken = localStorage.getItem(\"refresh_token\")\n        axios.post(\"/api/logout/refreshtoken\", {}, {\n            headers: {\n                Authorization: `Bearer ${refreshToken}`\n            }\n        }).then(res => {\n            if(res.data.error){\n                throw new Error(res.data.error)\n            } else {\n                localStorage.removeItem(\"refresh_token\")\n            }\n        })\n    }\n    localStorage.clear();\n\n    console.log(\"logging out...\")\n    const payload = {loggedIn: false, loggedInUser: {}}\n    dispatch({type: LOG_OUT, payload})\n\n}\n\nexport const refreshTokens = async () => {\n    const user_token = localStorage.getItem(\"user_token\")\n    try {\n        /* Will return error if token expire */\n        await axios.post(\"/api/token/expired\", {}, {\n            headers: {\n                Authorization: `Bearer ${user_token}`\n            }\n        }).then(res =>{\n            console.log(res.data)\n            return true\n        })\n    }\n    catch{\n        console.log(\"Expired. Use refresh\")\n        const refresh_token = localStorage.getItem(\"refresh_token\")\n        if (!refresh_token) {\n            localStorage.removeItem(\"user_token\")\n            return false;\n        }\n        await axios.post(\"/api/token/refresh\", {}, {\n            headers: {\n                Authorization: `Bearer ${refresh_token}`\n            }\n        }).then(res => {\n            console.log(\"NEW TOKEN\")\n            localStorage.setItem(\"user_token\", res.data.token)\n        })\n        return true;\n    }\n}\n","import { Box, makeStyles, withStyles } from \"@material-ui/core\";\n\n\nexport const siteWidth = \"750px\"\nexport const wideSiteWidth = \"1200px\"\n\nexport const wrappers = makeStyles(theme => ({\n    pageWrapper: {\n        marginLeft: \"100px\",\n        marginRight: \"200px\"\n    }\n  }));\n\nexport const PageWrapper = withStyles({\n    root: {\n        marginLeft: \"auto\",\n        marginRight: \"auto\",  \n        marginBottom: \"200px\", \n        maxWidth: siteWidth,\n        minWidth: siteWidth,\n        marginTop: \"50px\", \n        \n    }\n})(Box)\n\nexport const AdminNavbarWrapper = withStyles({\n    root: {\n        marginLeft: \"auto\",\n        marginRight: \"auto\",  \n        maxWidth: siteWidth,\n        minWidth: siteWidth,\n        marginTop: \"50px\", \n        \n    }\n})(Box)\n\nexport const WidePageWrapper = withStyles({\n    root: {\n        marginLeft: \"auto\",\n        marginRight: \"auto\",    \n        maxWidth: wideSiteWidth,\n        minWidth: wideSiteWidth,\n        marginTop: \"50px\", \n    }\n})(Box)\n\nexport const NavBarWrapper = withStyles({\n    root: {\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        maxWidth: siteWidth,\n        minWidth: siteWidth,\n        \n    }\n})(Box)\n","\nimport React, {useState} from \"react\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport  { Redirect, NavLink, Link, useHistory } from 'react-router-dom'\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport {AppBar, Menu, MenuItem} from '@material-ui/core'\nimport PersonIcon from '@material-ui/icons/Person';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { signOut } from '../../store/actions/authActions';\nimport { NavBarWrapper } from \"../../static/wrappers\";\n\n\nconst useStyles = makeStyles(theme => ({ \n    link: {\n        color: \"inherit\",\n        textDecoration: \"none\"\n    },\n\n    navlink: {\n        color: \"white\",\n        whiteSpace: \"nowrap\"\n    },\n    navbar: {\n        backgroundColor: theme.palette.primary.main,\n        color: \"white\",\n        textColor: \"white\",\n    }\n}));\n\n\n\nconst UserMenu  = (props) => {\n    const classes = useStyles()\n    const user = useSelector(state => state.authReducer.loggedInUser)\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const history = useHistory()\n    const dispatch = useDispatch();    \n\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n    \n    const logOut = () => {\n        console.log(\"out\")\n        dispatch(signOut())\n        handleClose();\n        history.push(\"/\")\n        window.location.reload();        \n    }\n\n    const handleMode = () => {\n        props.setDarkMode()\n    }\n    \n    if (user.username) {return(\n        <div>\n        <Button color=\"inherit\" aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n            <AccountCircleIcon />\n            \n            <div style={{marginLeft: \"5px\"}}> \n                {user.username}\n            </div>\n            <ExpandMoreIcon />\n        </Button>\n            <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n            <Link to={\"/userprofile/\"+user.username} className={classes.link}  >\n                <MenuItem onClick={handleClose}>\n                    <PersonIcon /> My Profile\n                </MenuItem>\n            </Link>\n            <MenuItem onClick={handleMode}>            \n                  <Brightness4Icon />\n                  Toggle Dark Mode\n            </MenuItem>\n\n            <MenuItem onClick={logOut}>\n                <ExitToAppIcon /> Logout\n                </MenuItem>\n      </Menu>\n\n\n        </div>\n    )}\n    else return (\n        <NavLink className={classes.navlink} to=\"/\"> Log in</NavLink>\n    )\n    \n}\n\nconst Navbar = props => {\n\n    const classes = useStyles();\n    const loggedIn = useSelector(state => state.authReducer.loggedIn)\n    const isAdmin = useSelector(state => state.authReducer.isAdmin)\n    \n\n    const history = useHistory()\n\n    return(\n\n        <AppBar position=\"static\" style={{}}>\n       \n\n        <NavBarWrapper className={classes.navbar}>\n                    <Toolbar style={{padding: 0}}>\n\n        <Link to=\"/\" className={classes.link}>  \n        <Typography variant=\"h6\" style={{flexGrow: 0}} onClick={() => history.push(\"/\")}>\n        TTK4145 Flashcards\n        </Typography>\n        </Link>\n\n\n        <List style={{textColor: \"white\", display: \"flex\", marginLeft: \"auto\"}}>\n            \n\n            {loggedIn ?  \n\n            <React.Fragment>\n                <ListItem>\n                    <NavLink className={classes.navlink}  to=\"/addcards\"> Add Cards</NavLink>\n                </ListItem>\n                <ListItem>\n                    <NavLink className={classes.navlink}  to=\"/peerreview\"> Peer Review</NavLink>\n                </ListItem>\n                <ListItem>\n                    <NavLink className={classes.navlink}  to=\"/study\"> Study </NavLink>\n                </ListItem>\n                {isAdmin ? \n                <ListItem>\n                    <NavLink className={classes.navlink}  to=\"/adminpage\"> Admin Page</NavLink>\n                </ListItem> : <div></div> }\n            </React.Fragment>\n            :\n            <div></div>\n            }\n\n        </List>      \n        <div style={{marginLeft: \"auto\"}}>\n            <UserMenu setDarkMode={props.setDarkMode}></UserMenu>\n            </div>\n        </Toolbar>\n        </NavBarWrapper>\n         </AppBar>\n    )\n}\n\nexport default Navbar","\nimport { SET_LOADING, STOP_LOADING } from '../actionTypes';\n\nconst initState = {\n    loading: false\n}\n\nconst loadingReducer = (state = initState, action) => {\n\n    switch(action.type){\n        case SET_LOADING:\n            console.log(\"laading\", action)\n            return {\n                loading: action.payload\n            }               \n        default:\n            console.log(\"default alert\")\n            return state\n    }\n}\n\nexport default loadingReducer","\nimport { CircularProgress, makeStyles } from '@material-ui/core/';\nimport { useSelector } from 'react-redux';\nimport loadingReducer from '../../store/reducers/loadingReducer';\n\nconst useStyles = makeStyles(theme => ({\n    loader: {\n        textAlign: \"center\"\n    }\n}))\n\n\nconst Loading = (props) => {\n    const classes = useStyles()\n    const loading = useSelector(state => state.loadingReducer.loading)\n\n    return (\n        <div style={props.style} className={classes.loader}>\n            {loading ?\n                <CircularProgress size={props.size ? props.size : 40} color={props.color ? props.color : \"secondary\"} /> \n            : props.alternative ? props.alternative : <div></div>} \n        </div>\n    )\n}\n\nexport default Loading","\n\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n];\n\n\nconst daysInWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n\n\n\n\nexport const dateJSONToString = date => {\n    console.log(\"ddatee\")\n    console.log(date)\n\n    let d = new Date(date)\n    try{\n        return `${daysInWeek[d.getDay()]}, ${monthNames[d.getMonth()]} ${d.getDate()}, ${d.getFullYear()} ${d.getHours()}:${(d.getMinutes()<10?'0':'') + d.getMinutes() } `\n    }\n    catch{\n        return \"Date error\"\n    }\n}   ","import { Box, CardActionArea, Divider, Grid, Typography } from '@material-ui/core';\nimport { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport loadingReducer from '../../store/reducers/loadingReducer';\nimport Loading from '../notifications/loading';\nimport { dateJSONToString } from '../../utils/datehandling';\nimport AddIcon from '@material-ui/icons/Add';\n\n\n\nconst GroupView = ({cardgroups, showDueDate, onClick}) => {\n\n    const loading = useSelector(state => state.loadingReducer.loading)   \n\n    if (loading){\n        return <Loading />\n    }\n    else {\n        return(\n            <div>\n                <Divider   /> \n                <Grid container spacing={0}>\n                    <Divider   /> \n\n                    {cardgroups.length ? \n                    cardgroups.map((cardgroup) => (\n                        <Grid item xs={12} key={cardgroup.id}> \n                            <CardActionArea onClick={() => onClick(cardgroup.id)} style={{padding: \"10px\", minHeight: \"100px\"}}>\n                                <Grid container spacing={2} >\n                                    <Grid item xs={1} alignItems=\"center\">\n                                        <AddIcon color=\"textprimary\" style={{marginTop: \"10px\"}} />\n                                    </Grid>\n\n\n                                    <Grid item xs={11}>                        \n                                        <Typography variant=\"subtitle1\" component=\"h2\">\n                                            Add flashcards to <i>{cardgroup.title}    </i> \n                                        </Typography>\n                                        {showDueDate ? \n                                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">\n                                                {cardgroup.numberOfCardsDue} cards are due: {dateJSONToString.call(this, cardgroup.dueDate)}     \n                                            </Typography> : <div></div>}\n                                    </Grid>\n                                </Grid>\n                            </CardActionArea> \n                            <Divider   /> \n                        </Grid>)) : <Typography variant=\"subtitle1\"> No groups</Typography> } \n                \n                </Grid>\n            </div>\n        )\n    }\n}\n\nexport default GroupView","\nimport axios from 'axios';\nimport { SET_ALERT, CREATE_CARDGROUP, SET_LOADING, LOAD_CARDGROUPS, DELETE_CARDGROUP, DELETE_CARDGROUP_ERROR, LOAD_CARDGROUP, EDIT_CARDGROUP } from '../actionTypes';\nimport { refreshTokens } from './authActions';\n\n\nexport const addCardgroup = (cardgroup) => async( dispatch, getState) => {\n    await refreshTokens()\n        \n    \n    console.log(\"c cardgroup\")\n    console.log(cardgroup)\n\n    axios.post(\"/api/admin/cardgroups\", {\n            title: cardgroup.title,\n            numberOfCardsDue: cardgroup.numberOfCardsDue,\n            dueDate: cardgroup.dueDate\n        }, {\n            headers: {\n                Authorization: \"Bearer \" + localStorage.getItem(\"user_token\")\n            }\n        })\n        .then(res => {\n            if(res.data.error){\n                throw new Error(res.data.error)\n            }\n            console.log(\"returned\")\n            console.log(res.data)\n       \n\n\n            const createdCardgroup = res.data\n            console.log(createdCardgroup.dueDate)\n\n            console.log(\"was created, \", createdCardgroup)\n            let alert = {severity: \"success\", text: \"successfully created cardgroup: \"+createdCardgroup.title}\n            dispatch({type: SET_ALERT, payload: alert})\n            dispatch({type: CREATE_CARDGROUP, payload: createdCardgroup})\n        })\n        .catch(err => {\n            console.log(\"This is an error yes plz\")\n            let alert = {severity: \"error\", text: err.toString()}\n            dispatch({type: SET_ALERT, payload: alert})\n            // dispatch({type: CREATE_CARDGROUP_ERROR, err})\n        })\n\n    console.log(\"async call up in hier\", cardgroup)\n    \n};\n\nexport const editCardgroup = (cardgroup) => async( dispatch, getState) => {\n    await refreshTokens()\n\n    console.log(\"we editing\")\n\n    axios.put(`/api/admin/cardgroups/${cardgroup.id}`, {\n            title: cardgroup.title,\n            numberOfCardsDue: cardgroup.numberOfCardsDue,\n            dueDate: cardgroup.dueDate\n        }, {\n            headers: {\n                Authorization: \"Bearer \" + localStorage.getItem(\"user_token\")\n            }\n        })\n        .then(res => {\n            if(res.data.error){\n                throw new Error(res.data.error)\n            }\n            console.log(\"returned\")\n            console.log(res.data)\n            \n\n            const editedCardgroup = res.data\n\n            let alert = {severity: \"success\", text: \"successfully edited cardgroup: \"+editedCardgroup.title}\n            dispatch({type: SET_ALERT, payload: alert})\n            dispatch({type: EDIT_CARDGROUP, payload: editedCardgroup})\n        })\n        .catch(err => {\n            console.log(\"This is an error yes plz\")\n            let alert = {severity: \"error\", text: err.toString()}\n            dispatch({type: SET_ALERT, payload: alert})\n            // dispatch({type: CREATE_CARDGROUP_ERROR, err})\n        })\n\n    console.log(\"async call up in hier\", cardgroup)\n    \n};\n\n\nexport const loadCardgroups = () => async (dispatch, getState) => {\n    dispatch({type: SET_LOADING, payload: true})\n    await refreshTokens()\n\n\n    await axios.get(\"/api/cardgroups\")\n    .then(res => {\n        if(res.data.error){\n            console.log(\"error\")\n            throw new Error(res.data.error)\n        }\n        const cardgroups = res.data\n        console.log(\"mah cardgroups\")\n        \n        console.log(cardgroups)\n        dispatch({type: LOAD_CARDGROUPS, payload: cardgroups})\n    })\n    .catch(err => console.log(err))\n\n    dispatch({type: SET_LOADING, payload: false})\n}\n\n\n\nexport const loadCardgroup = (groupId) => async (dispatch) => {\n    dispatch({type: SET_LOADING, payload: true})\n    await refreshTokens()\n\n    await axios.get(\"/api/cardgroups/\"+groupId)\n    .then(res => {\n        console.log(\"res,\", res)\n        if(res.data.error){\n            console.log(\"error\")\n            throw new Error(res.data.error)\n        }\n        const cardgroup = [res.data]\n        console.log(\"cardgroup found\")\n        \n        console.log(cardgroup)\n        dispatch({type: LOAD_CARDGROUP, payload: cardgroup})\n    })\n    .catch(err => {\n        let alert = {severity: \"error\", text: err.toString()}\n        dispatch({type: SET_ALERT, payload: alert})\n    })\n\n    dispatch({type: SET_LOADING, payload: false})\n\n}\n\nexport const deleteCardgroup = (cardgroup) => async (dispatch, getState) => {\n    await refreshTokens()\n    console.log(\"and action\")\n    console.log(cardgroup.id)\n\n    await axios.delete(\"/api/admin/cardgroups/\" + cardgroup.id, \n    {headers: { \n        Authorization: \"Bearer \" +localStorage.getItem(\"user_token\") \n    }}\n    ).then(res => {\n        console.log(\"to be deleted\")\n        if(res.data.error){\n            console.log(\"error\")\n            throw new Error(res.data.error)\n        }\n\n        let alert = {severity: \"success\", text: \"successfully deleted cardgroup: \"+cardgroup.title}\n        dispatch({type: SET_ALERT, payload: alert})\n        dispatch({type: DELETE_CARDGROUP, payload: cardgroup})        \n    })\n    .catch(err => {\n\n        let alert = {severity: \"error\", text: err.toString()}\n        dispatch({type: SET_ALERT, payload: alert})\n        // dispatch({type: DELETE_CARDGROUP_ERROR, payload: cardgroup}) \n    })\n\n}\n\n\n\n\n","import { Dialog } from \"@material-ui/core\";\n\n\n\nconst ConfirmDIalog = (props) =>  {\n    const { onClose, selectedValue, open } = props;\n\n    \n\n    const handleClose = () => {\n      onClose(selectedValue);\n    };\n  \n   \n    return (\n      <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n\n        <div>Are you sure??</div>\n        {/* <DialogTitle id=\"simple-dialog-title\">Set backup account</DialogTitle>\n        <List>\n          {emails.map((email) => (\n            <ListItem button onClick={() => handleListItemClick(email)} key={email}>\n              <ListItemAvatar>\n                <Avatar className={classes.avatar}>\n                  <PersonIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary={email} />\n            </ListItem>\n          ))}\n  \n          <ListItem autoFocus button onClick={() => handleListItemClick('addAccount')}>\n            <ListItemAvatar>\n              <Avatar>\n                <AddIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary=\"Add account\" />\n          </ListItem>\n        </List> */}\n      </Dialog>\n    );\n  }\n  \n  export default \n  ConfirmDIalog","\nimport { Button, \n    Grid, \n    TextField,\n    Dialog,\n    Typography,\n    makeStyles\n} from '@material-ui/core';\nimport DateFnsUtils from '@date-io/date-fns';\n\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n  } from '@material-ui/pickers';\n  \n\nimport React, { useState } from 'react';\n\n\nimport { addCardgroup, editCardgroup } from '../../store/actions/cardgroupActions';\nimport {  useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport ConfirmDialog from \"./confirmDialog\"\nimport { useSelector } from 'react-redux';\nimport { dateJSONToString } from '../../utils/datehandling';\nimport { setDate } from 'date-fns';\n\nconst useStyles = makeStyles(theme => ({\n    dialog: {\n        \"& .MuiDialog-paperScrollPaper\": {\n            maxHeight: \"100vh\",\n        },\n    }\n}))\n\nconst CreateCardGroup = ({ onClose, selectedValue, open, toeditCardgroup }) => {\n    const dispatch = useDispatch();    \n    \n    const [selectedDate, setSelectedDate] = React.useState(null);\n    const [title, setTitle] = useState(\"\");\n    const [numberOfCards, setNumberOfCards] = useState(null)\n    const [time, setTime] = useState(\"23:59\")\n    const formSubmitCallback = useSelector(state => state.alertReducer.severity)\n    const newStatus = useSelector(state => state.alertReducer.newAlert)\n\n    const classes = useStyles()\n\n    useEffect(() => {\n        console.log(\"starting\")\n        if(toeditCardgroup){\n            setTitle(toeditCardgroup.title)\n            setNumberOfCards(toeditCardgroup.numberOfCardsDue)\n            let d = new Date(toeditCardgroup.dueDate)\n            setSelectedDate(d)\n\n            setTime( d.getHours()+\":\"+d.getMinutes() )\n\n        }\n    }, [open])\n\n    // remove\n    console.log(selectedDate)\n\n    const handleDateChange = (date) => {\n      setSelectedDate(date);\n    };\n\n    useEffect(() => {\n        console.log(\"stformSubmitCallback\")\n        if (formSubmitCallback===\"success\"){\n            handleClose()\n        }\n\n    },[newStatus])\n\n    const submit = e => {\n\n        e.preventDefault()              \n        let dueDate = selectedDate\n\n        dueDate.setMinutes(time.split(\":\")[1])\n        dueDate.setHours(time.split(\":\")[0])\n\n\n\n        if (title && selectedDate && numberOfCards && time){\n\n\n            if (toeditCardgroup){\n                dispatch(editCardgroup({\n                    id: toeditCardgroup.id,\n                    title: title,        \n                    dueDate: dueDate,\n                    numberOfCardsDue: numberOfCards        \n                }))              \n    \n            } else {       \n\n                dispatch(addCardgroup({\n                    title: title,        \n                    dueDate: dueDate,\n                    numberOfCardsDue: numberOfCards        \n                }))              \n            }\n        }\n        else{\n            alert(\"Fill inn all fields\")\n        }\n    }\n\n\n    const handleClose = () => {\n        setSelectedDate(null)\n        setTitle(\"\")\n        setNumberOfCards(0)\n        setTime(\"23:59\")      \n        onClose(selectedValue);\n    };\n    \n    return (\n      <Dialog onClose={handleClose} \n        className={classes.dialog}\n\n       open={open} style={{ margin: \"100px\"}}>\n          <ConfirmDialog></ConfirmDialog>\n            \n            <div style={{margin: \"40px 40px\"}}> \n\n            <Grid container spacing={2}>\n                <Grid item xs={12} >\n                    <Typography variant=\"h6\" align=\"left\" > {toeditCardgroup ? \"Edit Cardgroup\" : \"New Cardgroup\" } </Typography>\n                </Grid>\n            </Grid>\n\n\n            <form onSubmit={submit} >\n            <Grid container spacing={2}>\n                <Grid item xs={12}>\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField \n                        color=\"secondary\"\n                        onChange={e => setTitle(e.target.value)} \n                        fullWidth \n                        required \n                        value={title}\n                        variant=\"outlined\" \n                        label=\"Cardgroup title\"/>\n                </Grid>\n\n                <Grid item xs={12}>\n                <TextField\n                    fullWidth\n                    color=\"secondary\"\n                    id=\"outlined-number\"\n                    label=\"Number of flashcards for delivery pr student\"\n                    type=\"number\"\n                    value={numberOfCards}\n                    required\n                    onChange={e => setNumberOfCards(e.target.value)} \n                    variant=\"outlined\"\n                />\n                </Grid>\n\n                <Grid item xs={6}>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <KeyboardDatePicker\n                        fullWidth\n                        disableToolbar         \n                        required    \n                        inputVariant=\"outlined\"           \n                        variant=\"outlined\"\n                        format=\"MM/dd/yyyy\"\n                        // margin=\"normal\"\n                        id=\"date-picker-inline\"\n                        label=\"Due date for delivery\"\n                        value={selectedDate}\n                        \n                        onChange={handleDateChange}\n                        onClick={console.log(\"close\")}\n                        color=\"secondary\"\n                        autoOk\n                        animateYearScrolling\n                        KeyboardButtonProps={{\n                            'aria-label': 'change date',\n                        }}\n                        />                 \n                </MuiPickersUtilsProvider>                   \n\n                    </Grid>\n                    <Grid item xs={6} >\n\n                    <TextField\n                            fullWidth\n                            id=\"time\"\n                            label=\"\"\n                            type=\"time\"\n                            variant=\"outlined\"\n                            onChange = {e => setTime(e.target.value)}\n                            value={time}\n                            defaultValue=\"23:59\"\n                            color=\"secondary\"\n                            InputLabelProps={{\n                                shrink: true,\n                                }}\n                            // inputProps={{\n                            //     step: 1440, // 5 min\n                            // }}\n                          />\n                    </Grid>\n\n\n               \n\n                \n                <Grid item xs={6}>\n                    <Button variant=\"contained\" onClick={handleClose} fullWidth color=\"primary\"  > Back</Button>\n                </Grid>\n                <Grid item xs={6}>\n                    <Button type=\"submit\" fullWidth style={{backgroundColor: selectedDate && title && numberOfCards ? \"green\" : \"grey\", color: \"white\"}}>{toeditCardgroup ? \"Submit Edit\" : \"Submit\"}</Button>\n                </Grid>\n\n                </Grid>\n                </form>\n\n\n                </div>\n      </Dialog>\n    );\n}\n  \nexport default CreateCardGroup\n\n","import { LOG_IN_CALLBACK, LOG_IN_STATUS, LOG_OUT } from \"../actionTypes\"\n\n\n\nconst initState = {\n    loggedIn: false,\n    loggedInUser: {},\n    isAdmin: false\n}\n\nconst authReducer = (state = initState, action) => {\n\n    switch(action.type){\n        case LOG_IN_CALLBACK:\n            console.log(\"successfull login callback\")\n            return {\n                ...state, \n                loggedIn: action.payload.loggedIn,\n                isAdmin: action.payload.isAdmin\n            }\n        \n        case LOG_OUT:\n            console.log(\"logging out\")\n\n            console.log(action.payload)\n\n            return {\n                ...state,\n                loggedIn: action.payload.loggedIn,\n                loggedInUser: action.payload.loggedInUser\n            }\n        case LOG_IN_STATUS:\n            console.log(\"fetching status\")\n            console.log(action.payload)\n            return {\n                ...state,\n                loggedIn: action.payload.loggedIn,\n                loggedInUser: action.payload.loggedInUser,\n                isAdmin: action.payload.isAdmin\n            }\n            \n\n        default:\n            console.log(\"default auth\")\n            return state\n    }\n}\n\nexport default authReducer","import React, { useEffect } from \"react\"\nimport { useDispatch, useSelector } from 'react-redux';\nimport GroupView from \"../submodules/groupview\";\nimport { loadCardgroups } from \"../../store/actions/cardgroupActions\";\nimport {Typography, Button, Grid, makeStyles} from '@material-ui/core';\nimport {PageWrapper} from \"../../static/wrappers\"\nimport CreateCardGroup from \"../dialogs/createCardGroup\";\nimport { adminOnly } from \"../../store/actions/authActions\";\nimport authReducer from '../../store/reducers/authReducer';\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n    addButton: {\n        backgroundColor: theme.palette.button.success.main,\n        color: \"white\",\n        border: \"none\",\n        align: \"center\",\n        '&:hover': {\n            background: theme.palette.button.success.dark,\n          }\n\n    }\n}))\n\n\n\nconst AddCards = () => {\n\n    const classes = useStyles()\n    const dispatch = useDispatch();\n   \n    const cardgroups = useSelector(state => state.cardgroupReducer.cardgroups)\n    const isAdmin = useSelector(state => state.authReducer.isAdmin)\n\n    useEffect(() => {\n        dispatch(loadCardgroups())\n    }, [dispatch])   \n\n    useEffect(() => {\n        console.log(\"cardgroups changed...\")\n    }, [cardgroups])   \n\n    const [open, setOpen] = React.useState(false);\n    // const [selectedValue, setSelectedValue] = React.useState(emails[1]);\n  \n    const handleClickOpen = () => {\n      setOpen(true);\n    };\n  \n    const handleClose = (value) => {\n      setOpen(false);\n    };\n\n    const history = useHistory() \n    const handleRedirectToGroup = groupId => {\n        history.push(\"/cardgroup/\" +groupId)\n    }\n\n\n\n\n    return (\n        // <div style={{maxWidth: \"600px\", marginTop: \"65px\", marginLeft: \"auto\", marginRight: \"auto\"}}>\n        <PageWrapper>   \n        {/* <img src=\"../../static/download.jpeg\"  width=\"500\" height=\"600\" /> */}\n\n\n        <Grid container spacing={2}>\n            <Grid item xs={8}  >\n                <Typography variant=\"h4\" gutterBottom >\n                    Add Flashcards to Cardgroups    \n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                    Each cardgroup has a set number of cards to submit and a duedate.\n                    </Typography>\n            </Grid>\n            <Grid item xs={4}>\n                {isAdmin ?                 \n                <Button fullWidth className={classes.addButton} variant=\"outlined\" onClick={handleClickOpen}>\n                    + Create group\n                </Button> :\n                <div></div>}\n            </Grid> \n            <Grid item xs={12}>\n                <GroupView cardgroups={cardgroups} showDueDate onClick={handleRedirectToGroup}/>\n            </Grid> \n        </Grid>\n    \n        \n    <CreateCardGroup open={open} onClose={handleClose}  />\n    </PageWrapper>\n        \n    )\n}\n\nexport default AddCards","import React, { useState} from \"react\"\nimport  { Redirect } from 'react-router-dom'\nimport TextField from '@material-ui/core/TextField';\nimport axios from \"axios\";\nimport { Button, Icon, Link } from \"@material-ui/core\";\nimport { styled } from '@material-ui/core/styles';\nimport { useDispatch  } from 'react-redux';\nimport { PageWrapper } from \"../../static/wrappers\";\nimport { CLEAR_LOADING, SET_ALERT, SET_LOADING } from \"../../store/actionTypes\";\nimport Loading from \"../notifications/loading\";\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\n\n\nconst StyledLink = styled(Link)({\n  color: \"black\",\n  padding: \"20px\"    \n})\n\nconst ManualLogin = () => {\n  \n  const [username, setUsername] = useState(\"\")\n  const [email, setEmail] = useState(\"\")\n  const [name, setName] = useState(\"\")\n  const dispatch = useDispatch()\n  const [manualredirect, setManualredirect] = useState(false)\n\n\n  const manualLogin = e =>{\n    e.preventDefault()\n    if (username && email && name){\n      let data = {\n        username: username,\n        email: email,\n        name: name\n      }      \n\n      var url = '/api/login/userdata';\n      fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(data),\n        credentials: 'include',   // this line has been added for sessions \n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n      .then(response => response.json())\n      .then((data) => {\n        console.log(data);\n        if (data.status === \"success\"){\n          console.log(\"redirecting\")\n          setManualredirect(true)\n        } else {\n          throw(data.error) \n        }\n      })\n      .catch(err => {\n        let alert = {severity: \"error\", text: err}\n        dispatch({type: SET_ALERT, payload: alert}) \n  \n      })\n    } else {\n      let alert = {severity: \"error\", text: \"Missing credentials for login\"}\n      dispatch({type: SET_ALERT, payload: alert}) \n    }\n\n  }\n\n  if (manualredirect) {\n    return( \n      <Redirect to={{\n        pathname: \"/loginfunc\"\n      }}/>  \n    )\n  }\n  else {\n    return(\n      <div> \n          <div style={{marginBottom: 0, marginTop: \"50px\",}}> \n            <h3 style={{fontSize: \"14px\", color: \"#666\", display: \"inline\", padding: \"12px\"}}>ALTERNATIVE LOGIN - JUST FOR TESTING</h3> \n          </div>\n          <form onSubmit={manualLogin}>\n            <TextField  label=\"username\" onChange={e => setUsername(e.target.value)} required />  <br />\n            <TextField  label=\"name\" onChange={e => setName(e.target.value)} required/> <br />\n            <TextField  label=\"email\" onChange={e => setEmail(e.target.value)} required/> <br />\n            <Button  variant=\"contained\"  style={{margin: \"30px\"}} type=\"submit\">Manual Login (for testing)</Button>\n          </form> \n        </div>\n    )\n  }\n}\n\nfunction Login() {\n\n  const [AlternativeLogin, setAlternativeLogin] = useState(false)\n  const dispatch = useDispatch()\n  let loading = false;\n  const feideLogin = async () => {    \n    dispatch({type: SET_LOADING, payload: true}) \n    await axios.get(\"/api/login/url \", { withCredentials: true })\n    .then(res => {\n      window.open(res.data.url, \"_self\")\n    })  \n    .catch(err => {\n      console.log(\"err\", err)\n      let alert = {severity: \"error\", text: \"External login failed\"}\n      dispatch({type: SET_ALERT, payload: alert}) \n    })\n    dispatch({type: SET_LOADING, payload: false}) \n  } \n\n\n\n  \n    return (\n    <PageWrapper style={{textAlign: \"center\", marginTop: \"15%\"}}>\n\n      <Button color=\"primary\" variant=\"contained\" onClick={feideLogin} style={{width: \"300px\", height: \"80px\"}}>\n        Log in with Feide<Loading style={{marginLeft: \"10px\", height: \"26px\", }} size={24} alternative={<VpnKeyIcon />} /> \n      </Button> <br/>\n      <div style={{padding: \"10px\"}}> \n        <StyledLink href=\"#\" onClick={e => setAlternativeLogin(!AlternativeLogin)}>Alternative login</StyledLink>\n        <StyledLink  target=\"_blank\" href=\"https://s.ntnu.no/glemt\" >Forgot Password</StyledLink>        \n      </div>\n\n      {AlternativeLogin ? \n        <ManualLogin />\n      : <div> </div>}\n    </PageWrapper>     \n  );\n\n}\n\nexport default Login;\n","import { GET_USERS, GET_DELIVERY_STATUS, UPDATE_USER } from \"../actionTypes\"\n\n\n\nconst initState = {\n    users: [],\n    status: []\n}\n\nconst userReducer = (state = initState, action) => {\n\n    switch(action.type){\n        case GET_USERS:\n            console.log(\"successfull get users\")\n            return {\n                ...state, \n                users: action.payload\n            }   \n        case GET_DELIVERY_STATUS:\n            console.log(\"successfull get status\")\n            return{\n                ...state,\n                status: action.payload\n            }\n\n        case UPDATE_USER:\n            console.log(\"updated user\")\n            return{\n                ...state,\n                users: state.users.map(user => {\n                    if (user.id == action.payload.id ) {\n                        return action.payload;\n                    } else {\n                        return user;\n                    }\n                })\n            }\n            \n        default:\n            console.log(\"default auth\")\n            return state\n    }\n}\n\nexport default userReducer","\nimport axios from 'axios';\nimport { GET_DELIVERY_STATUS, GET_USERS, SET_ALERT, SET_LOADING , UPDATE_USER} from '../actionTypes';\nimport { refreshTokens } from './authActions';\n\nexport const getAllUsers = () => async (dispatch) => {\n    await refreshTokens()\n    axios.get(\"/api/admin/users\", {\n        headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"user_token\")}`\n        }\n    })\n        .then(res => {\n            if(res.data.error){\n                throw new Error(res.data.error)\n            }\n            console.log(\"res data alll\", res.data)\n            dispatch({type: GET_USERS, payload: res.data})\n        })\n        .catch(err => {\n            console.log(\"Error in get users\", err)\n            const alert = {severity: \"error\", text: err.toString()}\n            dispatch({type: SET_ALERT, payload: alert})\n        })\n}\n\nexport const getUsersWithRole = (role) => async (dispatch) => {\n    await refreshTokens()\n    axios.get(\"/api/admin/users/role=\"+role, {\n        headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"user_token\")}`\n        }\n    })\n        .then(res => {\n            if(res.data.error){\n                throw new Error(res.data.error)\n            }\n            console.log(\"res data role =\"+role, res.data)\n            dispatch({type: GET_USERS, payload: res.data})\n        })\n        .catch(err => {\n            console.log(\"Error in get users\", err)\n            const alert = {severity: \"error\", text: err.toString()}\n            dispatch({type: SET_ALERT, payload: alert})\n        })\n}\n\nexport const searchUsers = (role, searchPhrase, ) => async (dispatch) => {\n    await refreshTokens()\n    await axios.get(`/api/admin/users/search/role=${role}/q=${searchPhrase}`, {\n        headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"user_token\")}`\n        }\n    })\n        .then(res => {\n            if(res.data.error){\n                throw new Error(res.data.error)\n            }\n            console.log(\"res data\", res.data)\n            dispatch({type: GET_USERS, payload: res.data})\n        })\n        .catch(err => {\n            console.log(\"Error in get users\", err)\n            const alert = {severity: \"error\", text: err.toString()}\n            dispatch({type: SET_ALERT, payload: alert})\n        })\n}\n\n\nexport const getUsersStatus = (cardgroupId) => async (dispatch, getState) => {\n    \n\n\n    if (!cardgroupId){\n        dispatch({type: GET_DELIVERY_STATUS, payload: []})\n    }\n    else {\n\n        dispatch({type: SET_LOADING, payload: true})\n        await refreshTokens()\n        await axios.get(`/api/admin/cardgroup/${cardgroupId}/deliverystatus`, {\n            headers: {\n                Authorization: `Bearer ${localStorage.getItem(\"user_token\")}`\n            }\n        })\n        .then(res => {\n            if(res.data.error){\n                console.log(\"error\")\n                throw new Error(res.data.error)\n            }\n            const status = res.data\n            console.log(\"mah status\")\n            console.log(status)\n            dispatch({type: GET_DELIVERY_STATUS, payload: status})\n        })\n        .catch(err => console.log(err))\n        dispatch({type: SET_LOADING, payload: false})\n    }\n\n}\n\n\nexport const addAdmin = (user) => async (dispatch, getState) => {\n    dispatch({type: SET_LOADING, payload: true})   \n    await refreshTokens()\n    axios.post(\"/api/admin/\"+user.id, {}, {\n        headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"user_token\")}`\n        }\n    })\n    .then(res => {\n        if(res.data.error){\n            console.log(\"error\")\n            throw new Error(res.data.error)\n        }\n        const updatedUser = res.data\n        dispatch({type: UPDATE_USER, payload: updatedUser})\n    })\n    .catch(err => console.log(err))\n\n    dispatch({type: SET_LOADING, payload: false})\n}\n\nexport const removeAdmin = (user) => async (dispatch, getState) => {\n    dispatch({type: SET_LOADING, payload: true})   \n    await refreshTokens()\n    axios.delete(\"/api/admin/\"+user.id, {\n        headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"user_token\")}`\n        }\n    })\n    .then(res => {\n        if(res.data.error){\n            console.log(\"error\")\n            throw new Error(res.data.error)\n        }\n        const updatedUser = res.data\n        dispatch({type: UPDATE_USER, payload: updatedUser})\n    })\n    .catch(err => console.log(err))\n\n    dispatch({type: SET_LOADING, payload: false})\n}\n\n\n","\nimport axios from 'axios';\nimport { SET_ALERT, CREATE_CARD, DELETE_CARD, DELETE_CARD_ERROR, LOAD_CARDS, LOAD_CARD, SET_LOADING, CLEAR_CARDS } from '../actionTypes';\nimport { refreshTokens } from './authActions';\n\nexport const addCard = (card) => async( dispatch, getState) => {\n    await refreshTokens()\n    \n    axios.post(\"/api/currentuser/flashcards\", {\n            front: card.front,\n            back: card.back,\n            cardgroupid: card.cardgroupid\n        }, {\n            headers: {\n                Authorization: \"Bearer \" + localStorage.getItem(\"user_token\")\n            }\n        })\n        .then(res => {\n            console.log(\"returned\")\n            console.log(res.data)\n            if(res.data.error){\n                console.log(\"error\")\n                throw new Error(res.data.error)\n            }\n\n            const createdCard = res.data\n            dispatch({type: CREATE_CARD, payload: createdCard})\n            let alert = {severity: \"success\", text: \"successfully created card\"}\n            dispatch({type: SET_ALERT, payload: alert})\n        })\n        .catch(err => {\n            console.log(\"This is an error yes plz\")\n            console.log(err.toString())\n            let alert = {severity: \"error\", text: err.toString()}\n            dispatch({type: SET_ALERT, payload: alert})\n        })\n\n    console.log(\"async call up in hier\", card)\n    \n};\n\nexport const editCard = (card) => async( dispatch, getState) => {\n    await refreshTokens()\n    console.log(\"carddd\", card)\n    \n    axios.put(\"/api/currentuser/flashcards/\"+card.id, {\n            front: card.front,\n            back: card.back,\n            // cardgroupid: card.cardgroupid\n\n        }, {\n            headers: {\n                Authorization: \"Bearer \" + localStorage.getItem(\"user_token\")\n            }\n        })\n        .then(res => {\n            console.log(\"returned\")\n            console.log(res.data)\n            if(res.data.error){\n                console.log(\"error\")\n                throw new Error(res.data.error)\n            }\n            const changedCard = res.data\n            dispatch({type: DELETE_CARD, payload: card})\n            dispatch({type: CREATE_CARD, payload: changedCard})\n\n            let alert = {severity: \"success\", text: \"successfully changed card\"}\n            dispatch({type: SET_ALERT, payload: alert})\n        })\n        .catch(err => {\n            console.log(\"This is an error yes plz\")\n            console.log(err.toString())\n            let alert = {severity: \"error\", text: err.toString()}\n            dispatch({type: SET_ALERT, payload: alert})\n        })\n\n    console.log(\"async call up in hier\", card)\n    \n};\n\nexport const loadCardGroupUserFlashcards = (cardgroupId) => async dispatch => {\n    dispatch({type: SET_LOADING, payload: true})\n    await refreshTokens()\n    console.log(\"cardgroupid\", cardgroupId)\n\n    await axios.get(`/api/currentuser/flashcards/cardgroupid=${cardgroupId}`,\n        {\n            headers: {\n                Authorization: `Bearer ${localStorage.getItem(\"user_token\")}`\n            }\n        })\n        .then(res => {\n            if(res.data.error){\n                throw new Error(res.data.error)\n            }\n            const cards = res.data\n            console.log(\"lmlmlml\")\n            console.log(cards)\n            dispatch({type: LOAD_CARDS, payload: cards})\n        })\n        .catch(err => console.log(err))\n\n\n    dispatch({type: SET_LOADING, payload: false})\n}\n\n// export const loadCards = props => async (dispatch, getState) => {\n//     dispatch({type: SET_LOADING, payload: true})\n//     await refreshTokens()\n\n\n//     await axios.get(\"/api/flashcards\")\n//     .then(res => {\n//         if(res.data.error){\n//             throw new Error(res.data.error)\n//         }\n//         const cards = res.data\n//         console.log(\"mah cah\")\n//         console.log(cards)\n//         dispatch({type: LOAD_CARDS, payload: cards})\n//     })\n//     .catch(err => {\n//         let alert = {severity: \"error\", text: err.toString() + \" when attempting to get card\"}\n//         dispatch({type: SET_ALERT, payload: alert})  \n//     })\n\n//     dispatch({type: SET_LOADING, payload: false})\n\n// }\n\nexport const loadCardgroupFlashcards = (cardgroupId) => async (dispatch, getState) => {\n    dispatch({type: SET_LOADING, payload: true})\n\n\n\n    console.log(\"idd\",cardgroupId)\n\n    if (!cardgroupId){\n        dispatch({type: LOAD_CARDS, payload: []})\n    } else {\n\n        await refreshTokens()\n        await axios.get(`/api/admin/cardgroup/${cardgroupId}/flashcards`,\n        {\n            headers: {\n                Authorization: `Bearer ${localStorage.getItem(\"user_token\")}`\n            }\n        })\n        .then(response => {\n            const cards = response.data\n            console.log(\"lmlmlml\")\n            console.log(cards)\n            dispatch({type: LOAD_CARDS, payload: cards})\n        })\n        .catch(err => {\n            let alert = {severity: \"error\", text: err.toString() + \" when attempting to get card\"}\n            dispatch({type: SET_ALERT, payload: alert})  \n        })\n    }\n    dispatch({type: SET_LOADING, payload: false})\n\n\n}\n\nexport const loadPeerReviewFlashcards = (peerreviewid) => async (dispatch, getState) => {\n    dispatch({type: SET_LOADING, payload: true})\n    await refreshTokens()\n\n\n    await axios.get(`/api/peerreview/${peerreviewid}/flashcards`,\n    {headers: { \n        Authorization: \"Bearer \" +localStorage.getItem(\"user_token\") \n    }}\n    ).then(response => {\n        const cards = response.data\n        console.log(\"lmlmlml\")\n        console.log(cards)\n        dispatch({type: LOAD_CARDS, payload: cards})\n    })\n    .catch(err => {\n        let alert = {severity: \"error\", text: err.toString() + \" when attempting to get card\"}\n        dispatch({type: SET_ALERT, payload: alert})  \n    })\n\n    dispatch({type: SET_LOADING, payload: false})\n\n}\n\n\n\nexport const clearCardReducer = () => async (dispatch) => {\n\n\n    console.log(\"alert tthh\")\n    dispatch({type: CLEAR_CARDS})\n}\n\n\nexport const deleteCard = (card) => async (dispatch, getState) => {\n    await refreshTokens()\n\n    console.log(\"del,\", card)\n\n    await axios.delete(`/api/currentuser/flashcards/${card.id}`,\n    {headers: { \n        Authorization: \"Bearer \" +localStorage.getItem(\"user_token\") \n    }}\n    ).then(res => {\n        console.log(res.data)\n        if(res.data.error){\n            throw new Error(res.data.error)\n        }\n        let alert = {severity: \"success\", text: \"successfully deleted card\"}\n        dispatch({type: SET_ALERT, payload: alert})  \n        dispatch({type: DELETE_CARD, payload: card})        \n    })\n    .catch(err => {\n        let alert = {severity: \"error\", text: err.toString() + \" when attempting to delete card\"}\n        dispatch({type: SET_ALERT, payload: alert})  \n        dispatch({type: DELETE_CARD_ERROR, payload: card}) \n    })\n\n}\n\n\n\n\n","import React, {useEffect} from \"react\"\nimport { FormControl, InputLabel, Select, makeStyles, MenuItem } from \"@material-ui/core\"\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { loadCards } from \"../../store/actions/cardActions\";\nimport { loadCardgroups } from \"../../store/actions/cardgroupActions\";\n\n\n\n\n\n\nconst CardgroupSelect = props => {\n\n    \n\n    const cardgroups = useSelector(state => state.cardgroupReducer.cardgroups)\n    \n    const dispatch = useDispatch();\n\n    // console.log(\"is token?\", localStorage.getItem(\"user_token\"))\n\n    useEffect(() => {\n        dispatch(loadCardgroups())\n    }, [])   \n\n\n\n    let cardgroupMenuitems = []\n\n    cardgroups.map((cardgroup, index) => (\n\n        cardgroupMenuitems[index] = <MenuItem key={index} value={cardgroup.id}>{cardgroup.title} </MenuItem>\n            \n    ))\n  \n    const [group, setGroup] = React.useState('');\n    \n    useEffect(() => {\n      if(props.showFirst && cardgroups.length){\n\n        setGroup(cardgroups[0].id)\n        if (props.onChange){\n          props.onChange(cardgroups[0].id)\n        }\n  \n      }\n    }, [cardgroups])\n    \n\n    const handleChange = (event) => {\n      // console.log(\"evt\", event.target.value)\n      setGroup(event.target.value);\n      if (props.onChange){\n        props.onChange(event.target.value)\n      }\n    };\n  \n\n    return(\n        <FormControl fullWidth variant=\"outlined\" >\n            <InputLabel id=\"demo-simple-select-outlined-label\">Choose Cardgroup</InputLabel>\n            <Select\n            required\n            color=\"secondary\"\n            labelId=\"demo-simple-select-outlined-label\"\n            id=\"demo-simple-select-outlined\"\n            value={group}\n            onChange={handleChange}\n            label=\"group\"\n            >\n            \n            {cardgroupMenuitems.length ? cardgroupMenuitems : <MenuItem value=\"\">\n                <em>No groups exists</em>\n            </MenuItem> }\n\n            </Select>\n      </FormControl>\n    )\n\n}\n\nexport default CardgroupSelect","import { Divider, Grid, Typography, Button } from \"@material-ui/core\"\nimport { useState } from 'react';\n\nimport DOMPurify from 'dompurify';\n\n\nconst FlashcardStudy = ({flashcard, style, revealback}) => {\n    \n    const [reveal, setReveal] = useState(revealback)\n\n    return (\n        <div style={style}>\n            <Grid container spacing={0} >\n                <Grid item xs={12}  style={{textAlign: \"center\", minHeight: \"100px\", minWidth: \"300px\"}}>\n                <Typography variant=\"caption\" color=\"textSecondary\">\n                        Front:\n                    </Typography>\n                    <Typography variant=\"body2\" style={{marginTop: \"auto\", overflow: \"hidden\"}}>\n                        <div dangerouslySetInnerHTML={{__html: DOMPurify.sanitize(flashcard.front)}} />\n                    </Typography>\n                </Grid>\n                <Grid item xs={12}  >\n                    <Divider /> \n                </Grid>\n                <Grid item xs={12} style={{textAlign: \"center\", minHeight: \"100px\", minWidth: \"300px\"}}>\n\n                   \n                    {reveal ? \n                     <div>\n                        <Typography variant=\"caption\" color=\"textSecondary\">\n                            Back:\n                        </Typography>\n                        <Typography variant=\"body2\">\n                            <div dangerouslySetInnerHTML={{__html: DOMPurify.sanitize(flashcard.back)}} />\n                        </Typography>\n                    </div>\n                    :\n                    <Button variant=\"contained\" color=\"primary\" style={{marginTop: \"25px\"}} onClick={() => setReveal(true)}> \n                        Show Answer\n                    </Button>}\n                </Grid>\n            </Grid>\n        </div>\n    )\n\n}\n\nexport default FlashcardStudy","import { IconButton, Dialog, Divider, makeStyles, Tooltip, Typography } from \"@material-ui/core\"\nimport FlashcardStudy from \"../submodules/flashcardStudy\";\nimport CloseIcon from '@material-ui/icons/Close';\n\n\nconst useStyles = makeStyles(theme => ({\n    dialog: {\n        \"& .MuiDialog-paperScrollPaper\": {\n            maxHeight: \"100vh\",\n        },\n    },\n   \n    customizedButton: {\n        position: \"absolute\",\n        left: \"80%\",\n        top: \"5%\"\n\n\n    }\n    \n}))\n\n\nconst CardPreviewDialog = ({card, onClose, open, selectedValue}) => {\n\n    const handleClose = () => {\n        onClose(selectedValue);\n    };\n\n    const classes = useStyles()\n\n\n    return(\n        <Dialog onClose={handleClose} \n        className={classes.dialog}\n       open={open} \n       >    \n       <div >\n\n                <Tooltip title=\"Close\" placement=\"left\">\n                    <IconButton  onClick={handleClose} className={classes.customizedButton}   > \n                        <CloseIcon />\n                    </IconButton>\n                </Tooltip>\n\n                {/* <Typography variant=\"h4\" align=\"center\">Flashcard Preview </Typography>  */}\n                <FlashcardStudy flashcard={card} style={{margin: \"30px\"}} />\n\n            </div>    \n        </Dialog>\n\n    )\n}\n\nexport default CardPreviewDialog","import { useRef } from \"react\"\nimport { TextField } from '@material-ui/core';\n\n\n\nconst HTMLTextField = ({onChange, value, InputProps, fullWidth, required, multiline, rows, label}) =>{\n\n\n\n    const inputRef = useRef()\n\n    const addTabs = e => {\n        console.log(e.key)\n        if (e.key === \"Tab\"){\n            e.preventDefault()\n            console.log(inputRef)\n\n            const { selectionStart, selectionEnd } = e.target\n\n            const tab = \"\\t\"\n\n            const newValue =\n              value.substring(0, selectionStart) +\n              tab+\n              value.substring(selectionEnd)\n\n            // setHTMLString(newHTMLString)\n            \n            inputRef.current.value = newValue\n            onChange(newValue)\n\n            inputRef.current.selectionStart = inputRef.current.selectionEnd = selectionStart+tab.length\n        }\n    }\n\n    return(\n        <TextField\n        // onKeyDown={addTabs}\n        inputRef={inputRef}\n\n        onKeyDown={addTabs}\n    \n        onChange={e => onChange(e.target.value)} \n        fullWidth={fullWidth}\n        required={required}\n        multiline={multiline}\n        rows={rows}\n        label={label}\n        variant=\"outlined\"\n        color=\"secondary\"\n        value={value}\n        InputProps={InputProps}\n        \n        />\n\n    )  \n\n\n}\n\nexport default HTMLTextField\n","\nimport { Button, \n    Grid, \n    TextField,\n    Dialog,\n    Typography,\n    makeStyles,\n    Input,\n    InputAdornment,\n    IconButton,\n    Tooltip\n} from '@material-ui/core';\nimport React, { useState, useEffect } from 'react';\n\nimport {  useDispatch } from 'react-redux';\nimport { addCard, editCard } from '../../store/actions/cardActions';\nimport UploadImage from '../submodules/uploadImage';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport { Link } from 'react-router-dom';\nimport HTMLTextField from '../submodules/HTMLTextField';\nimport FlashcardStudy from '../submodules/flashcardStudy';\nimport { Box } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n    dialog: {\n        \"& .MuiDialog-paperScrollPaper\": {\n            maxHeight: \"100vh\",\n        },\n    },\n}))\n\nconst CreateCardDialog = (props) => {\n    const { onClose, selectedValue, open } = props;\n    const dispatch = useDispatch();    \n    const classes = useStyles()\n    const cardgroupId = props.cardgroupId\n\n    const [front, setFront] = useState(\"\")\n    const [back, setBack] = useState(\"\")\n    const [preview, setPreview] = useState(false)\n\n    useEffect(() => {\n        if (props.card){\n            console.log(\"cccc\", props.card)\n            setFront(props.card.front)\n            setBack(props.card.back)\n        }\n    }, [props.card])\n   \n    const submit = e => {\n        e.preventDefault()\n              \n        if (front && back && (cardgroupId || props.card.id)){\n            if (props.card){\n                dispatch(editCard({\n                    front: front,\n                    back: back,\n                    id: props.card.id\n                }))\n            }               \n            else{\n                dispatch(addCard({\n                    front: front,\n                    back: back,\n                    cardgroupid: cardgroupId\n                }))\n            }\n            setFront(\"\")\n            setBack(\"\")\n            handleClose()\n            \n        }\n        else{\n            alert(\"fill inn all fields\")\n            console.log(front, back, cardgroupId)\n        }\n    }\n\n    const handleClose = () => {\n        setPreview(false)\n        onClose(selectedValue);\n    };\n  \n  \n    return (\n      <Dialog onClose={handleClose} \n        className={classes.dialog}\n\n       open={open} >\n\n        <form onSubmit={submit} style={{margin: \"40px\"}}>\n            <Grid container spacing={2}>\n                <Grid item xs={12}>\n\n                    <Typography variant=\"h5\"> {props.card ? \"Edit Flashcard\" : \"Create a flashcard. This can be edited later\"} </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\"> You can write either pure text or use HTML. <Link  to=\"/htmlguide\" target=\"_blank\">HTML Guide</Link> \n                    <br/>\n                    Make sure the Card looks good in <i>Preview Flashcard</i> if writing in HTML.\n                     </Typography>\n                </Grid>\n                {/* <Grid item xs={12}>\n                    <CardgroupSelect onChange={e => setCardgroupid(e)} />\n                </Grid> */}\n                <Grid item xs={12}>\n                \n                <HTMLTextField \n                    onChange={setFront} \n                    value={front} \n                    label=\"Front (question)\"\n                    fullWidth \n                    required\n                    multiline\n                    rows={7}\n                />\n{/* \n                <TextField\n                    onChange={e => setFront(e.target.value)} \n                    fullWidth \n                    required\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    label=\"Front\"\n                    value={front}\n                    // InputProps={{\n                    //     endAdornment: <InputAdornment position=\"end\" style={{margin: \"auto 0 15px\"}}>\n                    //         <div>\n                    //             <Tooltip title=\"Preview HTML\">\n                    //                 <IconButton onClick={() => setPreviewFront(true)}>\n                    //                     <VisibilityIcon color=\"secondary\" />\n                    //                 </IconButton>\n                    //             </Tooltip>\n                    //         </div>\n                    //     </InputAdornment>,\n                    // }}\n                    multiline\n                    rows={4}\n                    /> */}\n                </Grid>\n                <Grid item xs={12}>\n                    {/* <TextField \n                        onChange={e => setBack(e.target.value)}\n                        id=\"asd\"\n                        label=\"Back\"\n                        color=\"secondary\"\n                        multiline\n                        rows={4}\n                        defaultValue=\"\"\n                        value={back}\n                        fullWidth\n                        required\n                        variant=\"outlined\"\n                    /> */}\n                    <HTMLTextField \n                        onChange={setBack}\n                        label=\"Back (answer)\"\n                        multiline\n                        rows={7}\n                        value={back}\n                        fullWidth\n                        required\n                    />\n                </Grid>\n                \n                <Grid item xs={12} style={{textAlign: \"center\"}}>\n                    {preview ?                     \n                    <Box border={1} borderColor=\"secondary.light\" borderRadius={5} align=\"center\" mb=\"5px\"> \n                        <FlashcardStudy flashcard={{front, back}} revealback={true} />\n                    </Box> : \"\"}\n                    <Button fullWidth color=\"secondary\" variant=\"outlined\" endIcon={<VisibilityIcon />} onClick={() => setPreview(!preview)}>\n                     {preview ? \"Hide Preview\" : \"Preview Flashcard\"}\n                    </Button>\n                </Grid>\n\n                <Grid item xs={6}>\n                    <Button variant=\"contained\" onClick={handleClose} fullWidth color=\"primary\"  >Cancel</Button>\n                </Grid>\n                <Grid item xs={6}>\n                <Button type=\"submit\" fullWidth style={{backgroundColor: front && back ? \"green\" : \"grey\", color: \"white\"}}>Submit {props.card ? \"Edit\" : \"\"}</Button>\n                </Grid>\n\n            </Grid>\n                </form>\n\n        \n\n      </Dialog>\n    );\n}\n\nexport default CreateCardDialog","\nimport { useState } from 'react';\nimport { Card, Divider, IconButton, Tooltip, Typography } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\n\nimport { useDispatch, useSelector} from \"react-redux\"\nimport { Grid } from '@material-ui/core/';\nimport { deleteCard } from '../../store/actions/cardActions';\nimport loadingReducer from '../../store/reducers/loadingReducer';\nimport Loading from '../notifications/loading';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport CardPreviewDialog from '../dialogs/cardPreviewDialog';\nimport FlashcardStudy from './flashcardStudy';\nimport CreateCardDialog from '../dialogs/createCardDialog';\n\n\nconst CardView = props => {\n\n    const dispatch = useDispatch();\n    const [editCard, setEditCard] = useState({})\n    const [openEdit, setOpenEdit] = useState(false);\n    const [openPreview, setOpenPreview] = useState(false);\n    const loading = useSelector(state => state.loadingReducer.loading)\n\n    \n\n    \n\n\n    const previewThisCard = card => { \n        setEditCard(card)\n        setOpenPreview(true)    \n        // dispatch(deleteCard(card))   \n    }\n\n    const deleteThisCard = card => {     \n        if (window.confirm(\"Are you sure you want to delete this card?\")){ \n            dispatch(deleteCard(card))   \n        }\n    }\n\n    \n    const editThisCard = card => {\n        console.log(\"edit\", card)\n        setEditCard(card)\n        setOpenEdit(true);\n    }\n    console.log(\"car1ds\", props.cards)\n    \n    let cardItems = []\n    if (props.cards.length){\n    props.cards.map((card, index) => (        \n        cardItems[index] = \n        <Grid item xs={12}>\n        <Card key={card.id} style={{margin: \"10px\"}}>\n        <Grid container spacing={1}> \n            <Grid item xs={1}>\n\n            </Grid>\n            <Grid item xs={10} onClick = {() => previewThisCard(card)} style={{}}>\n                <FlashcardStudy flashcard={card} revealback={true}/>\n            </Grid>\n            <Grid item xs={1} style={{paddingTop: \"50px\"}}>\n                {/* <Tooltip title=\"Preview Flashcard\" placement=\"right\" style={{margin: \"3px\"}}>\n                    <IconButton onClick = {() => previewThisCard(card)} size=\"small\"> \n                        <VisibilityIcon style={{fontSize: \"20px\"}} /> \n                    </IconButton>\n                </Tooltip> */}\n                <Tooltip title=\"Edit Flashcard\" placement=\"right\" style={{margin: \"3px\"}}>\n                    <IconButton onClick = {() => editThisCard(card)} size=\"small\"> \n                        <EditIcon style={{fontSize: \"20px\"}} /> \n                    </IconButton>\n                </Tooltip>\n                <Tooltip title=\"Delete Flashcard\" placement=\"right\" style={{margin: \"3px\"}}>\n                    <IconButton onClick = {() => deleteThisCard(card)} size=\"small\">   \n                        <DeleteIcon style={{fontSize: \"20px\"}} /> \n                    </IconButton>\n                </Tooltip>\n            </Grid>        \n        </Grid>\n    </Card>\n    \n    </Grid>))\n    }\n\n    \n    if (loading){\n        return <Loading />\n    }\n\n    return (\n        \n        <div>\n        <CardPreviewDialog open={openPreview} onClose={() => setOpenPreview(false)} card={editCard}  />\n        {/* <FlashcardForm open={openEdit} onClose={() => setOpenEdit(false)}  card={editCard}  /> */}\n        <CreateCardDialog open={openEdit} onClose={() => setOpenEdit(false)}  card={editCard} />\n      \n            \n            \n            {cardItems.length ? \n            \n            <Grid container spacing={0}> \n             {cardItems} \n            </Grid>\n            \n            : \n            <div style={{color: \"grey\", marginTop: \"150px\"}}>\n                <Typography variant=\"h5\">No cards</Typography>\n                <Typography variant=\"body1\">Add cards using the <i>Add Flashcard</i> button</Typography>\n            </div>}\n            \n            \n        </div>\n    )\n}\n\nexport default CardView","import { Button, Dialog, Box } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addAdmin, removeAdmin } from '../../store/actions/userActions';\nimport { useEffect } from 'react';\nimport userReducer from '../../store/reducers/userReducer';\nimport CardView from '../submodules/cardview';\n\nconst CardDialog = (props) =>  {\n    const { onClose, selectedValue, open, card } = props;\n   \n    // const dispatch = useDispatch()\n\n    const handleClose = () => {\n      onClose(selectedValue);\n    };\n    \n    // const makeAdmin = () => {\n    //     dispatch(addAdmin(user))\n    //     handleClose()\n    // }\n\n    // const unmakeAdmin = () => {\n    //     dispatch(removeAdmin(user))\n    //     handleClose()\n    // }\n   \n    return (\n      <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n      <Box style={{width:\"400px\", height: \"auto\", margin: 0}} >\n\n\n\n          <CardView cards={[card]} />\n\n          </Box>\n      </Dialog> \n    );\n  }\n  \n  export default CardDialog","import { PageWrapper } from \"../../static/wrappers\"\nimport { useDispatch, useSelector } from 'react-redux';\nimport userReducer from '../../store/reducers/userReducer';\nimport { useEffect } from 'react';\nimport {  getUsersStatus } from '../../store/actions/userActions';\nimport { DataGrid, GridOverlay } from '@material-ui/data-grid';\nimport CardgroupSelect from '../submodules/cardgroupselect';\nimport { useState } from 'react';\nimport { Typography } from \"@material-ui/core\";\nimport { loadCardgroupFlashcards } from \"../../store/actions/cardActions\";\nimport CardDialog from \"../dialogs/cardDialog\";\nimport Loading from \"../notifications/loading\";\n\n\n const AllCards = () => {\n\n    const dispatch = useDispatch()\n    const cards = useSelector(state => state.cardReducer.cards)\n    const [openCard, setOpenCard] = useState(false);\n    const [selectedCard, setSelectedCard] = useState({})\n\n    const loading = useSelector(state => state.loadingReducer.loading)\n\n    const [cardGroupId, setCardGroupId] = useState(0)\n\n\n    useEffect(() => {\n        dispatch(loadCardgroupFlashcards(cardGroupId)) \n        console.log(\"status\")\n        \n    }, [dispatch, cardGroupId])\n    \n    console.log(\"cards\")\n    console.log(cards)\n\n    const columns = [\n        { field: 'username', headerName: 'Username', width: 130 },\n        { field: 'front', headerName: 'Card Front', width: 130 },\n        { field: 'back', headerName: 'Card Back', width: 130 },\n        { field: 'nRatings', headerName: 'N Ratings', width: 130 },\n        { field: 'averageRating', headerName: 'Avg Rating', width: 130 },\n    ]      \n\n    let rows = cards.map(c => (\n        {\n            id: c.id,\n            name: c.user ? c.user.name: \"\",\n            username: c.user ? c.user.username: \"\",\n            front: c.front,\n            back: c.back,\n            nRatings: c.nRatings,\n            averageRating: c.averageRating\n        }\n    ))\n    \n    const handleClick = e => {\n        console.log(\"print\", e.row)\n        setSelectedCard(e.row)\n        setOpenCard(true)\n    }\n    \n    console.log(\"cgid\", cardGroupId)\n    return (\n        <PageWrapper>       \n            <CardDialog open={openCard} onClose={() => setOpenCard(false)} card={selectedCard} />\n            <div style={{marginBottom: \"15px\"}} >\n                <CardgroupSelect onChange={setCardGroupId} showFirst />\n            </div>\n\n                <div style={{ height: \"400px\", width: '100%' }}>\n\n                {loading ? <Loading /> : \n\n                cards.length ? \n                <DataGrid \n                    onCellClick={e => handleClick(e)} rows={rows} columns={columns} pageSize={10}                   \n                />\n                : \"No flashcards for this cardgroup\"\n                }\n            </div>\n        </PageWrapper>\n    )\n}\n\nexport default AllCards\n\n\n\n\n// import {useDispatch, useSelector} from \"react-redux\"\n// import { useEffect } from 'react';\n// import { loadCards, loadCardgroupFlashcards } from '../../store/actions/cardActions';\n// import CardView from '../submodules/cardview';\n// import {PageWrapper} from \"../../static/wrappers\"\n\n// const AllCards = props => {\n\n//     const cards = useSelector(state => state.cardReducer.cards)\n    \n//     const dispatch = useDispatch();\n\n//     useEffect(() => {\n//         dispatch(loadCards())   \n//     }, [dispatch])   \n\n\n//     return(\n//         <PageWrapper> \n//             <CardView cards={cards}/>\n//         </PageWrapper>\n//     )\n// }\n\n// export default AllCards","import { Redirect, useHistory } from \"react-router-dom\";\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { signInCallack } from '../store/actions/authActions';\nimport authReducer from \"../store/reducers/authReducer\";\nimport { useSelector } from 'react-redux';\nimport Loading from \"./notifications/loading\";\nimport {PageWrapper} from \"../static/wrappers\"\n\n\nconst LogInFunc = () => {\n    const dispatch = useDispatch();    \n    const loggedIn = useSelector(state => state.authReducer.loggedIn)\n\n    useEffect(() => {\n        dispatch(signInCallack())\n    }, [dispatch])   \n\n    const history = useHistory()\n    if (loggedIn){\n      history.push(\"/\")\n    }\n\n\n    return( \n        <PageWrapper>\n          <Loading /> \n        </PageWrapper>\n      )\n\n\n}\n\nexport default LogInFunc","\nimport { Grid, Typography, LinearProgress, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n    progressBar: {\n        \"& .MuiLinearProgress-barColorPrimary\" : {\n            backgroundColor: theme.palette.button.success.main\n        }\n    }\n}))\n\nconst Progress = ({x,y,body, style}) => {\n    const classes = useStyles() \n    const percentage = Math.round(100*(x / y))\n\n    return(\n        <div style={style}>\n            <Grid container >\n            <Grid item xs={8}>\n\n\n                <Typography variant=\"body1\">{body}</Typography>\n                <Typography variant=\"body1\">{x} of {y}</Typography>\n            </Grid>\n            <Grid item xs={4}>\n            <Typography variant=\"h4\">{percentage}%</Typography>\n            </Grid>\n            <Grid item xs={12}>\n                <LinearProgress className={classes.progressBar} variant=\"determinate\" value={percentage} />\n            </Grid>\n        </Grid>\n    </div>\n\n    )\n}\n\nexport default Progress","\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { loadCardGroupUserFlashcards } from '../../store/actions/cardActions';\nimport CardView from '../submodules/cardview';\nimport { deleteCardgroup, loadCardgroup } from '../../store/actions/cardgroupActions';\nimport { Button, Divider, Grid, LinearProgress, makeStyles, Typography } from '@material-ui/core';\nimport CreateCardDialog from '../dialogs/createCardDialog';\nimport {PageWrapper} from \"../../static/wrappers\"\nimport authReducer from '../../store/reducers/authReducer';\nimport loadingReducer from '../../store/reducers/loadingReducer';\nimport Loading from '../notifications/loading';\nimport userReducer from '../../store/reducers/userReducer';\nimport { Redirect } from 'react-router-dom';\nimport { dateJSONToString } from '../../utils/datehandling';\nimport Progress from '../submodules/progress';\nimport { useHistory } from 'react-router-dom';\nimport CreateCardGroup from '../dialogs/createCardGroup';\n\n\nconst useStyles = makeStyles(theme => ({\n    addButton: {\n        backgroundColor: theme.palette.button.success.main,\n        color: \"white\",\n        border: \"none\",\n        align: \"center\",\n        '&:hover': {\n            background: theme.palette.button.success.dark,\n          }\n    },\n    delButton: {\n        backgroundColor: theme.palette.button.error.main,\n        color: \"white\",\n        border: \"none\",\n        align: \"center\",\n        '&:hover': {\n            background: theme.palette.button.error.dark,\n          }\n    },\n \n}))\n\n\nconst CardGroupPage = props => {\n    console.log(\"prop\")\n    console.log(props.match.params)\n\n    const classes = useStyles()\n\n    const isAdmin = useSelector(state => state.authReducer.isAdmin)\n\n    const cards = useSelector(state => state.cardReducer.cards)\n    const cardgroup = useSelector(state => state.cardgroupReducer.cardgroups[0])\n    const user = useSelector(state => state.authReducer.loggedInUser)\n    const [open, setOpen] = useState(false);\n    const dispatch = useDispatch();\n    const [openEditCardgroup, setOpenEditCardgroup] = useState(false)\n\n    const loading = useSelector(state => state.loadingReducer.loading)\n\n    const handleClickOpen = () => {\n        if (cards.length >= cardgroup.numberOfCardsDue){\n            alert(\"All Cards Delivered. Delete or edit existing cards\")\n        } else {\n        setOpen(true);\n        }\n    };\n\n    const handleClose = (value) => {\n        setOpen(false);\n      };\n\n    const  history = useHistory()\n    const handleDelete = () => {\n        if (window.confirm(\"Are you sure you want to delete cardgroup with all cards?\")){ \n            dispatch(deleteCardgroup(cardgroup))\n            history.push(\"/addcards\")\n        }\n\n    }\n\n    const handleEdit = () => {\n        setOpenEditCardgroup(true)\n    }\n\n    console.log(\"cardgr.:\")\n    console.log(cardgroup)\n    \n    useEffect(() => {\n        console.log(\"stuff and things\") \n\n        console.log(cardgroup)\n        dispatch(loadCardGroupUserFlashcards(props.match.params.id))       \n        dispatch(loadCardgroup(props.match.params.id))\n    }, [dispatch, props.match.params.id])   \n \n    if (loading){\n        return (\n            <PageWrapper>\n                <Loading />\n            </PageWrapper>    \n        )\n    }\n    else return(\n        <PageWrapper>\n            \n            <CreateCardDialog open={open} onClose={handleClose} cardgroupId={props.match.params.id} />    \n            <CreateCardGroup open={openEditCardgroup} onClose={() => setOpenEditCardgroup(false)} toeditCardgroup={cardgroup} />       \n\n            {cardgroup ? \n            <Grid container spacing={6}>\n                <Grid item xs={8}>\n                    <Typography variant=\"h4\">Add Flashcards to {cardgroup.title}</Typography>\n                    <Typography variant=\"body2\">{cardgroup.numberOfCardsDue} cards are due {dateJSONToString(cardgroup.dueDate)}\n                     </Typography>\n\n                    <div style={{marginTop: \"40px\"}}>\n                     <CardView cards={cards}/>\n                     </div>\n                </Grid>\n\n                \n                \n                <Grid item xs={4}>\n                    <Button fullWidth style={{height: \"80px\"}} className={classes.addButton} variant=\"outlined\" onClick={handleClickOpen}>\n                    + Add Flashcard\n                    </Button> \n\n                    <Progress x={cards.length} y={cardgroup.numberOfCardsDue} body=\"You've created\" style={{margin: \"40px 0px\"}} />\n\n\n                    {isAdmin ? \n\n                    <div>\n                        <Typography variant=\"subtitle2\">Admin Functionality for This Cardgroup:</Typography>\n                        <Divider />\n                        <Button fullWidth style={{height: \"60px\", margin: \"10px 0\"}} className={classes.delButton} variant=\"contained\" onClick={handleDelete}>\n                            Delete cardgroup and all cards\n                        </Button> \n                        <Button fullWidth style={{height: \"60px\", margin: \"10px 0\"}} color=\"primary\" variant=\"contained\" onClick={handleEdit}>\n                            Edit Cardgroup\n                        </Button> \n                    </div>\n                    : <div></div>}\n\n                </Grid>\n                <Grid item xs={7}>\n                    \n                </Grid>\n\n            </Grid> : <div>suo</div> }\n\n\n\n\n            \n\n\n            \n\n        </PageWrapper>\n    )\n\n  \n}\n\nexport default CardGroupPage","import { Typography } from \"@material-ui/core\"\nimport { useSelector } from \"react-redux\";\nimport { PageWrapper } from \"../../static/wrappers\";\n\nconst UserProfile  = () => {\n    const loggedInuser = useSelector(state => state.authReducer.loggedInUser)\n    const isAdmin = useSelector(state => state.authReducer.isAdmin)\n    // const dispatch = useDispatch();    \n\n    return(\n        <PageWrapper>\n            {isAdmin ? <Typography variant=\"h3\">Admin profile</Typography> :  <Typography variant=\"h3\">User profile</Typography>}\n            {loggedInuser ? <div> <h2>You are logged in, {loggedInuser.name}</h2>\n            <span style={{ color: \"grey\" }}>username: </span><span>{loggedInuser.username}</span> <br />\n            <span style={{ color: \"grey\" }}>email: </span><span>{loggedInuser.email}</span> </div> : <h1> Not logged in  </h1>}\n\n        </PageWrapper>\n    )\n}\n\n\nexport default UserProfile","import { Button, Dialog } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addAdmin, removeAdmin } from '../../store/actions/userActions';\nimport { useEffect } from 'react';\nimport userReducer from '../../store/reducers/userReducer';\n\n\n\nconst UserDialog = (props) =>  {\n    const { onClose, selectedValue, open, user } = props;\n   \n    const dispatch = useDispatch()\n\n    const handleClose = () => {\n      onClose(selectedValue);\n    };\n    \n    const makeAdmin = () => {\n        dispatch(addAdmin(user))\n        handleClose()\n    }\n\n    const unmakeAdmin = () => {\n        dispatch(removeAdmin(user))\n        handleClose()\n    }\n   \n    return (\n      <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open} >\n        <div style={{padding: \"30px\", width:\"500px\"}}>\n\n            <h2>User: {user.name}</h2>\n            <span style={{ color: \"grey\" }}>username: </span><span>{user.username}</span> <br />\n            <span style={{ color: \"grey\" }}>email: </span><span>{user.email}</span> <br />\n            <span style={{ color: \"grey\" }}>role: </span><span>{user.role}</span> <br />\n\n            <div style={{textAlign: \"center\", paddingTop: \"50px\"}}>\n            {user.role == \"Admin\" ? \n                <Button onClick={() => unmakeAdmin()} variant=\"outlined\">Remove admin</Button>\n            :\n                <Button onClick={() => makeAdmin()} variant=\"outlined\">Make admin</Button>\n            }     \n            </div>\n        \n        </div>\n      </Dialog>\n    );\n  }\n  \n  export default UserDialog","import { PageWrapper } from \"../../static/wrappers\"\nimport { useDispatch, useSelector } from 'react-redux';\nimport userReducer from '../../store/reducers/userReducer';\nimport { useEffect } from 'react';\nimport { getAllUsers, getUsersWithRole, searchUsers } from '../../store/actions/userActions';\nimport { DataGrid, SearchIcon } from '@material-ui/data-grid';\nimport { FormControl, MenuItem, TextField, Grid, Button, IconButton } from '@material-ui/core';\nimport { InputLabel } from '@material-ui/core';\nimport { Select } from '@material-ui/core';\nimport { useState } from 'react';\nimport UserDialog from \"../dialogs/userDialog\";\n\n\n const Users = (props) => {\n\n    const [show, setShow] = useState('all');\n\n\n    const dispatch = useDispatch()\n    const users = useSelector(state => state.userReducer.users)\n    const [openUserDialog, setOpenUserDialog] = useState(false);\n    const [selectedUser,setSelectedUser] = useState({})\n\n\n    const [searchPhrase, setSearchPhrase] = useState(\"\")\n    \n\n    const userRoleFiler = role => {\n        if (role===\"all\"){\n            console.log(\"all da\")\n            dispatch(getAllUsers())\n        } else if (role===\"User\"){\n            dispatch(getUsersWithRole(\"User\"))\n        } else if (role===\"Admin\"){\n            console.log(\"aadd\")\n            dispatch(getUsersWithRole(\"Admin\"))\n        }\n    }\n\n    useEffect(() => {\n        // dispatch(getAllUsers())          \n        userRoleFiler(show)\n    }, [dispatch, show])\n\n    let rows = users    \n\n    const columns = [\n        {field: \"id\", headerName: \"id\", width: 70},\n        {field: \"username\", headerName: \"username\", width: 130},\n        {field: \"name\", headerName: \"name\", width: 130},\n        {field: \"email\", headerName: \"email\", width: 130},\n        {field: \"role\", headerName: \"role\", width: 130}\n    ]      \n\n    const handleSearch = (e) => {      \n        if (!searchPhrase){\n            userRoleFiler(show)\n        }   else {     \n        dispatch(searchUsers(show, searchPhrase))   \n        }     \n    }\n\n    const handleFilter = e => {\n        setSearchPhrase(\"\")\n        setShow(e.target.value)\n    } \n\n    const handleClick = e => {\n        console.log(\"print\", e.row)\n        setSelectedUser(e.row)\n        setOpenUserDialog(true)\n    }\n    \n    return (\n        <PageWrapper>       \n            <UserDialog open={openUserDialog} onClose={() => setOpenUserDialog(false)} user={selectedUser} />\n            <Grid container spacing={1}>\n                <Grid item xs={6}>\n            \n                    <FormControl fullWidth variant=\"outlined\">\n                    <InputLabel id=\"demo-simple-select-label\">Filter</InputLabel>\n                        <Select\n                        // labelId=\"demo-simple-select-label\"\n                        // id=\"demo-simple-select\"\n                        // value={show}\n                        // onChange={e => setShow(e.target.value)}'\n                        required\n                        color=\"secondary\"\n                        value={show}\n                        onChange={e => handleFilter(e)}\n                        label=\"show\"\n            \n                        >\n                        <MenuItem value={\"all\"}>All users</MenuItem>\n                        <MenuItem value={\"Admin\"}>Admins</MenuItem>\n                        <MenuItem value={\"User\"}>Users</MenuItem>\n                        </Select>\n                    </FormControl> \n                </Grid>\n                <Grid item xs={6}>\n\n\n                        <TextField \n                                id=\"search\"\n                                label=\"Search username\"\n                                color=\"secondary\"\n                                defaultValue=\"\"\n                                fullWidth\n                                onKeyPress={(ev) => {\n                                    if (ev.key === 'Enter') {\n                                        handleSearch()\n                                    }\n                                  }}\n                                onChange={e => setSearchPhrase(e.target.value)}\n                                value={searchPhrase}\n                                variant=\"outlined\"\n                                InputProps={{endAdornment: \n                                    <IconButton onClick={handleSearch}>\n                                        <SearchIcon />\n                                    </IconButton>\n                                }}\n                            ></TextField>\n                        </Grid>\n\n                        <Grid item xs={12}>\n\n\n\n                        <div style={{ height: 400, width: '100%' }}> \n                    <DataGrid onCellClick={e => handleClick(e)} rows={rows} columns={columns} pageSize={10}  />\n                    </div>\n            </Grid>  \n            </Grid>     \n\n        </PageWrapper>\n    )\n}\n\nexport default Users","\nimport React, {useState, useEffect} from \"react\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport  { Redirect, NavLink, Link, useHistory } from 'react-router-dom'\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport {AppBar, ButtonGroup, Menu, MenuItem} from '@material-ui/core'\nimport PersonIcon from '@material-ui/icons/Person';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { signOut } from '../../store/actions/authActions';\nimport { AdminNavbarWrapper } from \"../../static/wrappers\";\nimport { ToggleButton, ToggleButtonGroup } from \"@material-ui/lab\";\n\n\nconst useStyles = makeStyles(theme => ({ \n    navlink: {\n        color: theme.palette.textColor,\n        textDecoration: \"none\"\n    },\n    button: {\n        width: \"100%\",\n        height: \"50px\",\n    }\n})); \n\n\nconst AdminNavbar = props => {\n\n    const classes = useStyles()    \n    const [alignment, setAlignment] = React.useState(0);\n    const history = useHistory() \n    const urls=[\n        {\n            url: \"/adminpage/users\",\n            label: \"All Users\"\n        },\n        {\n            url: \"/adminpage/deliverystatus\",\n            label: \"Delivery Status\"\n        },\n        {\n            url: \"/adminpage/allcards\",\n            label: \"All Cards\"\n        },\n        {\n            url: \"/adminpage/peerreviews\",\n            label: \"Peerreviews\"\n        },\n    ]\n\n    useEffect(() => {\n        setAlignment(urls.findIndex(x => x.url === history.location.pathname))\n    }, [history.location.pathname])\n\n\n    \n    return( \n        <AdminNavbarWrapper>\n\n            <Typography variant=\"h4\" style={{flexGrow: 0}}>\n                Amin Page\n            </Typography>\n\n            <Toolbar style={{padding: 0}}>                        \n                <ToggleButtonGroup\n                    style={{width: \"100%\"}}\n                    value={alignment}\n                    exclusive  \n                    aria-label=\"text alignment\"\n                >\n                    {urls.map((url, index) => \n                        <ToggleButton component={Link} value={index} to={url.url} className={classes.button} variant=\"outlined\">{url.label}</ToggleButton> \n                    )}        \n                </ToggleButtonGroup>  \n            </Toolbar>\n        </AdminNavbarWrapper>\n    )\n}\n\nexport default AdminNavbar","import { Redirect, useHistory } from \"react-router-dom\"\n\n\n\n\n\n\nconst AdminPage = () => {\n\n    const history = useHistory()\n    history.push(\"/adminpage/users\")\n\n    return(\n        <div>\n\n        </div>\n    )\n}\n\nexport default AdminPage","import { PageWrapper } from \"../../static/wrappers\"\nimport { useDispatch, useSelector } from 'react-redux';\nimport userReducer from '../../store/reducers/userReducer';\nimport { useEffect } from 'react';\nimport {  getUsersStatus } from '../../store/actions/userActions';\nimport { DataGrid } from '@material-ui/data-grid';\nimport CardgroupSelect from '../submodules/cardgroupselect';\nimport { useState } from 'react';\nimport { Typography } from \"@material-ui/core\";\nimport { dateJSONToString } from \"../../utils/datehandling\";\nimport Loading from \"../notifications/loading\";\n\n\n const DeliveryStatus = () => {\n\n    const dispatch = useDispatch()\n    // const users = useSelector(state => state.userReducer.users)\n    const status = useSelector(state => state.userReducer.status)\n\n    const [cardGroupId, setCardGroupId] = useState(0)\n    const loading = useSelector(state => state.loadingReducer.loading)\n\n\n    useEffect(() => {\n        dispatch(getUsersStatus(cardGroupId))\n        console.log(\"status\")\n        console.log(status)\n    }, [dispatch, cardGroupId])\n    \n    console.log(\"usars\")\n\n    \n\n    const columns = [\n        { field: 'username', headerName: 'Username', width: 130 },\n        { field: 'delivered', headerName: 'Delivered', type: \"number\", width: 130 },\n        {\n          field: 'toDeliver',\n          headerName: 'To Deliver',\n          type: 'number',\n          width: 130,\n        },\n        { field: 'complete', headerName: 'Complete', type: \"number\", width: 130 },      \n    ]      \n\n    let rows = status.map(s => (\n        {\n            id: s.user.id, \n            username: s.user.username, \n            delivered: s.delivered, \n            toDeliver: s.cardgroup.numberOfCardsDue,\n            complete: s.delivered == s.cardgroup.numberOfCardsDue ? true : false\n        }\n    ))\n\n\n    \n    console.log(\"cgid\", cardGroupId)\n\n\n    return (\n        <PageWrapper>       \n\n            <div style={{marginBottom: \"15px\"}} >\n                <CardgroupSelect onChange={setCardGroupId} showFirst/>\n            </div>\n\n            {loading ? <Loading /> : \n\n                status.length ? \n                <div>\n                    <Typography variant=\"subtitle2\" style={{marginTop: \"20px\"}}>\n                        {status[0] ? \"Due: \" + dateJSONToString(status[0].cardgroup.dueDate) : \"Due:\"}\n                    </Typography>\n\n                    <div style={{ height: \"400px\", width: '100%' }}>\n                        <DataGrid rows={rows} columns={columns} pageSize={10}  />\n                        </div>\n                    \n                </div>\n            : \"\"\n            }\n\n            {/* {loading ? <Loading /> : \n\n            status.length ? \n            <div>\n                <Typography variant=\"subtitle2\" style={{marginTop: \"20px\"}}>\n                    {status[0] ? \"Due: \" + dateJSONToString(status[0].cardgroup.dueDate) : \"Due:\"}\n                </Typography>\n        \n                <div style={{ height: 400, width: '100%' }}>\n                    <DataGrid rows={rows} columns={columns} pageSize={5}  />\n                </div>\n            </div>\n            : \n            \"\"} */}\n        </PageWrapper>\n    )\n}\n\nexport default DeliveryStatus","import axios from 'axios';\nimport { CREATE_PEERREVIEW, LOAD_PEERREVIEWS, SET_LOADING, SET_ALERT, GET_USER_ALL_PEERREVIEWS } from '../actionTypes';\nimport { refreshTokens } from './authActions';\n\nexport const createPeerreviews = ({groupId, dueDate, numberOfReviews}) => async( dispatch, getState) => {\n    dispatch({type: SET_LOADING, payload: true})\n    await refreshTokens()\n        \n    \n    await axios.post(\"/api/admin/peerreviews\", {\n            groupId: groupId,\n            dueDate: dueDate,\n            numberOfReviews: numberOfReviews\n        }, {\n            headers: {\n                Authorization: \"Bearer \" + localStorage.getItem(\"user_token\")\n            }\n        })\n        .then(res => {\n            if(res.data.error){\n                throw new Error(res.data.error)\n            }\n            console.log(\"returned\")\n            console.log(res.data)\n            \n            if(res.data.error){\n                console.log(\"error\")\n                throw new Error(res.data.error)\n            }\n\n\n            const status = res.data\n            \n            let alert = {severity: \"success\", text: \"successfully created peerreviews\"}\n            dispatch({type: SET_ALERT, payload: alert})\n            console.log(\"søk\", status)\n            if (res.data.status === \"success\"){\n                dispatch(getUserPeerreviews())\n            }\n        })\n        .catch(err => {\n            console.log(\"This is an error yes plz\")\n            let alert = {severity: \"error\", text: err.toString()}\n            dispatch({type: SET_ALERT, payload: alert})\n        })\n\n    dispatch({type: SET_LOADING, payload: false})\n    \n};\n\nexport const getUserPeerreviews = () => async( dispatch, getState) => {\n    dispatch({type: SET_LOADING, payload: true})\n    await refreshTokens()\n        \n    \n    await axios.get(\"/api/currentuser/peerreviews\", \n    {\n        headers: {\n            Authorization: \"Bearer \" + localStorage.getItem(\"user_token\")\n        }\n    })\n\n   \n\n        .then(res => {\n            if(res.data.error){\n                throw new Error(res.data.error)\n            }\n            console.log(\"returned\")\n            console.log(res.data)\n            \n            if(res.data.error){\n                console.log(\"error\")\n                throw new Error(res.data.error)\n            }\n\n\n            const peerReviews = res.data\n            console.log(\"was found, \",  peerReviews)\n            dispatch({type: LOAD_PEERREVIEWS, payload: peerReviews})\n            // let alert = {severity: \"success\", text: \"successfully got peerreviews: \"+peerReviews}\n            // dispatch({type: SET_ALERT, payload: alert})\n            // dispatch({type: CREATE_PEERREVIEW, payload: createdCardgroup})\n        })\n        .catch(err => {\n            console.log(\"This is an error yes plz\")\n            let alert = {severity: \"error\", text: err.toString()}\n            dispatch({type: SET_ALERT, payload: alert})\n            // dispatch({type: CREATE_CARDGROUP_ERROR, err})\n        })\n\n    dispatch({type: SET_LOADING, payload: false})\n    \n};\n\nexport const loadPeerreview = (pid) => async( dispatch, getState) => {\n    dispatch({type: SET_LOADING, payload: true})\n    await refreshTokens()\n        \n    \n    await axios.get(\"/api/currentuser/peerreviews/\"+pid, \n    {\n        headers: {\n            Authorization: \"Bearer \" + localStorage.getItem(\"user_token\")\n        }\n    })\n\n   \n\n        .then(res => {\n            if(res.data.error){\n                throw new Error(res.data.error)\n            }\n            console.log(\"returned\")\n            console.log(res.data)\n            \n            if(res.data.error){\n                console.log(\"error\")\n                throw new Error(res.data.error)\n            }\n\n\n            const peerreview = res.data\n            console.log(\"was found, \",  peerreview)\n            dispatch({type: LOAD_PEERREVIEWS, payload: [peerreview]})\n            // let alert = {severity: \"success\", text: \"successfully got peerreviews: \"+peerreview}\n            // dispatch({type: SET_ALERT, payload: alert})\n            // dispatch({type: CREATE_PEERREVIEW, payload: createdCardgroup})\n        })\n        .catch(err => {\n            console.log(\"This is an error yes plz\")\n            let alert = {severity: \"error\", text: err.toString()}\n            dispatch({type: SET_ALERT, payload: alert})\n            // dispatch({type: CREATE_CARDGROUP_ERROR, err})\n        })\n\n    dispatch({type: SET_LOADING, payload: false})\n    \n};\n\n\n\nexport const getCardgroupPeerreviews = (cardgroupId) => async( dispatch, getState) => {\n    dispatch({type: SET_LOADING, payload: true})\n\n    if (!cardgroupId){\n        dispatch({type: LOAD_PEERREVIEWS, payload: []})\n    } else {\n\n\n\n    await refreshTokens()\n    await axios.get(\"/api/admin/peerreviews/\"+cardgroupId, \n    {\n        headers: {\n            Authorization: \"Bearer \" + localStorage.getItem(\"user_token\")\n        }\n    })\n\n   \n\n        .then(res => {\n            if(res.data.error){\n                throw new Error(res.data.error)\n            }\n            console.log(\"returned\")\n            console.log(res.data)\n            \n            if(res.data.error){\n                console.log(\"error\")\n                throw new Error(res.data.error)\n            }\n\n\n            const peerReviews = res.data\n            console.log(\"was found, \",  peerReviews)\n            dispatch({type: LOAD_PEERREVIEWS, payload: peerReviews})\n            // let alert = {severity: \"success\", text: \"successfully got peerreviews: \"+peerReviews}\n            // dispatch({type: SET_ALERT, payload: alert})\n            // dispatch({type: CREATE_PEERREVIEW, payload: createdCardgroup})\n        })\n        .catch(err => {\n            console.log(\"This is an error yes plz\")\n            let alert = {severity: \"error\", text: err.toString()}\n            dispatch({type: SET_ALERT, payload: alert})\n            // dispatch({type: CREATE_CARDGROUP_ERROR, err})\n        })\n        \n    }\n        \n    \n\n    dispatch({type: SET_LOADING, payload: false})\n    \n};\n\n","\nimport { Button, \n    Grid, \n    TextField,\n    Dialog,\n    Typography,\n    makeStyles\n} from '@material-ui/core';\nimport DateFnsUtils from '@date-io/date-fns';\n\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n  } from '@material-ui/pickers';\n  \n\nimport React, { useState } from 'react';\n\n\nimport { addCardgroup } from '../../store/actions/cardgroupActions';\nimport {  useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport ConfirmDialog from \"./confirmDialog\"\nimport { useSelector } from 'react-redux';\nimport CardgroupSelect from '../submodules/cardgroupselect';\nimport { createPeerreviews } from '../../store/actions/peerreviewActions';\nimport Loading from '../notifications/loading';\n\nconst useStyles = makeStyles(theme => ({\n    dialog: {\n        \"& .MuiDialog-paperScrollPaper\": {\n            maxHeight: \"100vh\",\n        },\n    }\n}))\n\nconst CreatePeerreview = (props) => {\n    const { onClose, selectedValue, open } = props;\n    const dispatch = useDispatch();    \n    \n    const [selectedDate, setSelectedDate] = React.useState(null);\n    const [numberOfReviews, setNumberOfReviews] = useState(0)\n    const [time, setTime] = useState(\"23:59\")\n    const formSubmitCallback = useSelector(state => state.alertReducer.severity)\n    const newStatus = useSelector(state => state.alertReducer.newAlert)\n\n    const [groupId, setGroupId] = useState(0)\n\n    const classes = useStyles()\n\n\n\n    const handleDateChange = (date) => {\n      setSelectedDate(date);\n    };\n\n    useEffect(() => {\n        console.log(\"stformSubmitCallback\")\n        if (formSubmitCallback===\"success\"){\n            handleClose()\n        }\n\n    },[newStatus])\n\n    const submit = e => {\n        e.preventDefault()        \n\n      \n\n\n        if (groupId && selectedDate && numberOfReviews && time){\n\n            console.log(\"herfra\")\n            let dueDate = selectedDate\n\n            dueDate.setMinutes(time.split(\":\")[1])\n            dueDate.setHours(time.split(\":\")[0])\n\n\n            dispatch(createPeerreviews({groupId, dueDate, numberOfReviews        \n            }))              \n        }\n        else{\n        }\n    }\n\n\n    const handleClose = () => {\n        setSelectedDate(null)\n        setGroupId(0)\n        setNumberOfReviews(0)\n        setTime(\"23:59\")      \n        onClose(selectedValue);\n    };\n    \n    return (\n      <Dialog onClose={handleClose} \n        className={classes.dialog}\n\n       open={open} style={{ margin: \"100px\"}}>\n          <ConfirmDialog></ConfirmDialog>\n            \n            <div style={{margin: \"40px 40px\"}}> \n\n            <Grid container spacing={2}>\n                <Grid item xs={12} >\n                    <Typography variant=\"h6\" align=\"left\" > Add Peer Review Session for Students </Typography>\n                    <Typography variant=\"body2\" align=\"left\" color=\"textSecondary\" > This will generate peer review sessions for all students for the choosen cardgroup. \n                    Each student will get n number of cards to rate before the due date.  \n                     </Typography>\n                </Grid>\n            </Grid>\n\n\n            <form onSubmit={submit} >\n            <Grid container spacing={2}>\n                <Grid item xs={12}>\n                </Grid>\n                <Grid item xs={12}>                \n                    <CardgroupSelect onChange={setGroupId}/>\n                </Grid>\n\n\n\n                <Grid item xs={12}>\n                <TextField\n                    fullWidth\n                    color=\"secondary\"\n                    id=\"outlined-number\"\n                    label=\"Number of flashcards to review pr student\"\n                    type=\"number\"\n                    required\n                    onChange={e => setNumberOfReviews(e.target.value)} \n                    variant=\"outlined\"\n                />\n                </Grid>\n\n                <Grid item xs={6}>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <KeyboardDatePicker\n                        fullWidth\n                        disableToolbar         \n                        required    \n                        inputVariant=\"outlined\"           \n                        variant=\"outlined\"\n                        format=\"MM/dd/yyyy\"\n                        // margin=\"normal\"\n                        id=\"date-picker-inline\"\n                        label=\"Due date for delivery\"\n                        value={selectedDate}\n                        \n                        onChange={handleDateChange}\n                        onClick={console.log(\"close\")}\n                        color=\"secondary\"\n                        autoOk\n                        animateYearScrolling\n                        KeyboardButtonProps={{\n                            'aria-label': 'change date',\n                        }}\n                        />                 \n                </MuiPickersUtilsProvider>                   \n\n                    </Grid>\n                    <Grid item xs={6} >\n\n                    <TextField\n                            fullWidth\n                            id=\"time\"\n                            label=\"\"\n                            type=\"time\"\n                            variant=\"outlined\"\n                            onChange = {e => setTime(e.target.value)}\n                            defaultValue=\"23:59\"\n                            color=\"secondary\"\n                            InputLabelProps={{\n                                shrink: true,\n                                }}\n                            // inputProps={{\n                            //     step: 1440, // 5 min\n                            // }}\n                          />\n                    </Grid>\n\n\n               \n\n                \n                <Grid item xs={6}>\n                    <Button variant=\"contained\" onClick={handleClose} fullWidth color=\"primary\"  > Back</Button>\n                </Grid>\n                <Grid item xs={6}> \n                <Button type=\"submit\" fullWidth style={{backgroundColor: (groupId && numberOfReviews && selectedDate) ? \"green\" : \"grey\", color: \"white\"}}>\n                    Submit<Loading style={{marginLeft: \"10px\", height: \"26px\", }} size={24} alternative={\"\"} /> \n                </Button> \n                </Grid>\n\n                </Grid>\n                </form>\n\n\n                </div>\n      </Dialog>\n    );\n}\n  \nexport default CreatePeerreview\n\n","import { CardActionArea, Divider, Grid, Typography } from '@material-ui/core';\nimport { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport loadingReducer from '../../store/reducers/loadingReducer';\nimport Loading from '../notifications/loading';\nimport { dateJSONToString } from '../../utils/datehandling';\n\n\n\n\nconst PeerreviewView = ({peerreviews, showDueDate, onClick}) => {\n\n    const loading = useSelector(state => state.loadingReducer.loading)   \n\n    if (loading){\n        return <Loading />\n    }\n    else {\n        return(\n            <div>\n                <Divider   /> \n                <Grid container spacing={0}>\n                    <Divider   /> \n\n                    {peerreviews.length ? \n                    peerreviews.map((peerreview) => (\n                        <Grid item xs={12} key={peerreview.id}> \n                            <CardActionArea onClick={() => onClick(peerreview.id)} style={{padding: \"10px\", minHeight: \"100px\"}}>\n                                <Grid container spacing={2} >\n                                    <Grid item xs={12}>                        \n                                        <Typography variant=\"subtitle1\" component=\"h2\">\n                                            Peer Review of cards from <i>{peerreview.cardgroup.title} </i>\n                                        </Typography>\n                                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">\n                                                {peerreview.reviewsDue} Cards are due for peer review: {dateJSONToString.call(this, peerreview.dueDate)}    \n                                            </Typography> \n                                    </Grid>\n                                </Grid>\n                            </CardActionArea> \n                            <Divider   /> \n                        </Grid>)) : <Typography variant=\"subtitle1\"> No peer reviews due</Typography> } \n                \n                </Grid>\n            </div>\n        )\n    }\n}\n\nexport default PeerreviewView","\nimport { PageWrapper } from \"../../static/wrappers\";\nimport { Divider, Grid, makeStyles } from '@material-ui/core';\nimport { Typography } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport GroupView from \"../submodules/groupview\";\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { loadCardgroups } from \"../../store/actions/cardgroupActions\";\nimport { useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { useState } from 'react';\nimport CreatePeerreview from \"../dialogs/createPeerreview\";\nimport { getUserPeerreviews } from \"../../store/actions/peerreviewActions\";\nimport PeerreviewView from \"../submodules/peerReviewView\";\n\n\nconst useStyles = makeStyles(theme => ({\n    addButton: {\n        backgroundColor: theme.palette.button.success.main,\n        color: \"white\",\n        border: \"none\",\n        align: \"center\",\n        '&:hover': {\n            background: theme.palette.button.success.dark,\n          }\n\n    }\n}))\n\nconst PeerReview = () => {\n    const classes = useStyles() \n    const dispatch = useDispatch();  \n    const [open, setOpen] = useState(false);\n   \n    const peerreviews = useSelector(state => state.peerreviewReducer.peerreviews)\n    const isAdmin = useSelector(state => state.authReducer.isAdmin)\n    const [cardgroups, setCardgroups] = useState([])\n\n    useEffect(() => {\n        dispatch(getUserPeerreviews())\n        \n    }, [dispatch])   \n\n    const history = useHistory()\n\n    const handleRedirect = peerreviewid => {\n        history.push(\"/peerreview/\"+peerreviewid)\n    }\n    \n    useEffect(() => {\n        if (peerreviews.length){\n            setCardgroups(  \n                peerreviews.map(p => {\n                    return p.cardgroup\n                })\n            )\n        }\n    }, [peerreviews])\n\n    return( \n        <PageWrapper>\n            <CreatePeerreview open={open} onClose={() => setOpen(false)}  />\n\n            <Grid container spacing={2}>  \n            <Grid item xs={8}  >\n                <Typography variant=\"h4\" gutterBottom >\n                    Peer Review of Flashcards \n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                    Rate other students' cards\n                    </Typography>\n            </Grid>\n            <Grid item xs={4}>\n            {isAdmin ?                 \n                            <Button fullWidth className={classes.addButton} variant=\"outlined\" onClick={() => setOpen(true)}>\n                                + Add Peer Review Session\n                            </Button> :\n                            <div></div>}\n\n            </Grid> \n            \n            <Grid item xs={12}>\n                            <PeerreviewView peerreviews={peerreviews} onClick={handleRedirect} />\n                        </Grid> \n\n            </Grid>\n\n        </PageWrapper>\n    )\n\n}\n\n\nexport default PeerReview","\nimport { CREATE_RATING, LOAD_RATINGS  } from '../actionTypes';\n\nconst initState = {\n    ratings: []\n}\n\nconst ratingReducer = (state = initState, action) => {\n\n    switch(action.type){\n        case CREATE_RATING:\n            \n            console.log(\"savind\", action.payload)\n            /* Is in list */\n            if (state.ratings.filter(rating => rating.id === action.payload.id).length > 0){\n                console.log(\"IN ARR\")\n                console.log(state.ratings)\n                console.log(\n                    state.ratings.map(rating => {\n                        if (rating.id === action.payload.id){\n                            return action.payload\n                        }\n                        else{\n                            return rating\n                        }\n                    })    \n                )\n                return{\n                    ...state,\n                    ratings: state.ratings.map(rating => {\n                        if (rating.id === action.payload.id){\n                            return action.payload\n                        }\n                        else{\n                            return rating\n                        }\n                    })    \n                }\n            } else{\n                console.log(\"NOT IN ARR\")\n                return{\n                    ...state,\n                    ratings: [...state.ratings, action.payload]\n                }\n            }\n\n            \n\n            return{\n                ...state,\n                ratings: state.ratings.map(rating => {\n                    if (rating.id === action.payload.id){\n                        return action.payload\n                    }\n                    else{\n                        return rating\n                    }\n                })\n            }\n        \n            return{\n                ...state,\n                ratings: [action.payload]\n            }\n        case LOAD_RATINGS:\n            console.log(\"got ratings\", action.payload)\n            return{\n                ...state,\n                ratings: action.payload\n            }\n            \n        default:\n            console.log(\"default alert\")\n            return state\n    }\n}\n\nexport default ratingReducer","\n\nimport DOMPurify from 'dompurify';\n\n\nconst DivHTMLSanatized= ({text, style}) =>{\n    \n    return(\n        <div dangerouslySetInnerHTML={{__html: DOMPurify.sanitize(text)}} style={style}/>\n    )\n}\n\nexport default DivHTMLSanatized\n\n\n","import { IconButton, Dialog, Divider, makeStyles, Tooltip, Typography, Grid, Box, Checkbox, Button, Popover } from \"@material-ui/core\"\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport DivHTMLSanatized from \"../submodules/divHTMLSanitized\";\nimport FlashcardStudy from '../submodules/flashcardStudy';\n\n\nconst useStyles = makeStyles(theme => ({\n    dialog: {\n        \"& .MuiDialog-paperScrollPaper\": {\n            maxHeight: \"100vh\",\n            maxWidth: \"100%\"\n        },\n    },\n   \n    customizedButton: {\n        position: \"absolute\",\n        left: \"80%\",\n        top: \"5%\"\n\n\n    },\n    \n    root: {\n        padding: theme.spacing(3, 2),\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\"\n      },\n\n}))\n\nconst CheckCard = ({card, index, isDuplicate, editDuplicates}) => {\n\n\n    const classes = useStyles()\n    const [checked, setChecked] = useState(isDuplicate);\n    \n    \n    useEffect(() => {\n        editDuplicates(card.id, checked)\n    }, [checked])\n\n\n    return(\n        <div>          \n            <Grid container spacing={2} onClick={() => setChecked(!checked)}>\n                <Grid item xs={6} className={classes.root}>\n                    <Typography variant=\"body2\"><b>Card #{index}</b></Typography>\n                </Grid>\n\n                <Grid item xs={6}>\n                <Checkbox\n                    size=\"small\"\n                    color=\"primary\"\n                    checked={checked}\n                    onChange={e => setChecked(e.target.checked)} \n                />   \n                </Grid>\n            </Grid>      \n        </div>\n    )\n\n\n}\n\nconst MarkAsDuplicatedDialog = ({onClose, open, setDuplicateCards, duplicateCards, flashcard, selectedValue}) => {\n\n    const handleClose = () => {\n        onClose(selectedValue);\n    };\n\n    // const [cardIndex, setCardIndex] = useState(-1)\n\n    const classes = useStyles()\n    const cards = useSelector(state => state.cardReducer.cards)\n\n    const editDuplicates=(cardId, isDuplicate) => {\n        if (!isDuplicate){\n            setDuplicateCards(duplicateCards.filter(id => id !== cardId))\n        }\n        else if (isDuplicate){\n            if (!duplicateCards.includes(cardId)){\n            setDuplicateCards([...duplicateCards, cardId])\n            }\n        }\n    }\n\n    console.log(cards)\n\n    return(\n        <Popover onClose={handleClose} \n        className={classes.dialog}\n       open={open} \n    //    anchorOrigin={{vertical: \"top\", horizontal: \"right\"}}\n       >    \n\n       <div style={{minWidth: \"200px\", maxWidth: \"200px\", margin: \"30px\"}}> \n                    <Typography variant=\"h5\">Mark Duplicate cards: \n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\"> Check cards that are very similar or duplicate of choosen card\n                     </Typography>\n           <Divider />\n            {cards.map((card,i) => \n                \n                <div>{card.id !== flashcard.id ? \n                    <div>\n                    <CheckCard card={card} index={i+1} isDuplicate={duplicateCards.includes(card.id)} editDuplicates={editDuplicates}/>  \n                   <Divider />\n                    </div>\n                    : \"\"}\n                </div>                \n            )}      \n\n            <div style={{marginTop: \"50px\"}}>   \n                <Button \n                    variant=\"contained\" \n                    onClick={onClose} \n                    fullWidth \n                    color=\"primary\" \n                > Close</Button>\n            </div>\n\n        </div>    \n        </Popover>\n\n    )\n}\n\nexport default MarkAsDuplicatedDialog","\nimport { Button, Card, Tooltip, Grid, IconButton, Typography, Box, TextField } from '@material-ui/core';\nimport Rating from '@material-ui/lab/Rating';\n\n\n\nimport SaveIcon from '@material-ui/icons/Save';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport { makeStyles } from '@material-ui/core';\nimport { useState } from 'react';\nimport MoodBadIcon from '@material-ui/icons/MoodBad';\nimport { getRating, saveRating } from '../../store/actions/ratingActions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport ratingReducer from '../../store/reducers/ratingReducer';\nimport loadingReducer from '../../store/reducers/loadingReducer';\nimport Loading from '../notifications/loading';\nimport { SET_ALERT } from '../../store/actionTypes';\nimport MarkAsDuplicatedDialog from '../dialogs/markAsDuplicateDialog';\nimport DivHTMLSanatized from './divHTMLSanitized';\nconst useStyles = makeStyles(theme => ({\n    duplicateButton: {\n        fontSize: \"10px\",\n        marginTop: \"10px\"\n    },\n    marked: {\n        backgroundColor: theme.palette.backgroundHover,\n    },\n    body:{\n        minHeight: \"100px\",\n    }\n}))\n\nconst difficultyLabels = {\n    0.5: 'Extremely Easy',\n    1: 'Very Easy',\n    1.5: 'Easy',\n    2: 'A Little Easy',\n    2.5: 'Ok',\n    3: 'Ok+',\n    3.5: 'A Little Hard',\n    4.0: 'Hard',\n    4.5: 'Very Hard',\n    5: 'Extremely Hard',\n  };\n\n  const qualityLabels = {\n    0.5: 'Useless',\n    1: 'Useless+',\n    1.5: 'Poor',\n    2: 'Poor+',\n    2.5: 'Ok',\n    3: 'Ok+',\n    3.5: 'Good',\n    4: 'Good+',\n    4.5: 'Excellent',\n    5: 'Excellent+',\n  };\n\nconst RateCard = ({card, index, save, previewCard, cardIdToIndex}) => {\n\n    const classes = useStyles()\n    const [flipped, setFlipped] = useState(false);\n\n    const [difficulty, setDifficulty] = useState(0)\n    const [hoverDifficulty, setHoverDifficulty] = useState(-1);\n    \n\n    const [relevance, setRelevance] = useState(0)\n    const [saveDate, setSaveDate] = useState(\"\");\n\n    const [duplicateCardIds, setDuplicateCardIds] = useState([])\n    const [openMarkAsDuplicated, setOpenMarkAsDuplicated] = useState(false)\n    const loading = useSelector(state => state.loadingReducer.loading)\n\n\n    const [quality, setQuality] = useState(0)\n    const [hoverQuality, setHoverQuality] = useState(-1);\n    const dispatch = useDispatch() \n\n    const rating = useSelector(state => state.ratingReducer.ratings.find(rating => rating.card_id == card.id))\n    \n    \n\n    useEffect(() => {\n        console.log(\"fml\")\n        dispatch(getRating(card.id))     \n    }, [])\n\n\n    useEffect(() => {\n        if (rating){\n            setDifficulty(rating.difficulty)    \n            setQuality(rating.quality_rating)\n            setSaveDate(rating.savedatestring)\n            console.log(\"hiiieeer\")\n            console.log(rating)\n            setDuplicateCardIds(rating.duplicates)\n        }\n    }, [rating])\n\n    useEffect(() => {\n        if(save){\n            submitRating()\n        }\n    }, [save])\n\n    const markAsDuplicate = () => {\n        setOpenMarkAsDuplicated(true)\n    }\n\n    const submitRating = () => {\n\n        if (difficulty && quality){\n            console.log(\"rate this card\")\n            const rating = {\n                difficulty,\n                quality,\n                duplicateCardIds,\n                cardId: card.id\n            }                  \n            dispatch(saveRating({rating, cardNumber: index}))\n            }\n        else {\n        }\n    }\n\n    return(\n        <Box className={openMarkAsDuplicated ? classes.marked : \"\"} style={{padding: \"20px 10px\"}}>\n        <Grid className={classes.container} container spacing={2} >\n                <MarkAsDuplicatedDialog \n                    open={openMarkAsDuplicated} \n                    onClose={()=>setOpenMarkAsDuplicated(false)}\n                    duplicateCards={duplicateCardIds} \n                    setDuplicateCards={setDuplicateCardIds}\n                    flashcard={card}\n                      />\n                \n                <Grid item xs={1}>       \n                        <Typography variant=\"subtitle2\">#</Typography>\n                        <Typography variant=\"body2\">{index}</Typography>\n                </Grid>\n                <Grid item xs={4}>       \n                        <Typography variant=\"subtitle2\">Question</Typography>\n                        <Typography variant=\"body2\">                      \n                                <DivHTMLSanatized text={card.front} style={{overflow: \"hidden\"}}/>\n                        </Typography>\n                </Grid>\n                \n                <Grid item xs={4} >       \n                        <Typography variant=\"subtitle2\">{flipped ? \"Answer\" : \"Reveal Answer\"}</Typography>\n                        {flipped ? \n                            <Typography className={classes.body} variant=\"body2\"> {flipped ?     \n                                <DivHTMLSanatized text={card.back} style={{overflow: \"hidden\"}}/>\n                                : \"\" }</Typography>\n                        :\n                            <div></div>\n                        }\n\n\n                        <Tooltip title={flipped ? \"Hide Answer\" : \"Reveal Answer\"} placement=\"right\">\n                            <IconButton onClick={() => setFlipped(!flipped)} variant={\"outlined\"}  className={classes.revealButton} size=\"small\">                           \n                                {flipped ? <VisibilityOffIcon size=\"small\" color=\"primary\" /> : <VisibilityIcon size=\"small\"  color=\"primary\"/>}\n                            </IconButton>\n                        </Tooltip>\n                        \n                        \n                </Grid>\n                <Grid item xs={3}>       \n                        <Typography variant=\"subtitle2\">Rate</Typography> \n                        <Typography variant=\"body2\"> Difficulty</Typography> \n\n                        <Tooltip title={difficultyLabels[hoverDifficulty]} placement=\"right\"> \n                            <Rating \n                                value={difficulty/2}\n                                precision={0.5}\n                                size=\"small\"\n                                onChange={(event, newValue) => {\n                                    setDifficulty(2*newValue);\n                                }}\n                                onChangeActive={(event, newHover) => {\n                                    setHoverDifficulty(newHover);\n                                }}\n                            />\n                        </Tooltip>\n\n\n                        {/* {difficulty/2 !== null && <Box ml={2}>{difficultyLabels[hovedDifficulty !== -1 ? hovedDifficulty : difficulty/2]}</Box>}  */}\n                        \n                        <Typography variant=\"body2\">Relevance and Quality</Typography> \n                        <Tooltip title={qualityLabels[hoverQuality]} placement=\"right\"> \n                            <Rating \n                                value={quality/2}\n                                precision={0.5}\n                                size=\"small\"\n                                onChange={(event, newValue) => {\n                                    setQuality(2*newValue);\n                                }}\n                                onChangeActive={(event, newHover) => {\n                                    setHoverQuality(newHover);\n                                }}\n                            />\n                        </Tooltip>\n\n                        {/* <Typography variant=\"body2\">Overall quality</Typography> \n                        <Rating \n                            value={quality}\n                            precision={0.5}\n                            size=\"small\"\n                            onChange={(event, newValue) => {\n                                setQuality(newValue);\n                            }}\n                        /> */}  \n                        <Typography variant=\"body2\">Duplicate Card{duplicateCardIds.length >= 2 ? \"s\" : \"\"}: </Typography> \n                        <Box  style={{minHeight: \"30px\", minWidth: \"30px\"}}>\n                        <Typography variant=\"body2\" color=\"textSecondary\">{duplicateCardIds.map(d => <b>#{cardIdToIndex(d)}{\", \"}</b>)} </Typography> \n                        </Box>\n                            \n\n                         <Button className={classes.duplicateButton} onClick={markAsDuplicate} variant=\"contained\" color=\"primary\" fullWidth endIcon={<MoodBadIcon />} >                           \n                            Mark as duplicate\n                        </Button>\n\n\n                </Grid>\n\n                <Grid item xs={9} >\n                    <Typography variant=\"caption\" color=\"textSecondary\" >{saveDate ? \"Last saved \"+saveDate : \"\"} </Typography> \n                </Grid>\n                <Grid item xs={3} >\n                        <Button fullWidth variant=\"outlined\" color=\"secondary\" onClick = {() => previewCard(card)} endIcon={<VisibilityIcon /> }>\n                            Full Card View\n                        </Button>\n                </Grid>\n                        \n                {/* <Grid item xs={2} style={{textAlign: \"center\"}}>     \n                    <Typography variant=\"subtitle2\">Save Rating</Typography>  \n                    <IconButton size=\"small\" color=\"primary\" onClick={submitRating}>\n                        {loading  ? <Loading color=\"primary\" size=\"24px\"  /> : <SaveIcon size=\"small\"/>} \n                    </IconButton> \n                </Grid> */}\n        </Grid>\n        </Box>\n    )\n}\n\nexport default RateCard","\nimport axios from 'axios';\nimport { CREATE_RATING, LOAD_RATINGS, SET_ALERT, SET_LOADING } from '../actionTypes';\nimport { refreshTokens } from './authActions';\n\nexport const saveRating = ({rating, cardNumber}) => async( dispatch, getState) => {\n    dispatch({type: SET_LOADING, payload: true})   \n    await refreshTokens()     \n    await axios.post(\"/api/currentuser/cardrating/\"+rating.cardId, {\n            difficulty: rating.difficulty,\n            quality: rating.quality,\n            cardId: rating.cardId,\n            duplicateCardIds: rating.duplicateCardIds.join()\n        }, {\n            headers: {\n                Authorization: \"Bearer \" + localStorage.getItem(\"user_token\")\n            }\n        })\n        .then(res => {\n            if(res.data.error){\n                throw new Error(res.data.error)\n            }\n            console.log(\"returned\")\n            console.log(res.data)\n            \n           \n            const createdRating = res.data\n\n            console.log(\"was created, \", createdRating)\n            let alert = {severity: \"success\", text: \"Ratings saved successfully\"}\n            dispatch({type: SET_ALERT, payload: alert})\n            dispatch({type: CREATE_RATING, payload: createdRating})\n        })\n        .catch(err => {\n            console.log(\"This is an error yes plz\")\n            let alert = {severity: \"error\", text: err.toString()}\n            dispatch({type: SET_ALERT, payload: alert})\n            // dispatch({type: CREATE_CARDGROUP_ERROR, err})\n        })\n\n    console.log(\"async call up in hier\", rating)\n    dispatch({type: SET_LOADING, payload: false})\n    \n};\n\nexport const getRating = (cardId) => async( dispatch, getState) => {\n    await refreshTokens()\n        \n    await axios.get(\"/api/currentuser/cardrating/\"+cardId, \n         {\n            headers: {\n                Authorization: \"Bearer \" + localStorage.getItem(\"user_token\")\n            }\n        })\n        .then(res => {\n            if(res.data.error){\n                throw new Error(res.data.error)\n            }\n            console.log(\"returned\")\n            console.log(res.data)\n\n            if (res.data.status !== \"no rating\")\n            {\n           \n                const foundRating = res.data\n\n                console.log(\"was found, \", foundRating)\n                // let alert = {severity: \"success\", text: \"Saved rating on card: \"+cardNumber}\n                // dispatch({type: SET_ALERT, payload: alert})\n                dispatch({type: CREATE_RATING, payload: foundRating})\n            }\n        })\n        .catch(err => {\n            console.log(\"Not found\")\n            // let alert = {severity: \"error\", text: err.toString()}\n            // dispatch({type: SET_ALERT, payload: alert})\n            // dispatch({type: CREATE_CARDGROUP_ERROR, err})\n        })\n\n    // console.log(\"async call up in hier\", rating)\n    \n};\n\n\nexport const getRatingsInPeerreview = (peerreviewid) => async( dispatch, getState) => {\n    await refreshTokens()\n    console.log(\"Is this aused\")\n    await axios.get(`/api/currentuser/peerreview/${peerreviewid}/cardratings`, \n         {\n            headers: {\n                Authorization: \"Bearer \" + localStorage.getItem(\"user_token\")\n            }\n        })\n        .then(res => {\n\n            console.log(\"hes\")\n\n            if(res.data.error){\n                throw new Error(res.data.error)\n            }\n            console.log(\"returned\")\n            console.log(res.data)\n\n            \n           \n            const foundRatings = res.data\n\n            console.log(\"was found getratingsinpeererview, \", foundRatings)\n            // let alert = {severity: \"success\", text: \"Saved rating on card: \"+cardNumber}\n            // dispatch({type: SET_ALERT, payload: alert})\n            dispatch({type: LOAD_RATINGS, payload: foundRatings})\n            \n        })\n        .catch(err => {\n            console.log(\"Not found\")\n            // let alert = {severity: \"error\", text: err.toString()}\n            // dispatch({type: SET_ALERT, payload: alert})\n            // dispatch({type: CREATE_CARDGROUP_ERROR, err})\n        })\n\n    // console.log(\"async call up in hier\", rating)\n    \n};\n\n","\nimport { useSelector } from 'react-redux';\nimport React, {useState} from \"react\"\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { loadCards, loadCardgroupFlashcards, loadPeerReviewFlashcards, clearCardReducer } from '../../store/actions/cardActions';\nimport RateCard from '../submodules/rateCard';\nimport { Box, Button, Divider, Grid, makeStyles, Typography } from '@material-ui/core';\nimport { PageWrapper } from \"../../static/wrappers\";\nimport { loadCardgroup } from '../../store/actions/cardgroupActions';\nimport Loading from '../notifications/loading';\nimport loadingReducer from '../../store/reducers/loadingReducer';\nimport  SaveIcon  from '@material-ui/icons/Save';\nimport CardgroupSelect from '../submodules/cardgroupselect';\nimport { loadPeerreview } from '../../store/actions/peerreviewActions';\nimport Progress from '../submodules/progress';\nimport ratingReducer from '../../store/reducers/ratingReducer';\nimport { getRatingsInPeerreview } from '../../store/actions/ratingActions';\nimport CardPreviewDialog from '../dialogs/cardPreviewDialog';\n\nconst useStyles = makeStyles(theme => ({\n    savebutton: {\n        // margin: theme.spacing.unit, // You might not need this now\n        // position: \"fixed\",\n        // width: \"300px\",\n        // bottom: theme.spacing.unit * 2\n      },\n}))\n\nconst PeerReviewGroup = (props) =>{\n\n    const classes = useStyles()\n\n    const peerreviewId = props.match.params.id\n\n\n    const ratings = useSelector(state => state.ratingReducer.ratings)\n    const [save, setSave] = useState(false) \n\n    const [previewCard, setPreviewCard] = useState({})\n    const [openPreview, setOpenPreview] = useState(false)\n\n    const dispatch = useDispatch() \n    useEffect(() => {\n        dispatch(clearCardReducer())\n        dispatch(loadPeerreview(peerreviewId))\n        dispatch(loadPeerReviewFlashcards(peerreviewId))  \n        dispatch(getRatingsInPeerreview(peerreviewId))\n    }, [])\n\n    const cards = useSelector(state => state.cardReducer.cards)\n    const peerreview = useSelector(state => state.peerreviewReducer.peerreviews[0])\n\n\n    console.log(\"mhmhmhm\")\n\n    const loading = useSelector(state => state.loadingReducer.loading)\n\n    useEffect(() => {\n        if (!loading){\n            setSave(false)\n        }\n    }, [loading])\n\n    useEffect(() => {\n        console.log(\"tiss\")\n        console.log(ratings)\n    }, [ratings])\n\n    const saveAllRatings = () => {\n        console.log(\"save...\")\n        setSave(true)\n    }\n\n    const testFunc = props => {\n        console.log(\"test:\", props)\n    }\n\n    const openPreviewCard = card => {\n        setPreviewCard(card)\n        setOpenPreview(true)   \n    }\n\n    const cardIdToIndex = id => {\n        console.log(id)\n        return cards.map(function(x) {return x.id; }).indexOf(id)+1;\n    }\n    \n\n    if (!cards.length){\n        return(\n            <PageWrapper>\n                <Loading />\n            </PageWrapper>\n        )\n    }\n    else {\n        return (\n            <PageWrapper>\n                <CardPreviewDialog open={openPreview} onClose={() => setOpenPreview(false)} card={previewCard}  />\n                <Typography  variant=\"h4\" >Peer Review of Cards from </Typography>\n                <Typography  variant=\"h4\" >{peerreview.cardgroup.title}</Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                {peerreview.reviewsDue} cards are due to be rated. Read the question, attempt to answer it to yourself, \n                then you may reveal the answer. After testing the card, you are to rate the card<br/> \n                    If the card is hard to read, press \"FULL CARD VIEW\"  button for a full preview of the card. <br/>\n                    <u>Remember to save ratings before exiting this page.</u>\n                    <br/><br/>\n                    <b>Level of Difficulty</b> A rating on the difficulty of the card. From extremely easy to extremely hard.<br/>\n                    <b>Relevance and Quality</b> A rating of how relevant the card is to the course curriculum and the quality of the flashcard. Will studying\n                     this card be useful for learning the course material? Is the question well-phrased? Is it too long and complex? Is it original?\n                    <br/>\n                    <b>Mark as Duplicate</b>  If two or more cards are very similar or duplicate of each other, press \"mark as duplicate\" on one of the cards and\n                     choose one or more of the other cards.\n                     <br/> <br/>\n\n                    {/* <b>Overall quality</b> The overall quality of the flashcard. Is the question well phrased? Is it too long and complex? Is it original? This rating can be more subjective. <br/> */}\n\n                </Typography>\n                    <Progress x={ratings.length} y={peerreview.reviewsDue} body=\"Card ratings submitted\" style={{width: \"300px\", marginLeft: \"auto\", marginBottom: \"30px\"}} />\n                <Divider />\n                \n                {cards.length ? \n                \n                cards.map((card, i) => \n                    <React.Fragment>\n                        <RateCard key={card.id} card={card} index={i+1} save={save} cardIdToIndex={cardIdToIndex} previewCard={openPreviewCard}  />\n                        <Divider />\n                    </React.Fragment>\n                ) : <div>empty</div>}\n                \n                <div style={{margin: \"10px\", textAlign: \"left\"}}>\n{/*                 \n                <Grid container spacing={2}>\n                    <Grid item xs={12}>     */}\n                    <div style={{padding: \"0 200px\"}}>\n                    <Button color=\"primary\" fullWidth variant=\"contained\" onClick={saveAllRatings}  className={classes.savebutton}>\n                        Save Ratings<Loading style={{marginLeft: \"10px\", height: \"26px\", }} size={24} alternative={<SaveIcon />} /> \n                    </Button> <br/>\n                    </div>\n                    \n                    {/* </Grid>\n                    <Grid item xs={6}> \n                    </Grid>\n                </Grid> */}\n\n                </div>\n            </PageWrapper>\n        )\n    }\n}\n\nexport default PeerReviewGroup","\n\nimport { Divider, Grid, Typography } from \"@material-ui/core\"\nimport React from \"react\"\nimport { PageWrapper } from \"../../static/wrappers\";\n\n\nconst Study = () => {\n\n\n\n\n    return (\n        <PageWrapper>\n            <Grid container spacing={2} >\n                <Grid item xs={12}>\n                    <Typography variant=\"h4\" gutterBottom> Study - Coming Soon... </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\">\n                    Page for studying cards.                     <br/> \n                    Todo:<br/>\n\n                    <ul>\n                        <li>Spaced Repition review</li>\n                        <li>\"random\" cards review from each chapter</li>\n                    </ul>\n\n                    {/* <b>Overall quality</b> The overall quality of the flashcard. Is the question well phrased? Is it too long and complex? Is it original? This rating can be more subjective. <br/> */}\n\n                </Typography>\n                </Grid>\n                <Grid item xs={12}>\n                    <Divider />\n                </Grid>\n            </Grid>\n        </PageWrapper>\n    )\n}\n\nexport default Study","import { Dialog, Button, makeStyles, IconButton, Tooltip } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport FeedbackIcon from '@material-ui/icons/Feedback';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles(theme => ({\n    dialog: {\n        \"& .MuiDialog-paperScrollPaper\": {\n            maxHeight: \"100vh\",\n            maxWidth: \"100%\"\n        },\n    }\n}))\n\nconst Feedback = ({buttonstyle, dialogstyle}) => {\n\n    const [open, setOpen] = useState(false)\n    const classes = useStyles()\n \n\n    return(\n        <div>\n            <Button variant=\"contained\" color=\"primary\" fullWidth onClick={() => setOpen(true)} endIcon={<FeedbackIcon />} >Send Feedback</Button>\n            <Dialog onClose={() => setOpen(false)}  \n                open={open} \n                className={classes.dialog}\n                style={buttonstyle}\n        //    anchorOrigin={{vertical: \"top\", horizontal: \"right\"}}\n        >    \n\n            <div style={{marginLeft: \"auto\"}}>\n                <Tooltip title=\"Close\">\n                    <IconButton onClick={() =>setOpen(false)}>\n                        <CloseIcon />\n                    </IconButton>\n                </Tooltip>\n            </div>\n\n            <div style={{margin: \"20px 0\"}}>\n            <iframe src=\"https://docs.google.com/forms/d/e/1FAIpQLSeNwVsGczbV1229hlstKRI56IT8rCP6SMuAJzC0nuAxKoUMbg/viewform?embedded=true\" width=\"640\" height=\"587\" frameborder=\"0\" marginheight=\"0\" marginwidth=\"0\">Loading…</iframe>\n            </div>\n\n            </Dialog>\n        </div>\n\n    )\n}\n\nexport default Feedback","\nimport { Grid, Typography, Divider, Link, Button } from '@material-ui/core';\n\n\nimport { PageWrapper } from '../../static/wrappers';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\nimport { Link as ReactLink } from 'react-router-dom';\nimport Feedback from '../dialogs/feedback';\nimport { useState } from 'react';\n\n\nconst Home = () => {\n\n    const [openFeedback, setOpenFeedback] = useState(false)\n\n    return(\n        <PageWrapper>\n            <Grid container spacing={2}>\n                <Grid item xs={12}  >\n                    <Typography variant=\"h4\" gutterBottom >\n                        Home\n                    </Typography>\n                </Grid> \n                <Grid item xs={12}>\n                    <Divider />\n                </Grid> \n                <Grid item xs={12}>\n                    <Typography variant=\"body2\" color=\"textSecondary\">\n                        <b>About:</b> <br/>\n                        This application will be used to build a collective deck of quality flashcards, covering the curriculum of TTK4145 - Real-time Programming.\n                        <br /> <br />\n                        During the semester you are tasked with creating 2-5 flashcards for specific parts of the course material. Through peer review, the best flashcards will be selected to be added to the collective deck. \n                        You will be rewarded for creating original, quality flashcards. \n                        <br /> <br/> \n                        Keep flashcards simple. Flashcards can be written as pure text or with HTML syntax. If you are new to HTML, <ReactLink to=\"/htmlguide\" color=\"primary\"> <Link color=\"textPrimary\">check out this basic guide </Link></ReactLink>\n                        <br /> <br/>                                                                                                \n                        <span>You will be able to use the collective deck to study the course material, either a random sample or through spaced repetition, which is recommended. </span>\n                         <Link color=\"textPrimary\" href=\"https://en.wikipedia.org/wiki/Spaced_repetition\">Read more about spaced repetition here</Link>  \n                        <br/> <br />\n                        Please submit feedback, suggestions or report bugs with the button below\n\n                        <div style={{margin: \"40px 50px 0px\"}}>\n                        <Feedback />\n                        </div>\n                                               \n                    </Typography>\n                </Grid>\n                <Grid item xs={12} style={{marginTop: \"50px\"}}>\n                    <Typography variant=\"body2\" color=\"textSecondary\">\n                                <b>Contact:</b>                                                           \n                    </Typography>                                       \n                </Grid>\n\n                <Grid item xs={4}>\n                    <Typography variant=\"body2\" color=\"textSecondary\">\n                        <b>Asgeir Hunshamar</b> <br/>\n                        Creator and developer <br/>\n                        <a>asgeirhu@stud.ntnu.no</a>\n                    </Typography>\n                </Grid>\n                <Grid item xs={4}>\n                    <Typography variant=\"body2\" color=\"textSecondary\">\n                        <b>Sverre Hendseth</b> <br/>\n                        Course coordinator and lecturer <br/>\n                        <Link color=\"inherit\" href=\"mailto:sverre.hendseth@ntnu.no\">sverre.hendseth@ntnu.no</Link> \n                    </Typography>\n                </Grid>\n\n            </Grid>\n\n\n        </PageWrapper>\n    )\n}\n\nexport default Home","import { Divider, Grid, Typography, TextField, Box, Link,InputAdornment, Tooltip, IconButton , withStyles} from \"@material-ui/core\"\nimport { PageWrapper } from \"../../static/wrappers\" \nimport React, { useState } from 'react';\nimport RotateLeftIcon from '@material-ui/icons/RotateLeft';\nimport RotateLeft from \"@material-ui/icons/RotateLeft\";\nimport { styled } from '@material-ui/core/styles';\nimport { useRef } from \"react\";\nimport HTMLTextField from \"../submodules/HTMLTextField\";\n\n\n\nexport const TagTitle = styled(Box)({\n    fontWeight: \"bold\",\n    width: \"150px\",\n    display: \"inline-block\"\n})\n\n\n\nconst TagListItem = ({tag, desc}) => {\n    \n    return(\n        <React.Fragment>\n            <Grid item xs={6}>\n                {tag}\n            </Grid>  \n            <Grid item xs={6}>\n                {desc}\n            </Grid>  \n        </React.Fragment>\n    )\n}\n\nconst exampleString =   \n`   \n <div style=\"font-size: 70%\">\n    <h1> This is a Heading </h1>\n    <h2> This is a smaller Heading </h2>\n\n    <p>\n        This is a normal paragraph you can add <i> a italic text </i>, \n        <b> bold text </b>,<u> underlined text </u> <small> small \n        text </small>  with tags inside the paragraph.\n    </p>\n\n    <p \n        style=\"background-color: red; \n        color: white; \n        font-size: 12px; \n        text-align: center\"\n    >\n        You can add inline styling to paragraphs and other HTML tags. \n        Changing colors, font-size, alignment and more </br>\n        You can also add a break tag for... <br/> <br/>\n        ...new lines\n    </p>\n\n    <h2> You can also add images: </h2>\n\n    <p style=\"color: #404040\">\n        You need a url to images to add them. They can be resized by \n        setting the height and width property of the image tag   \n    </p>\n\n    <img \n        src=\"https://i.postimg.cc/ZRqR7dgZ/91-I89-Qh5-Jz-L.png\" \n        width=\"50%\" \n    />\n\n    <h2> Unordered list</h2>\n    <ul>\n        <li> List item 1 </li>  \n        <li> List item 2 </li>  \n    </ul>\n\n    <div style=\"text-align: left; color: purple\">\n        <p> \n            By default the HTML of the cards will be centered, wrap all or\n            some elements inside a div styled with 'text-align: left' to \n            bypass this \n        </p>\n        <h2> Ordered list, Aligned left </h2>\n        \n        <ol>\n            <li> List item 1 </li>  \n            <li> List item 2 </li>  \n        </ol>\n    </div>\n</div>\n`\n\nconst HTMLGuide = () => {\n\n    const [HTMLString, setHTMLString] = useState(exampleString)\n\n    const inputRef = useRef()\n\n    const addTabs = e => {\n        console.log(e.key)\n        if (e.key === \"Tab\"){\n            e.preventDefault()\n            console.log(inputRef)\n\n            const { selectionStart, selectionEnd } = e.target\n\n            const tab = \"\\t\"\n\n            const newHTMLString =\n              HTMLString.substring(0, selectionStart) +\n              tab+\n              HTMLString.substring(selectionEnd)\n\n            // setHTMLString(newHTMLString)\n            \n            inputRef.current.value = newHTMLString\n            setHTMLString(newHTMLString)\n\n            inputRef.current.selectionStart = inputRef.current.selectionEnd = selectionStart+tab.length\n            \n        }\n\n\n    }\n\n    return(\n        <PageWrapper>\n            <Grid container spacing={2}>\n                <Grid item xs={12}  >\n                    <Typography variant=\"h4\" gutterBottom >\n                        HTML Guide With Examples\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" >\n                        This is meant as a short guide for simple HTML / CSS that can be added to flashcards.\n                        Check out <Link color=\"textPrimary\" href=\"https://www.w3schools.com/html/\">W3schools HTML tutorial</Link> for a better tutorial and more examples\n                    </Typography>\n                </Grid> \n                <Grid item xs={12}>\n                    <Divider />\n                </Grid> \n                <Grid item xs={12}>\n                    <Typography variant=\"body2\" color=\"textSecondary\">\n                        <b>Usefull HTML components (Tags):</b> <br/>    \n                        <ul>\n                            <li><TagTitle>{\"<h1>...</h1>\"}</TagTitle>Headings - h1 is the largest. h6 is the smallest </li> \n                            <li><TagTitle>{\"<div>...</div>\"}</TagTitle>Division. Can be used as containers, to style multiple objects </li> \n                            <li><TagTitle>{\"<p>...</p>\"}</TagTitle>Paragraphs </li> \n                            <li><TagTitle>{\"<b>...</b>\"}</TagTitle><b>bold</b> </li> \n                            <li><TagTitle>{\"<i>...</i>\"}</TagTitle><i>Italics</i> </li> \n                            <li><TagTitle>{\"<u>...</u>\"}</TagTitle><u>Underlined</u> </li> \n                            <li><TagTitle>{\"<br/>\"}</TagTitle>Line Break </li> \n                            <li>\n                                <TagTitle>{'<img src=\"\">...</img>'}</TagTitle>\n                                 Image. Must be url. Recomended to use <Link  color=\"textPrimary\" href=\"https://postimages.org/\">postimages</Link>. \n                                Upload->copy Direct Link\n                            </li> \n                            <li><TagTitle>{\"<ul>...</ul>\"}</TagTitle>Unordered list </li> \n                            <li><TagTitle>{\"<ol>...</ol>\"}</TagTitle>Ordered list </li> \n                            <li><TagTitle>{\"<li>...</li>\"}</TagTitle>List item </li> \n                            <li><TagTitle>{\"<code>...</code>\"}</TagTitle>Code.  The content inside is displayed in the browser's default monospace font  </li> \n                        </ul>\n                    </Typography>\n                </Grid>         \n                \n                \n                {/* <Grid item xs={12}>\n                   <Divider />\n                </Grid> */}\n                <Grid item xs={12}>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                        <b>Styling:</b> <br/>   \n                        If you wish to style components, you can add a style prop.\n                        For example: <br/>\n                        <code>{'<p style=\"color: white; background-color: red\"> Hello </p>'}</code> <br/>\n                        will return a paragraph, with red background color and white text color.\n                        <br />\n                        Check out <Link color=\"textPrimary\" href=\"https://www.w3schools.com/html/html_css.asp\" >W3Schools CSS Tutorial     </Link>     <br/>    \n                        for more examples\n\n                        \n\n                        </Typography>\n                </Grid>\n\n                <Grid item xs={12}>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                        <b>Test:</b> <br/>   \n                        Below is an example with some HTML tags <br/>\n                        You are welcome to change the HTML in the textfield and try your own     <br/>\n                        A much  better alternative is to use <Link color=\"textPrimary\" href=\"https://www.w3schools.com/tryit/tryit.asp?filename=tryhtml_default\" >W3Schools Online HTML Code Editor     </Link>     <br/>    \n                        You can also create a HTML file in VS Code and open it using the web browser. <br/>\n                        Keep the HTML simple for flashcards.\n                    </Typography>\n                    </Grid>\n                        \n\n\n                    <Grid item xs={7} >\n                    <Typography variant=\"caption\" color=\"textSecondary\">\n                            <b>HTML Input:</b> <br/> \n                        </Typography>\n                <HTMLTextField \n                    onChange={setHTMLString} \n                    value={HTMLString}\n                    fullWidth \n                    required\n                    multiline\n\n                    InputProps={{                        \n                        style: {\n                            padding: \"2px\",\n                            fontSize: \"12px\"\n                        },\n                        endAdornment: <InputAdornment position=\"end\" style={{margin: \"auto 0 15px\"}}>\n                            <div>\n                                <Tooltip title=\"Reset Example\">\n                                    <IconButton onClick={e => setHTMLString(exampleString)} >\n                                        <RotateLeftIcon color=\"secondary\" />\n                                    </IconButton>\n                                </Tooltip>\n                            </div>\n                        </InputAdornment>,\n                    }}\n\n                />\n\n                </Grid>\n                <Grid item xs={5}>\n                    <Typography variant=\"caption\" color=\"textSecondary\">\n                            <b>HTML Result:</b> <br/> \n                        </Typography>\n                    <Box border={1} borderColor=\"secondary.light\" borderRadius={5} align=\"center\" style={{height: \"auto\", backgroundColor: \"white\", color: \"black\"}} >\n                        <div dangerouslySetInnerHTML={{__html: HTMLString}} />\n                    </Box>\n\n                </Grid>\n\n            </Grid>\n\n         </PageWrapper>\n    )\n}\n\nexport default HTMLGuide","import { PageWrapper } from \"../../static/wrappers\"\nimport { useDispatch, useSelector } from 'react-redux';\nimport userReducer from '../../store/reducers/userReducer';\nimport { useEffect } from 'react';\nimport {  getUsersStatus } from '../../store/actions/userActions';\nimport { DataGrid } from '@material-ui/data-grid';\nimport CardgroupSelect from '../submodules/cardgroupselect';\nimport { useState } from 'react';\nimport { Typography } from \"@material-ui/core\";\nimport { getCardgroupPeerreviews } from \"../../store/actions/peerreviewActions\";\nimport { dateJSONToString } from \"../../utils/datehandling\";\nimport RateCard from \"../submodules/rateCard\";\nimport Loading from \"../notifications/loading\";\n\n\n const AllPeerreviews = () => {\n\n    const dispatch = useDispatch()\n    // const users = useSelector(state => state.userReducer.users)\n    const peerreviews = useSelector(state => state.peerreviewReducer.peerreviews)\n\n    const [cardGroupId, setCardGroupId] = useState(0)\n\n    const loading = useSelector(state => state.loadingReducer.loading)\n\n\n    useEffect(() => {\n        dispatch(getCardgroupPeerreviews(cardGroupId))\n    }, [dispatch, cardGroupId])\n    \n    console.log(\"peerreviews\", peerreviews)\n\n    \n\n    const columns = [\n        { field: 'username', headerName: 'Username', width: 130 },\n        {\n          field: 'toRate',\n          headerName: 'To Rate',\n          type: 'number',\n          width: 130,\n        },\n        { field: 'rated', headerName: 'Rated', type: \"number\", width: 130 },    \n        { field: 'complete', headerName: 'Complete', type: \"number\", width: 130 },        \n    ]      \n\n    let rows = peerreviews.map(s => (\n        {\n            id: s.user.id, \n            username: s.user.username, \n            toRate: s.reviewsDue,\n            rated: s.reviewsDone,\n            complete: s.reviewsDue == s.reviewsDone ? true : false\n        }\n    ))\n\n    \n      \n    \n    console.log(\"cgid\", cardGroupId)\n    return (\n        <PageWrapper>       \n            <div style={{marginBottom: \"15px\"}} >\n                <CardgroupSelect onChange={setCardGroupId} showFirst/>\n            </div>\n\n\n            {loading ? <Loading /> :\n             \n            <div> \n\n                {peerreviews.length ? \n                <div>\n                    <Typography variant=\"subtitle2\" style={{marginTop: \"20px\"}}>\n                    {peerreviews[0] ? \"Due: \" + dateJSONToString(peerreviews[0].dueDate) : \"Due:\"}\n                    </Typography>\n\n                    <div style={{ height: 400, width: '100%' }}>\n                \n                        <DataGrid rows={rows} columns={columns} pageSize={10}  />\n                    </div>\n                </div> : \"No Peerreviews for this cardgroup\"}\n \n            </div>  }  \n            \n        </PageWrapper>\n    )\n}\n\nexport default AllPeerreviews\n","\nimport React, {useEffect} from \"react\"\nimport { BrowserRouter as Redirect, Route, Switch } from \"react-router-dom\";\n\nimport AddCards from \"./components/pages/addCards\"\nimport Login from \"./components/pages/login\"\nimport AllCards from './components/adminpages/allCards';\n// import CreateCardgroup from \"./components/createCardgroup\"\nimport logInFunc from './components/loginfunc';\nimport { checkLogInStatus } from \"./store/actions/authActions\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport CardGroupPage from './components/pages/cardGroupPage';\nimport { makeStyles } from \"@material-ui/core\";\nimport UserProfile from \"./components/pages/userProfile.js.js\";\nimport AdminCardGroupPage from './components/adminpages/adminCardgroupPage';\nimport Users from \"./components/adminpages/users\";\nimport AdminNavbar from './components/layout/adminNavbar';\nimport AdminPage from \"./components/adminpages/adminPage\";\nimport DeliveryStatus from './components/adminpages/deliveryStatus';\nimport PeerReview from \"./components/pages/peerreview\";\nimport PeerReviewGroup from \"./components/pages/peerReviewGroup\";\nimport Study from \"./components/pages/study\";\nimport Home from './components/pages/home';\nimport HTMLGuide from \"./components/pages/HTMLGuide\";\nimport AllPeerreviews from \"./components/adminpages/allPeerreviews\";\n\n\n\nconst useStyles = makeStyles(theme => ({\n    // pages: {\n    //     paddingLeft: \"auto\",H\n    //     paddingRight: \"auto\",\n    //     alignItems: \"center\",\n    //     display: \"flex\",\n    //     paddingTop: theme.values.siteTopMargin        \n    // }\n\n})); \n\nconst FML = () => {\n\n    return (\n        <div>FML</div>\n    )\n}\n\nconst Routes = () => {\n\n    const classes = useStyles()\n    const loggedIn = useSelector(state => state.authReducer.loggedIn)\n    const isAdmin = useSelector(state => state.authReducer.isAdmin)\n    const dispatch = useDispatch();     \n    \n    useEffect(() => {\n        dispatch(checkLogInStatus())\n        console.log(\"is logged\", loggedIn)\n        console.log(\"is admin\", isAdmin)            \n        \n    }, [loggedIn, dispatch])   \n\n    // get log in status\n\n   \n\n    return(\n        <div className={classes.pages}>\n            <Switch>\n                <Route path=\"/\" exact component={loggedIn ? Home : Login}/>\n                <Route path=\"/loginfunc\" exact component={logInFunc}/>\n                <Route path=\"/htmlguide\" exact component={ HTMLGuide} />\n\n                {loggedIn ? \n                <React.Fragment>\n\n                    <Route path=\"/addcards\" exact component={AddCards}/>\n                    <Route path=\"/cardgroup/:id\" exact component={CardGroupPage} />\n                    <Route path=\"/peerreview\" exact component={PeerReview}/>\n                    <Route path=\"/peerreview/:id\" exact component={PeerReviewGroup}/>\n                    <Route path=\"/study\" exact component={Study}/>\n                    <Route path=\"/about\" exact component={ FML} />\n                    <Route path=\"/userprofile/:username\" exact component={UserProfile} />\n                    {isAdmin ? \n                    <React.Fragment>\n                        {/* <Route path=\"/adminpage\" exact component={AdminPage} /> */}\n                    \n                        <Route\n                            path=\"/adminpage\"\n                            render={({ match: { url } }) => (\n                            <>\n                                <AdminNavbar />    \n                                <Route path={`${url}/`} exact component={AdminPage}  />\n                                <Route path={`${url}/users`} exact component={Users} />\n                                <Route path={`${url}/deliverystatus`} exact component={DeliveryStatus} />\n                                <Route path={`${url}/allcards`} exact component={AllCards} />\n                                <Route path={`${url}/peerreviews`} exact component={AllPeerreviews} />\n                            </>\n                            )}\n                        />\n                    </React.Fragment>\n                     :    \n                    <React.Fragment>\n                    </React.Fragment>}\n                </React.Fragment> : <div></div>}\n            </Switch>\n        </div>\n    )\n}\n\nexport default Routes","import { createMuiTheme } from '@material-ui/core/styles';\n\n\n\nimport blue from '@material-ui/core/colors/blue';\n// import red from '@material-ui/core/colors/red';\n// import yellow from '@material-ui/core/colors/yellow';\n// import green from '@material-ui/core/colors/green';\nimport {grey} from '@material-ui/core/colors/';\n\nexport const darkTheme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    textColor: \"#fff\",\n\n    background: {\n      default: \"#303030\"\n    },\n    backgroundHover: \"#202020\",\n    \n\n\n    primary: {\n      main: \"#171717\"\n    },\n    secondary: {\n      main: \"#000\"\n    },\n\n    button: {\n      main: blue[500],\n      success: {\n        main: \"#078900\",\n        dark: \"#0ab500\"\n      }, \n      error: {\n        main: \"#000\" \n      }\n    },\n    hover: \"f0f0f0\",\n  },\n  values: {\n    siteSideMargin: \"25%\",\n    siteTopMargin: \"75px\"\n  }  \n  \n});\n\nexport const theme = createMuiTheme({\n  root: {\n    // marginLeft: \"100px\"\n  },\n\n  palette: {\n\n    background: {\n      default: \"#fafafa\",\n    },\n    backgroundHover: \"#f1f1f1\",\n\n    primary: { \n        // light: will be calculated from palette.primary.main,\n        main: \"#00509e\",\n        // dark: will be calculated from palette.primary.main,\n        // contrastText: will be calculated to contrast with palette.primary.main\n    },\n    secondary: { \n      main: grey[500],\n    },\n    textColor: \"#000\",\n    button: {\n      main: blue[500],\n      success: {\n        main: \"#078900\",\n        dark: \"#0ab500\"\n      },\n      error: {\n        main: \"#931A00\" ,\n        dark: \"#60190B\"\n      }\n    },\n    hover: \"f0f0f0\",\n  },\n  values: {\n    siteSideMargin: \"25%\",\n    siteTopMargin: \"75px\"\n  }\n\n});\n\n\n\n  \n\n","\nimport React, {useEffect} from \"react\"\nimport {Alert} from '@material-ui/lab/';\nimport { useSelector } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { useDispatch } from 'react-redux';\nimport { CLEAR_ALERT } from \"../../store/actionTypes\";\n\n\n\nconst Alerter = () => {\n\n    const severity = useSelector(state => state.alertReducer.severity)\n    const text = useSelector(state => state.alertReducer.text)\n    const newAlert = useSelector(state => state.alertReducer.newAlert)\n    \n    const [open, setOpen] = React.useState(false);\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n      if (newAlert){\n        setOpen(true)\n        dispatch({type: CLEAR_ALERT})\n      }\n    }, [newAlert])\n  \n    const handleClose = (event, reason) => {\n      if (reason === 'clickaway') {\n        return;\n      }  \n      setOpen(false);\n    };\n  \n    \n    return(\n        \n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n            <Alert \n                onClose={handleClose}\n                severity={severity}\n            >{text}\n            </Alert>                \n      </Snackbar>\n    )\n}\n\nexport default Alerter","\nimport React, { useEffect } from \"react\"\nimport Navbar from \"./components/layout/navbar\"\nimport Routes from \"./routes\"\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\nimport {theme, darkTheme} from \"./static/theme\"\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Alerter from './components/notifications/alerter';\nimport Footer from \"./components/layout/footer\";\n\n\nconst App = () => {\n\n  const [darkMode, setDarkMode] = React.useState(false)\n\n  useEffect(() => {    \n    const darkMode = sessionStorage.getItem(\"dark-mode\")\n    console.log(\"init darkmode\", darkMode)\n    if (!darkMode){\n      sessionStorage.setItem(\"dark-mode\", \"false\")\n    } \n    else if (darkMode === \"true\"){\n      setDarkMode(true)\n    }\n  }, [])\n\n  const toggleDarkMode = () => {\n    const darkMode = sessionStorage.getItem(\"dark-mode\")\n    console.log(darkMode)\n    if (darkMode === \"true\"){\n      setDarkMode(false)\n      sessionStorage.setItem(\"dark-mode\", \"false\")\n    }\n    else if (darkMode === \"false\"){\n      setDarkMode(true)\n      sessionStorage.setItem(\"dark-mode\", \"true\")\n    }\n  }\n\n    return(\n      <MuiThemeProvider theme={darkMode ? darkTheme : theme}>\n        <CssBaseline />\n        <Router>\n          <Navbar  setDarkMode={toggleDarkMode}/>\n          <Alerter /> \n          <Routes />   \n          {/* <Footer /> */}\n        </Router>\n        {/* <Feedback /> */}\n    </MuiThemeProvider>\n\n    )\n}\n\nexport default App","\nimport { AppBar, makeStyles } from '@material-ui/core';\nimport { NavBarWrapper } from '../../static/wrappers';\nimport { Toolbar } from '@material-ui/core/';\n\n\nconst useStyles = makeStyles(theme => ({\n\n    footer: {\n        display: \"flex\",\n        minHeight: \"100px\",\n        flexDirection: \"column\"\n    },\n    navbar: {\n        backgroundColor: \"grey\",\n        color: \"white\",\n        textColor: \"white\",\n    }\n}))\n\n\n\nconst Footer = () => {\n\n    const classes = useStyles()\n\n    return(\n        <AppBar position=\"static\" className={classes.navbar}>\n\n        <NavBarWrapper className={classes.navbar}>\n        <Toolbar position=\"static\">\n            This is the footer  \n        </Toolbar>\n        </NavBarWrapper>\n        </AppBar> \n    )\n}\n\n\nexport default Footer","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { CREATE_CARD, CREATE_CARD_ERROR, DELETE_CARD, DELETE_CARD_ERROR, LOAD_CARD, LOAD_CARDS,CLEAR_CARDS } from \"../actionTypes\"\n\nconst initState = {\n    cards: [\n       \n    ]\n}\n\nconst cardReducer = (state = initState, action) => {\n    switch(action.type) {\n        case CREATE_CARD:\n            console.log(\"created card\", action.payload)\n            // alert(action.err)\n\n            console.log(state)\n            console.log({ \n                ...state,\n                cards: [...state.cards, action.payload],\n            })\n\n            return { \n                ...state,\n                cards: [...state.cards, action.payload],\n            }\n        // case EDIT_CARD:\n        \n\n        case CREATE_CARD_ERROR:\n            return { \n                ...state,\n            }\n        case LOAD_CARD:\n            console.log(\"got card\", action.payload)\n            return {\n                ...state, \n                cards: action.payload,\n            }\n        \n        case LOAD_CARDS:\n            console.log(\"got cards\", action.payload)\n            console.log({...state, cards: action.payload})\n            return {\n                ...state, \n                cards: action.payload,\n            }\n        case DELETE_CARD:\n            console.log(\"deleting dem cards\")\n            console.log(state.cards)\n            console.log(state.cards.filter(card => card.id !== action.payload.id))\n           \n\n            return { \n                ...state,\n                cards: state.cards.filter((card) => card.id !== action.payload.id),\n            }\n            // return state;\n        case \"CLEAR_CARDS\":\n\n            console.log(\"faen\")\n\n            return{\n                cards: []\n            }\n        \n        case DELETE_CARD_ERROR:\n            return state\n            // return state\n        \n        default:\n            return state;\n    }\n}\n\nexport default cardReducer","\nimport { CREATE_CARDGROUP, CREATE_CARDGROUP_ERROR, DELETE_CARDGROUP, LOAD_CARDGROUPS, DELETE_CARDGROUP_ERROR, EDIT_CARDGROUP, LOAD_CARDGROUP } from '../actionTypes';\n\nconst initState = {\n    success: null,\n    cardgroups: [\n       \n    ]\n}\n\nconst cardgroupReducer = (state = initState, action) => {\n    switch(action.type) {\n        case CREATE_CARDGROUP:\n            console.log(\"created cardgroup\", action.payload)\n\n            console.log(state)\n            console.log({ \n                ...state,\n                cardgroups: [...state.cardgroups, action.payload]   \n            })\n\n            return { \n                ...state,\n                cardgroups: [...state.cardgroups, action.payload]\n            }\n        case CREATE_CARDGROUP_ERROR:\n            return state\n        case LOAD_CARDGROUPS:\n            console.log(\"got cardgroups\", action.payload)\n            console.log({...state, cardgroups: action.payload})\n            return {\n                ...state, \n                cardgroups: action.payload\n            }\n        case LOAD_CARDGROUP:\n            console.log(\"cardgroup\", action.payload)\n            return{\n                ...state,\n                cardgroups: action.payload\n            }\n\n        case EDIT_CARDGROUP:\n            console.log(\"edit\")\n            return{\n                ...state,\n                cardgroups: state.cardgroups.map(group => {\n                    if (group.id === action.payload.id){\n                        return action.payload\n                    }\n                    else{\n                        return group\n                    }\n                })    \n            }\n\n        case DELETE_CARDGROUP:\n            console.log(\"deleting cardgroup\")\n            console.log(state.cardgroups)\n            console.log(state.cardgroups.filter(cardgroup => cardgroup.id !== action.payload.id))\n           \n\n            return { \n                ...state,\n                cardgroups: state.cardgroups.filter((cardgroup) => cardgroup.id !== action.payload.id),\n            }\n            // return state;\n        \n        case DELETE_CARDGROUP_ERROR:\n            return state;\n        \n        default:\n            return state;\n    }\n}\n\nexport default cardgroupReducer","\nimport { SET_ALERT, CLEAR_ALERT } from '../actionTypes';\n\nconst initState = {\n    newAlert: false,\n    severity: \"\",\n    text: \"\"\n}\n\nconst alertReducer = (state = initState, action) => {\n\n    switch(action.type){\n        case SET_ALERT:\n            console.log(\"Alert\", action)\n            return {\n                severity: action.payload.severity,\n                text: action.payload.text,\n                newAlert: true,\n            }           \n        case CLEAR_ALERT:  \n            return {\n                ...state,\n                newAlert: false,\n            }\n            \n        default:\n            console.log(\"default alert\")\n            return state\n    }\n}\n\nexport default alertReducer","import { CREATE_PEERREVIEW, LOAD_PEERREVIEWS } from \"../actionTypes\"\n\n\n\nconst initState = {\n    peerreviews: [\n       \n    ]\n}\n\nconst peerreviewReducer = (state = initState, action) => {\n    switch(action.type) {\n        case CREATE_PEERREVIEW:        \n            return { \n                ...state,\n                peerreviews: [...state.peerreviews, action.payload]\n            }\n        case LOAD_PEERREVIEWS:\n            console.log(\"got peerreviews\", action.payload)\n            console.log({...state, peerreviews: action.payload})\n            return {\n                ...state, \n                peerreviews: action.payload\n            }\n            // return state;   \n            // return state;       \n        \n        default:\n            return state;\n    }\n}\n\nexport default peerreviewReducer","import { combineReducers } from \"redux\"\nimport authReducer from \"./authReducer\"\nimport cardReducer from \"./cardReducer\"\nimport cardgroupReducer from \"./cardgroupReducer\"\nimport alertReducer from './alertReducer';\nimport loadingReducer from './loadingReducer';\nimport userReducer from './userReducer';\nimport ratingReducer from './ratingReducer';\nimport peerreviewReducer from './peerreviewReducer';\n\nconst rootReducer = combineReducers({\n    authReducer,\n    cardReducer,\n    cardgroupReducer,\n    alertReducer,\n    loadingReducer,\n    userReducer,\n    ratingReducer,\n    peerreviewReducer,\n});\n\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {createStore, applyMiddleware} from \"redux\"\nimport rootReducer from './store/reducers/rootReducer';\nimport {Provider} from \"react-redux\"\nimport thunk from \"redux-thunk\"\n\n\n// console.log = () => {};\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store = {store}> \n    {/* <React.StrictMode> */}\n      <App />\n    {/* </React.StrictMode> */}\n  </Provider>, \n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}